{"name":"CookieManager","comment":"CookieManager provides a concrete implementation of {@link CookieHandler},\n which separates the storage of cookies from the policy surrounding accepting\n and rejecting cookies. A CookieManager is initialized with a {@link CookieStore}\n which manages storage, and a {@link CookiePolicy} object, which makes\n policy decisions on cookie acceptance/rejection.\n\n \u003cp\u003e The HTTP cookie management in java.net package looks like:\n \u003cblockquote\u003e\n \u003cpre\u003e{@code\n                  use\n CookieHandler \u003c------- HttpURLConnection\n       ^\n       | impl\n       |         use\n CookieManager -------\u003e CookiePolicy\n             |   use\n             |--------\u003e HttpCookie\n             |              ^\n             |              | use\n             |   use        |\n             |--------\u003e CookieStore\n                            ^\n                            | impl\n                            |\n                  Internal in-memory implementation\n }\u003c/pre\u003e\n \u003cul\u003e\n   \u003cli\u003e\n     CookieHandler is at the core of cookie management. User can call\n     CookieHandler.setDefault to set a concrete CookieHanlder implementation\n     to be used.\n   \u003c/li\u003e\n   \u003cli\u003e\n     CookiePolicy.shouldAccept will be called by CookieManager.put to see whether\n     or not one cookie should be accepted and put into cookie store. User can use\n     any of three pre-defined CookiePolicy, namely ACCEPT_ALL, ACCEPT_NONE and\n     ACCEPT_ORIGINAL_SERVER, or user can define his own CookiePolicy implementation\n     and tell CookieManager to use it.\n   \u003c/li\u003e\n   \u003cli\u003e\n     CookieStore is the place where any accepted HTTP cookie is stored in.\n     If not specified when created, a CookieManager instance will use an internal\n     in-memory implementation. Or user can implements one and tell CookieManager\n     to use it.\n   \u003c/li\u003e\n   \u003cli\u003e\n     Currently, only CookieStore.add(URI, HttpCookie) and CookieStore.get(URI)\n     are used by CookieManager. Others are for completeness and might be needed\n     by a more sophisticated CookieStore implementation, e.g. a NetscapeCookieSotre.\n   \u003c/li\u003e\n \u003c/ul\u003e\n \u003c/blockquote\u003e\n\n \u003cp\u003eThere\u0027re various ways user can hook up his own HTTP cookie management behavior, e.g.\n \u003cblockquote\u003e\n \u003cul\u003e\n   \u003cli\u003eUse CookieHandler.setDefault to set a brand new {@link CookieHandler} implementation\n   \u003cli\u003eLet CookieManager be the default {@link CookieHandler} implementation,\n       but implement user\u0027s own {@link CookieStore} and {@link CookiePolicy}\n       and tell default CookieManager to use them:\n     \u003cblockquote\u003e\u003cpre\u003e\n       // this should be done at the beginning of an HTTP session\n       CookieHandler.setDefault(new CookieManager(new MyCookieStore(), new MyCookiePolicy()));\n     \u003c/pre\u003e\u003c/blockquote\u003e\n   \u003cli\u003eLet CookieManager be the default {@link CookieHandler} implementation, but\n       use customized {@link CookiePolicy}:\n     \u003cblockquote\u003e\u003cpre\u003e\n       // this should be done at the beginning of an HTTP session\n       CookieHandler.setDefault(new CookieManager());\n       // this can be done at any point of an HTTP session\n       ((CookieManager)CookieHandler.getDefault()).setCookiePolicy(new MyCookiePolicy());\n     \u003c/pre\u003e\u003c/blockquote\u003e\n \u003c/ul\u003e\n \u003c/blockquote\u003e\n\n \u003cp\u003eThe implementation conforms to \u003ca href\u003d\"http://www.ietf.org/rfc/rfc2965.txt\"\u003eRFC 2965\u003c/a\u003e, section 3.3.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"CookieManager","qualifiedName":"java.net.CookieManager","dimension":"","elementType":{},"package":"java.net","superclass":"java.net.CookieHandler","interfaces":[],"isAbstract":false,"isStatic":false,"since":"1.6","innerClasses":[],"isInnerClass":false,"constructors":[{"name":"CookieManager","comment":"Create a new cookie manager.\n\n \u003cp\u003eThis constructor will create new cookie manager with default\n cookie store and accept policy. The effect is same as\n {@code CookieManager(null, null)}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","parameters":[],"typeParameters":[]},{"name":"CookieManager","comment":"Create a new cookie manager with specified cookie store and cookie policy.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.net.CookieStore, java.net.CookiePolicy)","flatSignature":"(CookieStore, CookiePolicy)","parameters":[{"name":"store","type":{"isPrimitive":false,"simpleName":"CookieStore","qualifiedName":"java.net.CookieStore","dimension":"","elementType":{}}},{"name":"cookiePolicy","type":{"isPrimitive":false,"simpleName":"CookiePolicy","qualifiedName":"java.net.CookiePolicy","dimension":"","elementType":{}}}],"typeParameters":[]}],"fields":[],"methods":[{"name":"setCookiePolicy","comment":"To set the cookie policy of this cookie manager.\n\n \u003cp\u003e A instance of {@code CookieManager} will have\n cookie policy ACCEPT_ORIGINAL_SERVER by default. Users always\n can call this method to set another cookie policy.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.net.CookiePolicy)","flatSignature":"(CookiePolicy)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"cookiePolicy","type":{"isPrimitive":false,"simpleName":"CookiePolicy","qualifiedName":"java.net.CookiePolicy","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getCookieStore","comment":"To retrieve current cookie store.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"CookieStore","qualifiedName":"java.net.CookieStore","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"get","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.net.URI, java.util.Map\u003cjava.lang.String, java.util.List\u003cjava.lang.String\u003e\u003e)","flatSignature":"(URI, Map\u003cString, List\u003cString\u003e\u003e)","returnType":{"isPrimitive":false,"simpleName":"Map","qualifiedName":"java.util.Map","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"uri","type":{"isPrimitive":false,"simpleName":"URI","qualifiedName":"java.net.URI","dimension":"","elementType":{}}},{"name":"requestHeaders","type":{"isPrimitive":false,"simpleName":"Map","qualifiedName":"java.util.Map","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"put","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.net.URI, java.util.Map\u003cjava.lang.String, java.util.List\u003cjava.lang.String\u003e\u003e)","flatSignature":"(URI, Map\u003cString, List\u003cString\u003e\u003e)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"uri","type":{"isPrimitive":false,"simpleName":"URI","qualifiedName":"java.net.URI","dimension":"","elementType":{}}},{"name":"responseHeaders","type":{"isPrimitive":false,"simpleName":"Map","qualifiedName":"java.util.Map","dimension":"","elementType":{}}}],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}