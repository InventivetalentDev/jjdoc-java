{"name":"HttpCookie","comment":"An HttpCookie object represents an HTTP cookie, which carries state\n information between server and user agent. Cookie is widely adopted\n to create stateful sessions.\n\n \u003cp\u003e There are 3 HTTP cookie specifications:\n \u003cblockquote\u003e\n   Netscape draft\u003cbr\u003e\n   RFC 2109 - \u003ca href\u003d\"http://www.ietf.org/rfc/rfc2109.txt\"\u003e\n \u003ci\u003ehttp://www.ietf.org/rfc/rfc2109.txt\u003c/i\u003e\u003c/a\u003e\u003cbr\u003e\n   RFC 2965 - \u003ca href\u003d\"http://www.ietf.org/rfc/rfc2965.txt\"\u003e\n \u003ci\u003ehttp://www.ietf.org/rfc/rfc2965.txt\u003c/i\u003e\u003c/a\u003e\n \u003c/blockquote\u003e\n\n \u003cp\u003e HttpCookie class can accept all these 3 forms of syntax.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"HttpCookie","qualifiedName":"java.net.HttpCookie","dimension":"","elementType":{},"package":"java.net","superclass":"java.lang.Object","interfaces":["java.lang.Cloneable"],"isAbstract":false,"isStatic":false,"since":"1.6","innerClasses":[],"isInnerClass":false,"constructors":[{"name":"HttpCookie","comment":"Constructs a cookie with a specified name and value.\n\n \u003cp\u003e The name must conform to RFC 2965. That means it can contain\n only ASCII alphanumeric characters and cannot contain commas,\n semicolons, or white space or begin with a $ character. The cookie\u0027s\n name cannot be changed after creation.\n\n \u003cp\u003e The value can be anything the server chooses to send. Its\n value is probably of interest only to the server. The cookie\u0027s\n value can be changed after creation with the\n {@code setValue} method.\n\n \u003cp\u003e By default, cookies are created according to the RFC 2965\n cookie specification. The version can be changed with the\n {@code setVersion} method.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.lang.String, java.lang.String)","flatSignature":"(String, String)","parameters":[{"name":"name","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"value","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]}],"fields":[],"methods":[{"name":"parse","comment":"Constructs cookies from set-cookie or set-cookie2 header string.\n RFC 2965 section 3.2.2 set-cookie2 syntax indicates that one header line\n may contain more than one cookie definitions, so this is a static\n utility method instead of another constructor.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":false,"simpleName":"List","qualifiedName":"java.util.List","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[{"name":"header","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"hasExpired","comment":"Reports whether this HTTP cookie has expired or not.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setComment","comment":"Specifies a comment that describes a cookie\u0027s purpose.\n The comment is useful if the browser presents the cookie\n to the user. Comments are not supported by Netscape Version 0 cookies.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"purpose","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getComment","comment":"Returns the comment describing the purpose of this cookie, or\n {@code null} if the cookie has no comment.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setCommentURL","comment":"Specifies a comment URL that describes a cookie\u0027s purpose.\n The comment URL is useful if the browser presents the cookie\n to the user. Comment URL is RFC 2965 only.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"purpose","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getCommentURL","comment":"Returns the comment URL describing the purpose of this cookie, or\n {@code null} if the cookie has no comment URL.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setDiscard","comment":"Specify whether user agent should discard the cookie unconditionally.\n This is RFC 2965 only attribute.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(boolean)","flatSignature":"(boolean)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"discard","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getDiscard","comment":"Returns the discard attribute of the cookie","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setPortlist","comment":"Specify the portlist of the cookie, which restricts the port(s)\n to which a cookie may be sent back in a Cookie header.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"ports","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getPortlist","comment":"Returns the port list attribute of the cookie","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setDomain","comment":"Specifies the domain within which this cookie should be presented.\n\n \u003cp\u003e The form of the domain name is specified by RFC 2965. A domain\n name begins with a dot ({@code .foo.com}) and means that\n the cookie is visible to servers in a specified Domain Name System\n (DNS) zone (for example, {@code www.foo.com}, but not\n {@code a.b.foo.com}). By default, cookies are only returned\n to the server that sent them.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"pattern","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getDomain","comment":"Returns the domain name set for this cookie. The form of the domain name\n is set by RFC 2965.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setMaxAge","comment":"Sets the maximum age of the cookie in seconds.\n\n \u003cp\u003e A positive value indicates that the cookie will expire\n after that many seconds have passed. Note that the value is\n the \u003ci\u003emaximum\u003c/i\u003e age when the cookie will expire, not the cookie\u0027s\n current age.\n\n \u003cp\u003e A negative value means that the cookie is not stored persistently\n and will be deleted when the Web browser exits. A zero value causes the\n cookie to be deleted.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(long)","flatSignature":"(long)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"expiry","type":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getMaxAge","comment":"Returns the maximum age of the cookie, specified in seconds. By default,\n {@code -1} indicating the cookie will persist until browser shutdown.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setPath","comment":"Specifies a path for the cookie to which the client should return\n the cookie.\n\n \u003cp\u003e The cookie is visible to all the pages in the directory\n you specify, and all the pages in that directory\u0027s subdirectories.\n A cookie\u0027s path must include the servlet that set the cookie,\n for example, \u003ci\u003e/catalog\u003c/i\u003e, which makes the cookie\n visible to all directories on the server under \u003ci\u003e/catalog\u003c/i\u003e.\n\n \u003cp\u003e Consult RFC 2965 (available on the Internet) for more\n information on setting path names for cookies.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"uri","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getPath","comment":"Returns the path on the server to which the browser returns this cookie.\n The cookie is visible to all subpaths on the server.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setSecure","comment":"Indicates whether the cookie should only be sent using a secure protocol,\n such as HTTPS or SSL.\n\n \u003cp\u003e The default value is {@code false}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(boolean)","flatSignature":"(boolean)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"flag","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getSecure","comment":"Returns {@code true} if sending this cookie should be restricted to a\n secure protocol, or {@code false} if the it can be sent using any\n protocol.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getName","comment":"Returns the name of the cookie. The name cannot be changed after\n creation.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setValue","comment":"Assigns a new value to a cookie after the cookie is created.\n If you use a binary value, you may want to use BASE64 encoding.\n\n \u003cp\u003e With Version 0 cookies, values should not contain white space,\n brackets, parentheses, equals signs, commas, double quotes, slashes,\n question marks, at signs, colons, and semicolons. Empty values may not\n behave the same way on all browsers.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"newValue","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getValue","comment":"Returns the value of the cookie.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getVersion","comment":"Returns the version of the protocol this cookie complies with. Version 1\n complies with RFC 2965/2109, and version 0 complies with the original\n cookie specification drafted by Netscape. Cookies provided by a browser\n use and identify the browser\u0027s cookie version.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setVersion","comment":"Sets the version of the cookie protocol this cookie complies\n with. Version 0 complies with the original Netscape cookie\n specification. Version 1 complies with RFC 2965/2109.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int)","flatSignature":"(int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"v","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"isHttpOnly","comment":"Returns {@code true} if this cookie contains the \u003ci\u003eHttpOnly\u003c/i\u003e\n attribute. This means that the cookie should not be accessible to\n scripting engines, like javascript.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setHttpOnly","comment":"Indicates whether the cookie should be considered HTTP Only. If set to\n {@code true} it means the cookie should not be accessible to scripting\n engines like javascript.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(boolean)","flatSignature":"(boolean)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"httpOnly","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"domainMatches","comment":"The utility method to check whether a host name is in a domain or not.\n\n \u003cp\u003e This concept is described in the cookie specification.\n To understand the concept, some terminologies need to be defined first:\n \u003cblockquote\u003e\n effective host name \u003d hostname if host name contains dot\u003cbr\u003e\n \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\n \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;or \u003d hostname.local if not\n \u003c/blockquote\u003e\n \u003cp\u003eHost A\u0027s name domain-matches host B\u0027s if:\n \u003cblockquote\u003e\u003cul\u003e\n   \u003cli\u003etheir host name strings string-compare equal; or\u003c/li\u003e\n   \u003cli\u003eA is a HDN string and has the form NB, where N is a non-empty\n   name string, B has the form .B\u0027, and B\u0027 is a HDN string.  (So,\n   x.y.com domain-matches .Y.com but not Y.com.)\u003c/li\u003e\n \u003c/ul\u003e\u003c/blockquote\u003e\n\n \u003cp\u003eA host isn\u0027t in a domain (RFC 2965 sec. 3.3.2) if:\n \u003cblockquote\u003e\u003cul\u003e\n   \u003cli\u003eThe value for the Domain attribute contains no embedded dots,\n   and the value is not .local.\u003c/li\u003e\n   \u003cli\u003eThe effective host name that derives from the request-host does\n   not domain-match the Domain attribute.\u003c/li\u003e\n   \u003cli\u003eThe request-host is a HDN (not IP address) and has the form HD,\n   where D is the value of the Domain attribute, and H is a string\n   that contains one or more dots.\u003c/li\u003e\n \u003c/ul\u003e\u003c/blockquote\u003e\n\n \u003cp\u003eExamples:\n \u003cblockquote\u003e\u003cul\u003e\n   \u003cli\u003eA Set-Cookie2 from request-host y.x.foo.com for Domain\u003d.foo.com\n   would be rejected, because H is y.x and contains a dot.\u003c/li\u003e\n   \u003cli\u003eA Set-Cookie2 from request-host x.foo.com for Domain\u003d.foo.com\n   would be accepted.\u003c/li\u003e\n   \u003cli\u003eA Set-Cookie2 with Domain\u003d.com or Domain\u003d.com., will always be\n   rejected, because there is no embedded dot.\u003c/li\u003e\n   \u003cli\u003eA Set-Cookie2 from request-host example for Domain\u003d.local will\n   be accepted, because the effective host name for the request-\n   host is example.local, and example.local domain-matches .local.\u003c/li\u003e\n \u003c/ul\u003e\u003c/blockquote\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String, java.lang.String)","flatSignature":"(String, String)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[{"name":"domain","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"host","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"toString","comment":"Constructs a cookie header string representation of this cookie,\n which is in the format defined by corresponding cookie specification,\n but without the leading \"Cookie:\" token.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"equals","comment":"Test the equality of two HTTP cookies.\n\n \u003cp\u003e The result is {@code true} only if two cookies come from same domain\n (case-insensitive), have same name (case-insensitive), and have same path\n (case-sensitive).","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.Object)","flatSignature":"(Object)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"obj","type":{"isPrimitive":false,"simpleName":"Object","qualifiedName":"java.lang.Object","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"hashCode","comment":"Returns the hash code of this HTTP cookie. The result is the sum of\n hash code value of three significant components of this cookie: name,\n domain, and path. That is, the hash code is the value of the expression:\n \u003cblockquote\u003e\n getName().toLowerCase().hashCode()\u003cbr\u003e\n + getDomain().toLowerCase().hashCode()\u003cbr\u003e\n + getPath().hashCode()\n \u003c/blockquote\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"clone","comment":"Create and return a copy of this object.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Object","qualifiedName":"java.lang.Object","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}