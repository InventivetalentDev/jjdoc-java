{"name":"CookieHandler","comment":"A CookieHandler object provides a callback mechanism to hook up a\n HTTP state management policy implementation into the HTTP protocol\n handler. The HTTP state management mechanism specifies a way to\n create a stateful session with HTTP requests and responses.\n\n \u003cp\u003eA system-wide CookieHandler that to used by the HTTP protocol\n handler can be registered by doing a\n CookieHandler.setDefault(CookieHandler). The currently registered\n CookieHandler can be retrieved by calling\n CookieHandler.getDefault().\n\n For more information on HTTP state management, see \u003ca\n href\u003d\"http://www.ietf.org/rfc/rfc2965.txt\"\u003e\u003ci\u003eRFC\u0026nbsp;2965: HTTP\n State Management Mechanism\u003c/i\u003e\u003c/a\u003e","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"CookieHandler","qualifiedName":"java.net.CookieHandler","dimension":"","elementType":{},"package":"java.net","superclass":"java.lang.Object","interfaces":[],"isAbstract":true,"isStatic":false,"since":"1.5","innerClasses":[],"isInnerClass":false,"constructors":[{"name":"CookieHandler","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","parameters":[],"typeParameters":[]}],"fields":[],"methods":[{"name":"getDefault","comment":"Gets the system-wide cookie handler.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"CookieHandler","qualifiedName":"java.net.CookieHandler","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[],"typeParameters":[]},{"name":"setDefault","comment":"Sets (or unsets) the system-wide cookie handler.\n\n Note: non-standard http protocol handlers may ignore this setting.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.net.CookieHandler)","flatSignature":"(CookieHandler)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[{"name":"cHandler","type":{"isPrimitive":false,"simpleName":"CookieHandler","qualifiedName":"java.net.CookieHandler","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"get","comment":"Gets all the applicable cookies from a cookie cache for the\n specified uri in the request header.\n\n \u003cP\u003eThe {@code URI} passed as an argument specifies the intended use for\n the cookies. In particular the scheme should reflect whether the cookies\n will be sent over http, https or used in another context like javascript.\n The host part should reflect either the destination of the cookies or\n their origin in the case of javascript.\u003c/P\u003e\n \u003cP\u003eIt is up to the implementation to take into account the {@code URI} and\n the cookies attributes and security settings to determine which ones\n should be returned.\u003c/P\u003e\n\n \u003cP\u003eHTTP protocol implementers should make sure that this method is\n called after all request headers related to choosing cookies\n are added, and before the request is sent.\u003c/P\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.net.URI, java.util.Map\u003cjava.lang.String, java.util.List\u003cjava.lang.String\u003e\u003e)","flatSignature":"(URI, Map\u003cString, List\u003cString\u003e\u003e)","returnType":{"isPrimitive":false,"simpleName":"Map","qualifiedName":"java.util.Map","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"uri","type":{"isPrimitive":false,"simpleName":"URI","qualifiedName":"java.net.URI","dimension":"","elementType":{}}},{"name":"requestHeaders","type":{"isPrimitive":false,"simpleName":"Map","qualifiedName":"java.util.Map","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"put","comment":"Sets all the applicable cookies, examples are response header\n fields that are named Set-Cookie2, present in the response\n headers into a cookie cache.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.net.URI, java.util.Map\u003cjava.lang.String, java.util.List\u003cjava.lang.String\u003e\u003e)","flatSignature":"(URI, Map\u003cString, List\u003cString\u003e\u003e)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"uri","type":{"isPrimitive":false,"simpleName":"URI","qualifiedName":"java.net.URI","dimension":"","elementType":{}}},{"name":"responseHeaders","type":{"isPrimitive":false,"simpleName":"Map","qualifiedName":"java.util.Map","dimension":"","elementType":{}}}],"typeParameters":[]}],"typeParameters":[],"subClasses":["java.net.CookieManager"],"enumConstants":[]}