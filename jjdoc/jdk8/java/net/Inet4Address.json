{"name":"Inet4Address","comment":"This class represents an Internet Protocol version 4 (IPv4) address.\n Defined by \u003ca href\u003d\"http://www.ietf.org/rfc/rfc790.txt\"\u003e\n \u003ci\u003eRFC\u0026nbsp;790: Assigned Numbers\u003c/i\u003e\u003c/a\u003e,\n \u003ca href\u003d\"http://www.ietf.org/rfc/rfc1918.txt\"\u003e\n \u003ci\u003eRFC\u0026nbsp;1918: Address Allocation for Private Internets\u003c/i\u003e\u003c/a\u003e,\n and \u003ca href\u003d\"http://www.ietf.org/rfc/rfc2365.txt\"\u003e\u003ci\u003eRFC\u0026nbsp;2365:\n Administratively Scoped IP Multicast\u003c/i\u003e\u003c/a\u003e\n\n \u003ch3\u003e \u003cA NAME\u003d\"format\"\u003eTextual representation of IP addresses\u003c/a\u003e \u003c/h3\u003e\n\n Textual representation of IPv4 address used as input to methods\n takes one of the following forms:\n\n \u003cblockquote\u003e\u003ctable cellpadding\u003d0 cellspacing\u003d0 summary\u003d\"layout\"\u003e\n \u003ctr\u003e\u003ctd\u003e{@code d.d.d.d}\u003c/td\u003e\u003c/tr\u003e\n \u003ctr\u003e\u003ctd\u003e{@code d.d.d}\u003c/td\u003e\u003c/tr\u003e\n \u003ctr\u003e\u003ctd\u003e{@code d.d}\u003c/td\u003e\u003c/tr\u003e\n \u003ctr\u003e\u003ctd\u003e{@code d}\u003c/td\u003e\u003c/tr\u003e\n \u003c/table\u003e\u003c/blockquote\u003e\n\n \u003cp\u003e When four parts are specified, each is interpreted as a byte of\n data and assigned, from left to right, to the four bytes of an IPv4\n address.\n\n \u003cp\u003e When a three part address is specified, the last part is\n interpreted as a 16-bit quantity and placed in the right most two\n bytes of the network address. This makes the three part address\n format convenient for specifying Class B net- work addresses as\n 128.net.host.\n\n \u003cp\u003e When a two part address is supplied, the last part is\n interpreted as a 24-bit quantity and placed in the right most three\n bytes of the network address. This makes the two part address\n format convenient for specifying Class A network addresses as\n net.host.\n\n \u003cp\u003e When only one part is given, the value is stored directly in\n the network address without any byte rearrangement.\n\n \u003cp\u003e For methods that return a textual representation as output\n value, the first form, i.e. a dotted-quad string, is used.\n\n \u003ch4\u003e The Scope of a Multicast Address \u003c/h4\u003e\n\n Historically the IPv4 TTL field in the IP header has doubled as a\n multicast scope field: a TTL of 0 means node-local, 1 means\n link-local, up through 32 means site-local, up through 64 means\n region-local, up through 128 means continent-local, and up through\n 255 are global. However, the administrative scoping is preferred.\n Please refer to \u003ca href\u003d\"http://www.ietf.org/rfc/rfc2365.txt\"\u003e\n \u003ci\u003eRFC\u0026nbsp;2365: Administratively Scoped IP Multicast\u003c/i\u003e\u003c/a\u003e","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"Inet4Address","qualifiedName":"java.net.Inet4Address","dimension":"","elementType":{},"package":"java.net","superclass":"java.net.InetAddress","interfaces":[],"isAbstract":false,"isStatic":false,"since":"1.4","innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"isMulticastAddress","comment":"Utility routine to check if the InetAddress is an\n IP multicast address. IP multicast address is a Class D\n address i.e first four bits of the address are 1110.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"isAnyLocalAddress","comment":"Utility routine to check if the InetAddress in a wildcard address.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"isLoopbackAddress","comment":"Utility routine to check if the InetAddress is a loopback address.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"isLinkLocalAddress","comment":"Utility routine to check if the InetAddress is an link local address.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"isSiteLocalAddress","comment":"Utility routine to check if the InetAddress is a site local address.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"isMCGlobal","comment":"Utility routine to check if the multicast address has global scope.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"isMCNodeLocal","comment":"Utility routine to check if the multicast address has node scope.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"isMCLinkLocal","comment":"Utility routine to check if the multicast address has link scope.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"isMCSiteLocal","comment":"Utility routine to check if the multicast address has site scope.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"isMCOrgLocal","comment":"Utility routine to check if the multicast address has organization scope.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getAddress","comment":"Returns the raw IP address of this {@code InetAddress}\n object. The result is in network byte order: the highest order\n byte of the address is in {@code getAddress()[0]}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"[]","elementType":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"","elementType":{}}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getHostAddress","comment":"Returns the IP address string in textual presentation form.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"hashCode","comment":"Returns a hashcode for this IP address.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"equals","comment":"Compares this object against the specified object.\n The result is {@code true} if and only if the argument is\n not {@code null} and it represents the same IP address as\n this object.\n \u003cp\u003e\n Two instances of {@code InetAddress} represent the same IP\n address if the length of the byte arrays returned by\n {@code getAddress} is the same for both, and each of the\n array components is the same for the byte arrays.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.Object)","flatSignature":"(Object)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"obj","type":{"isPrimitive":false,"simpleName":"Object","qualifiedName":"java.lang.Object","dimension":"","elementType":{}}}],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}