{"name":"URLDecoder","comment":"Utility class for HTML form decoding. This class contains static methods\n for decoding a String from the \u003cCODE\u003eapplication/x-www-form-urlencoded\u003c/CODE\u003e\n MIME format.\n \u003cp\u003e\n The conversion process is the reverse of that used by the URLEncoder class. It is assumed\n that all characters in the encoded string are one of the following:\n \u0026quot;{@code a}\u0026quot; through \u0026quot;{@code z}\u0026quot;,\n \u0026quot;{@code A}\u0026quot; through \u0026quot;{@code Z}\u0026quot;,\n \u0026quot;{@code 0}\u0026quot; through \u0026quot;{@code 9}\u0026quot;, and\n \u0026quot;{@code -}\u0026quot;, \u0026quot;{@code _}\u0026quot;,\n \u0026quot;{@code .}\u0026quot;, and \u0026quot;{@code *}\u0026quot;. The\n character \u0026quot;{@code %}\u0026quot; is allowed but is interpreted\n as the start of a special escaped sequence.\n \u003cp\u003e\n The following rules are applied in the conversion:\n\n \u003cul\u003e\n \u003cli\u003eThe alphanumeric characters \u0026quot;{@code a}\u0026quot; through\n     \u0026quot;{@code z}\u0026quot;, \u0026quot;{@code A}\u0026quot; through\n     \u0026quot;{@code Z}\u0026quot; and \u0026quot;{@code 0}\u0026quot;\n     through \u0026quot;{@code 9}\u0026quot; remain the same.\n \u003cli\u003eThe special characters \u0026quot;{@code .}\u0026quot;,\n     \u0026quot;{@code -}\u0026quot;, \u0026quot;{@code *}\u0026quot;, and\n     \u0026quot;{@code _}\u0026quot; remain the same.\n \u003cli\u003eThe plus sign \u0026quot;{@code +}\u0026quot; is converted into a\n     space character \u0026quot; \u0026nbsp; \u0026quot; .\n \u003cli\u003eA sequence of the form \"\u003ci\u003e{@code %xy}\u003c/i\u003e\" will be\n     treated as representing a byte where \u003ci\u003exy\u003c/i\u003e is the two-digit\n     hexadecimal representation of the 8 bits. Then, all substrings\n     that contain one or more of these byte sequences consecutively\n     will be replaced by the character(s) whose encoding would result\n     in those consecutive bytes.\n     The encoding scheme used to decode these characters may be specified,\n     or if unspecified, the default encoding of the platform will be used.\n \u003c/ul\u003e\n \u003cp\u003e\n There are two possible ways in which this decoder could deal with\n illegal strings.  It could either leave illegal characters alone or\n it could throw an {@link java.lang.IllegalArgumentException}.\n Which approach the decoder takes is left to the\n implementation.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"URLDecoder","qualifiedName":"java.net.URLDecoder","dimension":"","elementType":{},"package":"java.net","superclass":"java.lang.Object","interfaces":[],"isAbstract":false,"isStatic":false,"since":"1.2","innerClasses":[],"isInnerClass":false,"constructors":[{"name":"URLDecoder","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","parameters":[],"typeParameters":[]}],"fields":[],"methods":[{"name":"decode","comment":"Decodes a {@code x-www-form-urlencoded} string.\n The platform\u0027s default encoding is used to determine what characters\n are represented by any consecutive sequences of the form\n \"\u003ci\u003e{@code %xy}\u003c/i\u003e\".","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[{"name":"s","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"decode","comment":"Decodes a {@code application/x-www-form-urlencoded} string using a specific\n encoding scheme.\n The supplied encoding is used to determine\n what characters are represented by any consecutive sequences of the\n form \"\u003ci\u003e{@code %xy}\u003c/i\u003e\".\n \u003cp\u003e\n \u003cem\u003e\u003cstrong\u003eNote:\u003c/strong\u003e The \u003ca href\u003d\n \"http://www.w3.org/TR/html40/appendix/notes.html#non-ascii-chars\"\u003e\n World Wide Web Consortium Recommendation\u003c/a\u003e states that\n UTF-8 should be used. Not doing so may introduce\n incompatibilities.\u003c/em\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String, java.lang.String)","flatSignature":"(String, String)","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[{"name":"s","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"enc","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}