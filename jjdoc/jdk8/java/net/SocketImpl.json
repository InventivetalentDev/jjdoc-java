{"name":"SocketImpl","comment":"The abstract class {@code SocketImpl} is a common superclass\n of all classes that actually implement sockets. It is used to\n create both client and server sockets.\n \u003cp\u003e\n A \"plain\" socket implements these methods exactly as\n described, without attempting to go through a firewall or proxy.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"SocketImpl","qualifiedName":"java.net.SocketImpl","dimension":"","elementType":{},"package":"java.net","superclass":"java.lang.Object","interfaces":["java.net.SocketOptions"],"isAbstract":true,"isStatic":false,"since":"JDK1.0","innerClasses":[],"isInnerClass":false,"constructors":[{"name":"SocketImpl","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","parameters":[],"typeParameters":[]}],"fields":[],"methods":[{"name":"toString","comment":"Returns the address and port of this socket as a {@code String}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}