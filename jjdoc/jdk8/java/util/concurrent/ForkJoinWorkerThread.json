{"name":"ForkJoinWorkerThread","comment":"A thread managed by a {@link ForkJoinPool}, which executes\n {@link ForkJoinTask}s.\n This class is subclassable solely for the sake of adding\n functionality -- there are no overridable methods dealing with\n scheduling or execution.  However, you can override initialization\n and termination methods surrounding the main task processing loop.\n If you do create such a subclass, you will also need to supply a\n custom {@link ForkJoinPool.ForkJoinWorkerThreadFactory} to\n {@linkplain ForkJoinPool#ForkJoinPool use it} in a {@code ForkJoinPool}.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"ForkJoinWorkerThread","qualifiedName":"java.util.concurrent.ForkJoinWorkerThread","dimension":"","elementType":{},"package":"java.util.concurrent","superclass":"java.lang.Thread","interfaces":[],"isAbstract":false,"isStatic":false,"since":"1.7","innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"getPool","comment":"Returns the pool hosting this thread.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"ForkJoinPool","qualifiedName":"java.util.concurrent.ForkJoinPool","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getPoolIndex","comment":"Returns the unique index number of this thread in its pool.\n The returned value ranges from zero to the maximum number of\n threads (minus one) that may exist in the pool, and does not\n change during the lifetime of the thread.  This method may be\n useful for applications that track status or collect results\n per-worker-thread rather than per-task.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"run","comment":"This method is required to be public, but should never be\n called explicitly. It performs the main run loop to execute\n {@link ForkJoinTask}s.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}