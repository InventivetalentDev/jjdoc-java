{"name":"Delayed","comment":"A mix-in style interface for marking objects that should be\n acted upon after a given delay.\n\n \u003cp\u003eAn implementation of this interface must define a\n {@code compareTo} method that provides an ordering consistent with\n its {@code getDelay} method.","isClass":false,"isInterface":true,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"Delayed","qualifiedName":"java.util.concurrent.Delayed","dimension":"","elementType":{},"package":"java.util.concurrent","interfaces":["java.lang.Comparable"],"isAbstract":true,"isStatic":false,"since":"1.5","innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"getDelay","comment":"Returns the remaining delay associated with this object, in the\n given time unit.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.util.concurrent.TimeUnit)","flatSignature":"(TimeUnit)","returnType":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"unit","type":{"isPrimitive":false,"simpleName":"TimeUnit","qualifiedName":"java.util.concurrent.TimeUnit","dimension":"","elementType":{}}}],"typeParameters":[]}],"typeParameters":[],"subInterfaces":["java.util.concurrent.ScheduledFuture"],"enumConstants":[]}