{"name":"RunnableScheduledFuture","comment":"A {@link ScheduledFuture} that is {@link Runnable}. Successful\n execution of the {@code run} method causes completion of the\n {@code Future} and allows access to its results.","isClass":false,"isInterface":true,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"RunnableScheduledFuture","qualifiedName":"java.util.concurrent.RunnableScheduledFuture","dimension":"","elementType":{},"package":"java.util.concurrent","interfaces":["java.util.concurrent.RunnableFuture","java.util.concurrent.ScheduledFuture"],"isAbstract":true,"isStatic":false,"since":"1.6","innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"isPeriodic","comment":"Returns {@code true} if this task is periodic. A periodic task may\n re-run according to some schedule. A non-periodic task can be\n run only once.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[{"name":"V","bounds":[]}],"enumConstants":[]}