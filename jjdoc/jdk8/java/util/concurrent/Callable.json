{"name":"Callable","comment":"A task that returns a result and may throw an exception.\n Implementors define a single method with no arguments called\n {@code call}.\n\n \u003cp\u003eThe {@code Callable} interface is similar to {@link\n java.lang.Runnable}, in that both are designed for classes whose\n instances are potentially executed by another thread.  A\n {@code Runnable}, however, does not return a result and cannot\n throw a checked exception.\n\n \u003cp\u003eThe {@link Executors} class contains utility methods to\n convert from other common forms to {@code Callable} classes.","isClass":false,"isInterface":true,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"Callable","qualifiedName":"java.util.concurrent.Callable","dimension":"","elementType":{},"package":"java.util.concurrent","interfaces":[],"isAbstract":true,"isStatic":false,"since":"1.5","innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"call","comment":"Computes a result, or throws an exception if unable to do so.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"V","qualifiedName":"V","dimension":"","elementType":{},"typeVariable":{"name":"V","bounds":[]}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[{"name":"V","bounds":[]}],"enumConstants":[]}