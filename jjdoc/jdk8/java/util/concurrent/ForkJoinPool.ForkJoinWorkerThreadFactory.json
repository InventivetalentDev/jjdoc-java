{"name":"ForkJoinPool.ForkJoinWorkerThreadFactory","comment":"Factory for creating new {@link ForkJoinWorkerThread}s.\n A {@code ForkJoinWorkerThreadFactory} must be defined and used\n for {@code ForkJoinWorkerThread} subclasses that extend base\n functionality or initialize threads with different contexts.","isClass":false,"isInterface":true,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"ForkJoinWorkerThreadFactory","qualifiedName":"java.util.concurrent.ForkJoinPool.ForkJoinWorkerThreadFactory","dimension":"","elementType":{},"package":"java.util.concurrent","interfaces":[],"isAbstract":true,"isStatic":true,"innerClasses":[],"isInnerClass":true,"constructors":[],"fields":[],"methods":[{"name":"newThread","comment":"Returns a new worker thread operating in the given pool.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.util.concurrent.ForkJoinPool)","flatSignature":"(ForkJoinPool)","returnType":{"isPrimitive":false,"simpleName":"ForkJoinWorkerThread","qualifiedName":"java.util.concurrent.ForkJoinWorkerThread","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"pool","type":{"isPrimitive":false,"simpleName":"ForkJoinPool","qualifiedName":"java.util.concurrent.ForkJoinPool","dimension":"","elementType":{}}}],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}