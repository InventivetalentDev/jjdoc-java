{"name":"Observer","comment":"A class can implement the \u003ccode\u003eObserver\u003c/code\u003e interface when it\n wants to be informed of changes in observable objects.","isClass":false,"isInterface":true,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"Observer","qualifiedName":"java.util.Observer","dimension":"","elementType":{},"package":"java.util","interfaces":[],"isAbstract":true,"isStatic":false,"since":"JDK1.0","innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"update","comment":"This method is called whenever the observed object is changed. An\n application calls an \u003ctt\u003eObservable\u003c/tt\u003e object\u0027s\n \u003ccode\u003enotifyObservers\u003c/code\u003e method to have all the object\u0027s\n observers notified of the change.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.util.Observable, java.lang.Object)","flatSignature":"(Observable, Object)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"o","type":{"isPrimitive":false,"simpleName":"Observable","qualifiedName":"java.util.Observable","dimension":"","elementType":{}}},{"name":"arg","type":{"isPrimitive":false,"simpleName":"Object","qualifiedName":"java.lang.Object","dimension":"","elementType":{}}}],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}