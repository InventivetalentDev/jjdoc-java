{"name":"PrimitiveIterator","comment":"A base type for primitive specializations of {@code Iterator}.  Specialized\n subtypes are provided for {@link OfInt int}, {@link OfLong long}, and\n {@link OfDouble double} values.\n\n \u003cp\u003eThe specialized subtype default implementations of {@link Iterator#next}\n and {@link Iterator#forEachRemaining(java.util.function.Consumer)} box\n primitive values to instances of their corresponding wrapper class.  Such\n boxing may offset any advantages gained when using the primitive\n specializations.  To avoid boxing, the corresponding primitive-based methods\n should be used.  For example, {@link PrimitiveIterator.OfInt#nextInt()} and\n {@link PrimitiveIterator.OfInt#forEachRemaining(java.util.function.IntConsumer)}\n should be used in preference to {@link PrimitiveIterator.OfInt#next()} and\n {@link PrimitiveIterator.OfInt#forEachRemaining(java.util.function.Consumer)}.\n\n \u003cp\u003eIteration of primitive values using boxing-based methods\n {@link Iterator#next next()} and\n {@link Iterator#forEachRemaining(java.util.function.Consumer) forEachRemaining()},\n does not affect the order in which the values, transformed to boxed values,\n are encountered.","isClass":false,"isInterface":true,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"PrimitiveIterator","qualifiedName":"java.util.PrimitiveIterator","dimension":"","elementType":{},"package":"java.util","interfaces":["java.util.Iterator"],"isAbstract":true,"isStatic":false,"since":"1.8","innerClasses":["java.util.PrimitiveIterator.OfInt","java.util.PrimitiveIterator.OfLong","java.util.PrimitiveIterator.OfDouble"],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"forEachRemaining","comment":"Performs the given action for each remaining element, in the order\n elements occur when iterating, until all elements have been processed\n or the action throws an exception.  Errors or runtime exceptions\n thrown by the action are relayed to the caller.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(T_CONS)","flatSignature":"(T_CONS)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"action","type":{"isPrimitive":false,"simpleName":"T_CONS","qualifiedName":"T_CONS","dimension":"","elementType":{},"typeVariable":{"name":"T_CONS","bounds":[]}}}],"typeParameters":[]}],"typeParameters":[{"name":"T","bounds":[]},{"name":"T_CONS","bounds":[]}],"subInterfaces":["java.util.PrimitiveIterator.OfInt","java.util.PrimitiveIterator.OfLong","java.util.PrimitiveIterator.OfDouble"],"enumConstants":[]}