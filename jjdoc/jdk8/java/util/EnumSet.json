{"name":"EnumSet","comment":"A specialized {@link Set} implementation for use with enum types.  All of\n the elements in an enum set must come from a single enum type that is\n specified, explicitly or implicitly, when the set is created.  Enum sets\n are represented internally as bit vectors.  This representation is\n extremely compact and efficient. The space and time performance of this\n class should be good enough to allow its use as a high-quality, typesafe\n alternative to traditional \u003ctt\u003eint\u003c/tt\u003e-based \"bit flags.\"  Even bulk\n operations (such as \u003ctt\u003econtainsAll\u003c/tt\u003e and \u003ctt\u003eretainAll\u003c/tt\u003e) should\n run very quickly if their argument is also an enum set.\n\n \u003cp\u003eThe iterator returned by the \u003ctt\u003eiterator\u003c/tt\u003e method traverses the\n elements in their \u003ci\u003enatural order\u003c/i\u003e (the order in which the enum\n constants are declared).  The returned iterator is \u003ci\u003eweakly\n consistent\u003c/i\u003e: it will never throw {@link ConcurrentModificationException}\n and it may or may not show the effects of any modifications to the set that\n occur while the iteration is in progress.\n\n \u003cp\u003eNull elements are not permitted.  Attempts to insert a null element\n will throw {@link NullPointerException}.  Attempts to test for the\n presence of a null element or to remove one will, however, function\n properly.\n\n \u003cP\u003eLike most collection implementations, \u003ctt\u003eEnumSet\u003c/tt\u003e is not\n synchronized.  If multiple threads access an enum set concurrently, and at\n least one of the threads modifies the set, it should be synchronized\n externally.  This is typically accomplished by synchronizing on some\n object that naturally encapsulates the enum set.  If no such object exists,\n the set should be \"wrapped\" using the {@link Collections#synchronizedSet}\n method.  This is best done at creation time, to prevent accidental\n unsynchronized access:\n\n \u003cpre\u003e\n Set\u0026lt;MyEnum\u0026gt; s \u003d Collections.synchronizedSet(EnumSet.noneOf(MyEnum.class));\n \u003c/pre\u003e\n\n \u003cp\u003eImplementation note: All basic operations execute in constant time.\n They are likely (though not guaranteed) to be much faster than their\n {@link HashSet} counterparts.  Even bulk operations execute in\n constant time if their argument is also an enum set.\n\n \u003cp\u003eThis class is a member of the\n \u003ca href\u003d\"{@docRoot}/../technotes/guides/collections/index.html\"\u003e\n Java Collections Framework\u003c/a\u003e.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"EnumSet","qualifiedName":"java.util.EnumSet","dimension":"","elementType":{},"package":"java.util","superclass":"java.util.AbstractSet","interfaces":["java.lang.Cloneable","java.io.Serializable"],"isAbstract":true,"isStatic":false,"since":"1.5","innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"noneOf","comment":"Creates an empty enum set with the specified element type.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.Class\u003cE\u003e)","flatSignature":"(Class\u003cE\u003e)","returnType":{"isPrimitive":false,"simpleName":"EnumSet","qualifiedName":"java.util.EnumSet","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[{"name":"elementType","type":{"isPrimitive":false,"simpleName":"Class","qualifiedName":"java.lang.Class","dimension":"","elementType":{}}}],"typeParameters":[{"name":"E","bounds":["java.lang.Enum"]}]},{"name":"allOf","comment":"Creates an enum set containing all of the elements in the specified\n element type.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.Class\u003cE\u003e)","flatSignature":"(Class\u003cE\u003e)","returnType":{"isPrimitive":false,"simpleName":"EnumSet","qualifiedName":"java.util.EnumSet","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[{"name":"elementType","type":{"isPrimitive":false,"simpleName":"Class","qualifiedName":"java.lang.Class","dimension":"","elementType":{}}}],"typeParameters":[{"name":"E","bounds":["java.lang.Enum"]}]},{"name":"copyOf","comment":"Creates an enum set with the same element type as the specified enum\n set, initially containing the same elements (if any).","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.util.EnumSet\u003cE\u003e)","flatSignature":"(EnumSet\u003cE\u003e)","returnType":{"isPrimitive":false,"simpleName":"EnumSet","qualifiedName":"java.util.EnumSet","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[{"name":"s","type":{"isPrimitive":false,"simpleName":"EnumSet","qualifiedName":"java.util.EnumSet","dimension":"","elementType":{}}}],"typeParameters":[{"name":"E","bounds":["java.lang.Enum"]}]},{"name":"copyOf","comment":"Creates an enum set initialized from the specified collection.  If\n the specified collection is an \u003ctt\u003eEnumSet\u003c/tt\u003e instance, this static\n factory method behaves identically to {@link #copyOf(EnumSet)}.\n Otherwise, the specified collection must contain at least one element\n (in order to determine the new enum set\u0027s element type).","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.util.Collection\u003cE\u003e)","flatSignature":"(Collection\u003cE\u003e)","returnType":{"isPrimitive":false,"simpleName":"EnumSet","qualifiedName":"java.util.EnumSet","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[{"name":"c","type":{"isPrimitive":false,"simpleName":"Collection","qualifiedName":"java.util.Collection","dimension":"","elementType":{}}}],"typeParameters":[{"name":"E","bounds":["java.lang.Enum"]}]},{"name":"complementOf","comment":"Creates an enum set with the same element type as the specified enum\n set, initially containing all the elements of this type that are\n \u003ci\u003enot\u003c/i\u003e contained in the specified set.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.util.EnumSet\u003cE\u003e)","flatSignature":"(EnumSet\u003cE\u003e)","returnType":{"isPrimitive":false,"simpleName":"EnumSet","qualifiedName":"java.util.EnumSet","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[{"name":"s","type":{"isPrimitive":false,"simpleName":"EnumSet","qualifiedName":"java.util.EnumSet","dimension":"","elementType":{}}}],"typeParameters":[{"name":"E","bounds":["java.lang.Enum"]}]},{"name":"of","comment":"Creates an enum set initially containing the specified element.\n\n Overloadings of this method exist to initialize an enum set with\n one through five elements.  A sixth overloading is provided that\n uses the varargs feature.  This overloading may be used to create\n an enum set initially containing an arbitrary number of elements, but\n is likely to run slower than the overloadings that do not use varargs.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(E)","flatSignature":"(E)","returnType":{"isPrimitive":false,"simpleName":"EnumSet","qualifiedName":"java.util.EnumSet","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[{"name":"e","type":{"isPrimitive":false,"simpleName":"E","qualifiedName":"E","dimension":"","elementType":{},"typeVariable":{"name":"E","bounds":["java.lang.Enum"]}}}],"typeParameters":[{"name":"E","bounds":["java.lang.Enum"]}]},{"name":"of","comment":"Creates an enum set initially containing the specified elements.\n\n Overloadings of this method exist to initialize an enum set with\n one through five elements.  A sixth overloading is provided that\n uses the varargs feature.  This overloading may be used to create\n an enum set initially containing an arbitrary number of elements, but\n is likely to run slower than the overloadings that do not use varargs.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(E, E)","flatSignature":"(E, E)","returnType":{"isPrimitive":false,"simpleName":"EnumSet","qualifiedName":"java.util.EnumSet","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[{"name":"e1","type":{"isPrimitive":false,"simpleName":"E","qualifiedName":"E","dimension":"","elementType":{},"typeVariable":{"name":"E","bounds":["java.lang.Enum"]}}},{"name":"e2","type":{"isPrimitive":false,"simpleName":"E","qualifiedName":"E","dimension":"","elementType":{},"typeVariable":{"name":"E","bounds":["java.lang.Enum"]}}}],"typeParameters":[{"name":"E","bounds":["java.lang.Enum"]}]},{"name":"of","comment":"Creates an enum set initially containing the specified elements.\n\n Overloadings of this method exist to initialize an enum set with\n one through five elements.  A sixth overloading is provided that\n uses the varargs feature.  This overloading may be used to create\n an enum set initially containing an arbitrary number of elements, but\n is likely to run slower than the overloadings that do not use varargs.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(E, E, E)","flatSignature":"(E, E, E)","returnType":{"isPrimitive":false,"simpleName":"EnumSet","qualifiedName":"java.util.EnumSet","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[{"name":"e1","type":{"isPrimitive":false,"simpleName":"E","qualifiedName":"E","dimension":"","elementType":{},"typeVariable":{"name":"E","bounds":["java.lang.Enum"]}}},{"name":"e2","type":{"isPrimitive":false,"simpleName":"E","qualifiedName":"E","dimension":"","elementType":{},"typeVariable":{"name":"E","bounds":["java.lang.Enum"]}}},{"name":"e3","type":{"isPrimitive":false,"simpleName":"E","qualifiedName":"E","dimension":"","elementType":{},"typeVariable":{"name":"E","bounds":["java.lang.Enum"]}}}],"typeParameters":[{"name":"E","bounds":["java.lang.Enum"]}]},{"name":"of","comment":"Creates an enum set initially containing the specified elements.\n\n Overloadings of this method exist to initialize an enum set with\n one through five elements.  A sixth overloading is provided that\n uses the varargs feature.  This overloading may be used to create\n an enum set initially containing an arbitrary number of elements, but\n is likely to run slower than the overloadings that do not use varargs.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(E, E, E, E)","flatSignature":"(E, E, E, E)","returnType":{"isPrimitive":false,"simpleName":"EnumSet","qualifiedName":"java.util.EnumSet","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[{"name":"e1","type":{"isPrimitive":false,"simpleName":"E","qualifiedName":"E","dimension":"","elementType":{},"typeVariable":{"name":"E","bounds":["java.lang.Enum"]}}},{"name":"e2","type":{"isPrimitive":false,"simpleName":"E","qualifiedName":"E","dimension":"","elementType":{},"typeVariable":{"name":"E","bounds":["java.lang.Enum"]}}},{"name":"e3","type":{"isPrimitive":false,"simpleName":"E","qualifiedName":"E","dimension":"","elementType":{},"typeVariable":{"name":"E","bounds":["java.lang.Enum"]}}},{"name":"e4","type":{"isPrimitive":false,"simpleName":"E","qualifiedName":"E","dimension":"","elementType":{},"typeVariable":{"name":"E","bounds":["java.lang.Enum"]}}}],"typeParameters":[{"name":"E","bounds":["java.lang.Enum"]}]},{"name":"of","comment":"Creates an enum set initially containing the specified elements.\n\n Overloadings of this method exist to initialize an enum set with\n one through five elements.  A sixth overloading is provided that\n uses the varargs feature.  This overloading may be used to create\n an enum set initially containing an arbitrary number of elements, but\n is likely to run slower than the overloadings that do not use varargs.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(E, E, E, E, E)","flatSignature":"(E, E, E, E, E)","returnType":{"isPrimitive":false,"simpleName":"EnumSet","qualifiedName":"java.util.EnumSet","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[{"name":"e1","type":{"isPrimitive":false,"simpleName":"E","qualifiedName":"E","dimension":"","elementType":{},"typeVariable":{"name":"E","bounds":["java.lang.Enum"]}}},{"name":"e2","type":{"isPrimitive":false,"simpleName":"E","qualifiedName":"E","dimension":"","elementType":{},"typeVariable":{"name":"E","bounds":["java.lang.Enum"]}}},{"name":"e3","type":{"isPrimitive":false,"simpleName":"E","qualifiedName":"E","dimension":"","elementType":{},"typeVariable":{"name":"E","bounds":["java.lang.Enum"]}}},{"name":"e4","type":{"isPrimitive":false,"simpleName":"E","qualifiedName":"E","dimension":"","elementType":{},"typeVariable":{"name":"E","bounds":["java.lang.Enum"]}}},{"name":"e5","type":{"isPrimitive":false,"simpleName":"E","qualifiedName":"E","dimension":"","elementType":{},"typeVariable":{"name":"E","bounds":["java.lang.Enum"]}}}],"typeParameters":[{"name":"E","bounds":["java.lang.Enum"]}]},{"name":"of","comment":"Creates an enum set initially containing the specified elements.\n This factory, whose parameter list uses the varargs feature, may\n be used to create an enum set initially containing an arbitrary\n number of elements, but it is likely to run slower than the overloadings\n that do not use varargs.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(E, E...)","flatSignature":"(E, E...)","returnType":{"isPrimitive":false,"simpleName":"EnumSet","qualifiedName":"java.util.EnumSet","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[{"name":"first","type":{"isPrimitive":false,"simpleName":"E","qualifiedName":"E","dimension":"","elementType":{},"typeVariable":{"name":"E","bounds":["java.lang.Enum"]}}},{"name":"rest","type":{"isPrimitive":false,"simpleName":"E","qualifiedName":"E","dimension":"[]","elementType":{"isPrimitive":false,"simpleName":"E","qualifiedName":"E","dimension":"","elementType":{},"typeVariable":{"name":"E","bounds":["java.lang.Enum"]}},"typeVariable":{"name":"E","bounds":["java.lang.Enum"]}}}],"typeParameters":[{"name":"E","bounds":["java.lang.Enum"]}]},{"name":"range","comment":"Creates an enum set initially containing all of the elements in the\n range defined by the two specified endpoints.  The returned set will\n contain the endpoints themselves, which may be identical but must not\n be out of order.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(E, E)","flatSignature":"(E, E)","returnType":{"isPrimitive":false,"simpleName":"EnumSet","qualifiedName":"java.util.EnumSet","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[{"name":"from","type":{"isPrimitive":false,"simpleName":"E","qualifiedName":"E","dimension":"","elementType":{},"typeVariable":{"name":"E","bounds":["java.lang.Enum"]}}},{"name":"to","type":{"isPrimitive":false,"simpleName":"E","qualifiedName":"E","dimension":"","elementType":{},"typeVariable":{"name":"E","bounds":["java.lang.Enum"]}}}],"typeParameters":[{"name":"E","bounds":["java.lang.Enum"]}]},{"name":"clone","comment":"Returns a copy of this set.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"EnumSet","qualifiedName":"java.util.EnumSet","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[{"name":"E","bounds":["java.lang.Enum"]}],"enumConstants":[]}