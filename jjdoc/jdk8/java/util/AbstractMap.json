{"name":"AbstractMap","comment":"This class provides a skeletal implementation of the \u003ctt\u003eMap\u003c/tt\u003e\n interface, to minimize the effort required to implement this interface.\n\n \u003cp\u003eTo implement an unmodifiable map, the programmer needs only to extend this\n class and provide an implementation for the \u003ctt\u003eentrySet\u003c/tt\u003e method, which\n returns a set-view of the map\u0027s mappings.  Typically, the returned set\n will, in turn, be implemented atop \u003ctt\u003eAbstractSet\u003c/tt\u003e.  This set should\n not support the \u003ctt\u003eadd\u003c/tt\u003e or \u003ctt\u003eremove\u003c/tt\u003e methods, and its iterator\n should not support the \u003ctt\u003eremove\u003c/tt\u003e method.\n\n \u003cp\u003eTo implement a modifiable map, the programmer must additionally override\n this class\u0027s \u003ctt\u003eput\u003c/tt\u003e method (which otherwise throws an\n \u003ctt\u003eUnsupportedOperationException\u003c/tt\u003e), and the iterator returned by\n \u003ctt\u003eentrySet().iterator()\u003c/tt\u003e must additionally implement its\n \u003ctt\u003eremove\u003c/tt\u003e method.\n\n \u003cp\u003eThe programmer should generally provide a void (no argument) and map\n constructor, as per the recommendation in the \u003ctt\u003eMap\u003c/tt\u003e interface\n specification.\n\n \u003cp\u003eThe documentation for each non-abstract method in this class describes its\n implementation in detail.  Each of these methods may be overridden if the\n map being implemented admits a more efficient implementation.\n\n \u003cp\u003eThis class is a member of the\n \u003ca href\u003d\"{@docRoot}/../technotes/guides/collections/index.html\"\u003e\n Java Collections Framework\u003c/a\u003e.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"AbstractMap","qualifiedName":"java.util.AbstractMap","dimension":"","elementType":{},"package":"java.util","superclass":"java.lang.Object","interfaces":["java.util.Map"],"isAbstract":true,"isStatic":false,"since":"1.2","innerClasses":["java.util.AbstractMap.SimpleEntry","java.util.AbstractMap.SimpleImmutableEntry"],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"size","comment":"{@inheritDoc}","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"isEmpty","comment":"{@inheritDoc}","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"containsValue","comment":"{@inheritDoc}","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.Object)","flatSignature":"(Object)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"value","type":{"isPrimitive":false,"simpleName":"Object","qualifiedName":"java.lang.Object","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"containsKey","comment":"{@inheritDoc}","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.Object)","flatSignature":"(Object)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"key","type":{"isPrimitive":false,"simpleName":"Object","qualifiedName":"java.lang.Object","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"get","comment":"{@inheritDoc}","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.Object)","flatSignature":"(Object)","returnType":{"isPrimitive":false,"simpleName":"V","qualifiedName":"V","dimension":"","elementType":{},"typeVariable":{"name":"V","bounds":[]}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"key","type":{"isPrimitive":false,"simpleName":"Object","qualifiedName":"java.lang.Object","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"put","comment":"{@inheritDoc}","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(K, V)","flatSignature":"(K, V)","returnType":{"isPrimitive":false,"simpleName":"V","qualifiedName":"V","dimension":"","elementType":{},"typeVariable":{"name":"V","bounds":[]}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"key","type":{"isPrimitive":false,"simpleName":"K","qualifiedName":"K","dimension":"","elementType":{},"typeVariable":{"name":"K","bounds":[]}}},{"name":"value","type":{"isPrimitive":false,"simpleName":"V","qualifiedName":"V","dimension":"","elementType":{},"typeVariable":{"name":"V","bounds":[]}}}],"typeParameters":[]},{"name":"remove","comment":"{@inheritDoc}","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.Object)","flatSignature":"(Object)","returnType":{"isPrimitive":false,"simpleName":"V","qualifiedName":"V","dimension":"","elementType":{},"typeVariable":{"name":"V","bounds":[]}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"key","type":{"isPrimitive":false,"simpleName":"Object","qualifiedName":"java.lang.Object","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"putAll","comment":"{@inheritDoc}","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.util.Map\u003c? extends K, ? extends V\u003e)","flatSignature":"(Map\u003c? extends K, ? extends V\u003e)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"m","type":{"isPrimitive":false,"simpleName":"Map","qualifiedName":"java.util.Map","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"clear","comment":"{@inheritDoc}","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"keySet","comment":"{@inheritDoc}","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Set","qualifiedName":"java.util.Set","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"values","comment":"{@inheritDoc}","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Collection","qualifiedName":"java.util.Collection","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"entrySet","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Set","qualifiedName":"java.util.Set","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"equals","comment":"Compares the specified object with this map for equality.  Returns\n \u003ctt\u003etrue\u003c/tt\u003e if the given object is also a map and the two maps\n represent the same mappings.  More formally, two maps \u003ctt\u003em1\u003c/tt\u003e and\n \u003ctt\u003em2\u003c/tt\u003e represent the same mappings if\n \u003ctt\u003em1.entrySet().equals(m2.entrySet())\u003c/tt\u003e.  This ensures that the\n \u003ctt\u003eequals\u003c/tt\u003e method works properly across different implementations\n of the \u003ctt\u003eMap\u003c/tt\u003e interface.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.Object)","flatSignature":"(Object)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"o","type":{"isPrimitive":false,"simpleName":"Object","qualifiedName":"java.lang.Object","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"hashCode","comment":"Returns the hash code value for this map.  The hash code of a map is\n defined to be the sum of the hash codes of each entry in the map\u0027s\n \u003ctt\u003eentrySet()\u003c/tt\u003e view.  This ensures that \u003ctt\u003em1.equals(m2)\u003c/tt\u003e\n implies that \u003ctt\u003em1.hashCode()\u003d\u003dm2.hashCode()\u003c/tt\u003e for any two maps\n \u003ctt\u003em1\u003c/tt\u003e and \u003ctt\u003em2\u003c/tt\u003e, as required by the general contract of\n {@link Object#hashCode}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"toString","comment":"Returns a string representation of this map.  The string representation\n consists of a list of key-value mappings in the order returned by the\n map\u0027s \u003ctt\u003eentrySet\u003c/tt\u003e view\u0027s iterator, enclosed in braces\n (\u003ctt\u003e\"{}\"\u003c/tt\u003e).  Adjacent mappings are separated by the characters\n \u003ctt\u003e\", \"\u003c/tt\u003e (comma and space).  Each key-value mapping is rendered as\n the key followed by an equals sign (\u003ctt\u003e\"\u003d\"\u003c/tt\u003e) followed by the\n associated value.  Keys and values are converted to strings as by\n {@link String#valueOf(Object)}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[{"name":"K","bounds":[]},{"name":"V","bounds":[]}],"subClasses":["java.util.WeakHashMap","java.util.TreeMap","java.util.HashMap","java.util.IdentityHashMap","java.util.EnumMap","java.util.concurrent.ConcurrentSkipListMap","java.util.concurrent.ConcurrentHashMap"],"enumConstants":[]}