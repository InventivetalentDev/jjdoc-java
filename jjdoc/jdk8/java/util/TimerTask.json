{"name":"TimerTask","comment":"A task that can be scheduled for one-time or repeated execution by a Timer.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"TimerTask","qualifiedName":"java.util.TimerTask","dimension":"","elementType":{},"package":"java.util","superclass":"java.lang.Object","interfaces":["java.lang.Runnable"],"isAbstract":true,"isStatic":false,"since":"1.3","innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"run","comment":"The action to be performed by this timer task.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"cancel","comment":"Cancels this timer task.  If the task has been scheduled for one-time\n execution and has not yet run, or has not yet been scheduled, it will\n never run.  If the task has been scheduled for repeated execution, it\n will never run again.  (If the task is running when this call occurs,\n the task will run to completion, but will never run again.)\n\n \u003cp\u003eNote that calling this method from within the \u003ctt\u003erun\u003c/tt\u003e method of\n a repeating timer task absolutely guarantees that the timer task will\n not run again.\n\n \u003cp\u003eThis method may be called repeatedly; the second and subsequent\n calls have no effect.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"scheduledExecutionTime","comment":"Returns the \u003ci\u003escheduled\u003c/i\u003e execution time of the most recent\n \u003ci\u003eactual\u003c/i\u003e execution of this task.  (If this method is invoked\n while task execution is in progress, the return value is the scheduled\n execution time of the ongoing task execution.)\n\n \u003cp\u003eThis method is typically invoked from within a task\u0027s run method, to\n determine whether the current execution of the task is sufficiently\n timely to warrant performing the scheduled activity:\n \u003cpre\u003e{@code\n   public void run() {\n       if (System.currentTimeMillis() - scheduledExecutionTime() \u003e\u003d\n           MAX_TARDINESS)\n               return;  // Too late; skip this execution.\n       // Perform the task\n   }\n }\u003c/pre\u003e\n This method is typically \u003ci\u003enot\u003c/i\u003e used in conjunction with\n \u003ci\u003efixed-delay execution\u003c/i\u003e repeating tasks, as their scheduled\n execution times are allowed to drift over time, and so are not terribly\n significant.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}