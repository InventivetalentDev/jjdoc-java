{"name":"Filter","comment":"A Filter can be used to provide fine grain control over\n what is logged, beyond the control provided by log levels.\n \u003cp\u003e\n Each Logger and each Handler can have a filter associated with it.\n The Logger or Handler will call the isLoggable method to check\n if a given LogRecord should be published.  If isLoggable returns\n false, the LogRecord will be discarded.","isClass":false,"isInterface":true,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"Filter","qualifiedName":"java.util.logging.Filter","dimension":"","elementType":{},"package":"java.util.logging","interfaces":[],"isAbstract":true,"isStatic":false,"since":"1.4","innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"isLoggable","comment":"Check if a given log record should be published.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.util.logging.LogRecord)","flatSignature":"(LogRecord)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"record","type":{"isPrimitive":false,"simpleName":"LogRecord","qualifiedName":"java.util.logging.LogRecord","dimension":"","elementType":{}}}],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}