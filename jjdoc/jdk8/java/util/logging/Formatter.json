{"name":"Formatter","comment":"A Formatter provides support for formatting LogRecords.\n \u003cp\u003e\n Typically each logging Handler will have a Formatter associated\n with it.  The Formatter takes a LogRecord and converts it to\n a string.\n \u003cp\u003e\n Some formatters (such as the XMLFormatter) need to wrap head\n and tail strings around a set of formatted records. The getHeader\n and getTail methods can be used to obtain these strings.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"Formatter","qualifiedName":"java.util.logging.Formatter","dimension":"","elementType":{},"package":"java.util.logging","superclass":"java.lang.Object","interfaces":[],"isAbstract":true,"isStatic":false,"since":"1.4","innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"format","comment":"Format the given log record and return the formatted string.\n \u003cp\u003e\n The resulting formatted String will normally include a\n localized and formatted version of the LogRecord\u0027s message field.\n It is recommended to use the {@link Formatter#formatMessage}\n convenience method to localize and format the message field.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.util.logging.LogRecord)","flatSignature":"(LogRecord)","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"record","type":{"isPrimitive":false,"simpleName":"LogRecord","qualifiedName":"java.util.logging.LogRecord","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getHead","comment":"Return the header string for a set of formatted records.\n \u003cp\u003e\n This base class returns an empty string, but this may be\n overridden by subclasses.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.util.logging.Handler)","flatSignature":"(Handler)","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"h","type":{"isPrimitive":false,"simpleName":"Handler","qualifiedName":"java.util.logging.Handler","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getTail","comment":"Return the tail string for a set of formatted records.\n \u003cp\u003e\n This base class returns an empty string, but this may be\n overridden by subclasses.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.util.logging.Handler)","flatSignature":"(Handler)","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"h","type":{"isPrimitive":false,"simpleName":"Handler","qualifiedName":"java.util.logging.Handler","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"formatMessage","comment":"Localize and format the message string from a log record.  This\n method is provided as a convenience for Formatter subclasses to\n use when they are performing formatting.\n \u003cp\u003e\n The message string is first localized to a format string using\n the record\u0027s ResourceBundle.  (If there is no ResourceBundle,\n or if the message key is not found, then the key is used as the\n format string.)  The format String uses java.text style\n formatting.\n \u003cul\u003e\n \u003cli\u003eIf there are no parameters, no formatter is used.\n \u003cli\u003eOtherwise, if the string contains \"{0\" then\n     java.text.MessageFormat  is used to format the string.\n \u003cli\u003eOtherwise no formatting is performed.\n \u003c/ul\u003e\n \u003cp\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.util.logging.LogRecord)","flatSignature":"(LogRecord)","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"record","type":{"isPrimitive":false,"simpleName":"LogRecord","qualifiedName":"java.util.logging.LogRecord","dimension":"","elementType":{}}}],"typeParameters":[]}],"typeParameters":[],"subClasses":["java.util.logging.XMLFormatter","java.util.logging.SimpleFormatter"],"enumConstants":[]}