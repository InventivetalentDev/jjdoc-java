{"name":"Consumer","comment":"Represents an operation that accepts a single input argument and returns no\n result. Unlike most other functional interfaces, {@code Consumer} is expected\n to operate via side-effects.\n\n \u003cp\u003eThis is a \u003ca href\u003d\"package-summary.html\"\u003efunctional interface\u003c/a\u003e\n whose functional method is {@link #accept(Object)}.","isClass":false,"isInterface":true,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"Consumer","qualifiedName":"java.util.function.Consumer","dimension":"","elementType":{},"package":"java.util.function","interfaces":[],"isAbstract":true,"isStatic":false,"since":"1.8","innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"accept","comment":"Performs this operation on the given argument.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(T)","flatSignature":"(T)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"t","type":{"isPrimitive":false,"simpleName":"T","qualifiedName":"T","dimension":"","elementType":{},"typeVariable":{"name":"T","bounds":[]}}}],"typeParameters":[]},{"name":"andThen","comment":"Returns a composed {@code Consumer} that performs, in sequence, this\n operation followed by the {@code after} operation. If performing either\n operation throws an exception, it is relayed to the caller of the\n composed operation.  If performing this operation throws an exception,\n the {@code after} operation will not be performed.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.util.function.Consumer\u003c? super T\u003e)","flatSignature":"(Consumer\u003c? super T\u003e)","returnType":{"isPrimitive":false,"simpleName":"Consumer","qualifiedName":"java.util.function.Consumer","dimension":"","elementType":{}},"isAbstract":false,"isDefault":true,"isStatic":false,"parameters":[{"name":"after","type":{"isPrimitive":false,"simpleName":"Consumer","qualifiedName":"java.util.function.Consumer","dimension":"","elementType":{}}}],"typeParameters":[]}],"typeParameters":[{"name":"T","bounds":[]}],"subInterfaces":["java.util.stream.Stream.Builder"],"enumConstants":[]}