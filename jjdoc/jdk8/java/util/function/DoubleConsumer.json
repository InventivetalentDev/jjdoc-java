{"name":"DoubleConsumer","comment":"Represents an operation that accepts a single {@code double}-valued argument and\n returns no result.  This is the primitive type specialization of\n {@link Consumer} for {@code double}.  Unlike most other functional interfaces,\n {@code DoubleConsumer} is expected to operate via side-effects.\n\n \u003cp\u003eThis is a \u003ca href\u003d\"package-summary.html\"\u003efunctional interface\u003c/a\u003e\n whose functional method is {@link #accept(double)}.","isClass":false,"isInterface":true,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"DoubleConsumer","qualifiedName":"java.util.function.DoubleConsumer","dimension":"","elementType":{},"package":"java.util.function","interfaces":[],"isAbstract":true,"isStatic":false,"since":"1.8","innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"accept","comment":"Performs this operation on the given argument.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(double)","flatSignature":"(double)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"value","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"andThen","comment":"Returns a composed {@code DoubleConsumer} that performs, in sequence, this\n operation followed by the {@code after} operation. If performing either\n operation throws an exception, it is relayed to the caller of the\n composed operation.  If performing this operation throws an exception,\n the {@code after} operation will not be performed.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.util.function.DoubleConsumer)","flatSignature":"(DoubleConsumer)","returnType":{"isPrimitive":false,"simpleName":"DoubleConsumer","qualifiedName":"java.util.function.DoubleConsumer","dimension":"","elementType":{}},"isAbstract":false,"isDefault":true,"isStatic":false,"parameters":[{"name":"after","type":{"isPrimitive":false,"simpleName":"DoubleConsumer","qualifiedName":"java.util.function.DoubleConsumer","dimension":"","elementType":{}}}],"typeParameters":[]}],"typeParameters":[],"subInterfaces":["java.util.DoubleSummaryStatistics","java.util.stream.DoubleStream.Builder"],"enumConstants":[]}