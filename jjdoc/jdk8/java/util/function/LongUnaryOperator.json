{"name":"LongUnaryOperator","comment":"Represents an operation on a single {@code long}-valued operand that produces\n a {@code long}-valued result.  This is the primitive type specialization of\n {@link UnaryOperator} for {@code long}.\n\n \u003cp\u003eThis is a \u003ca href\u003d\"package-summary.html\"\u003efunctional interface\u003c/a\u003e\n whose functional method is {@link #applyAsLong(long)}.","isClass":false,"isInterface":true,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"LongUnaryOperator","qualifiedName":"java.util.function.LongUnaryOperator","dimension":"","elementType":{},"package":"java.util.function","interfaces":[],"isAbstract":true,"isStatic":false,"since":"1.8","innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"applyAsLong","comment":"Applies this operator to the given operand.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(long)","flatSignature":"(long)","returnType":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"operand","type":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"compose","comment":"Returns a composed operator that first applies the {@code before}\n operator to its input, and then applies this operator to the result.\n If evaluation of either operator throws an exception, it is relayed to\n the caller of the composed operator.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.util.function.LongUnaryOperator)","flatSignature":"(LongUnaryOperator)","returnType":{"isPrimitive":false,"simpleName":"LongUnaryOperator","qualifiedName":"java.util.function.LongUnaryOperator","dimension":"","elementType":{}},"isAbstract":false,"isDefault":true,"isStatic":false,"parameters":[{"name":"before","type":{"isPrimitive":false,"simpleName":"LongUnaryOperator","qualifiedName":"java.util.function.LongUnaryOperator","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"andThen","comment":"Returns a composed operator that first applies this operator to\n its input, and then applies the {@code after} operator to the result.\n If evaluation of either operator throws an exception, it is relayed to\n the caller of the composed operator.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.util.function.LongUnaryOperator)","flatSignature":"(LongUnaryOperator)","returnType":{"isPrimitive":false,"simpleName":"LongUnaryOperator","qualifiedName":"java.util.function.LongUnaryOperator","dimension":"","elementType":{}},"isAbstract":false,"isDefault":true,"isStatic":false,"parameters":[{"name":"after","type":{"isPrimitive":false,"simpleName":"LongUnaryOperator","qualifiedName":"java.util.function.LongUnaryOperator","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"identity","comment":"Returns a unary operator that always returns its input argument.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"LongUnaryOperator","qualifiedName":"java.util.function.LongUnaryOperator","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}