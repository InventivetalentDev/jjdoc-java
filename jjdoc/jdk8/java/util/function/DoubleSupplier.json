{"name":"DoubleSupplier","comment":"Represents a supplier of {@code double}-valued results.  This is the\n {@code double}-producing primitive specialization of {@link Supplier}.\n\n \u003cp\u003eThere is no requirement that a distinct result be returned each\n time the supplier is invoked.\n\n \u003cp\u003eThis is a \u003ca href\u003d\"package-summary.html\"\u003efunctional interface\u003c/a\u003e\n whose functional method is {@link #getAsDouble()}.","isClass":false,"isInterface":true,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"DoubleSupplier","qualifiedName":"java.util.function.DoubleSupplier","dimension":"","elementType":{},"package":"java.util.function","interfaces":[],"isAbstract":true,"isStatic":false,"since":"1.8","innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"getAsDouble","comment":"Gets a result.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}