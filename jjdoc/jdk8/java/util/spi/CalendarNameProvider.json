{"name":"CalendarNameProvider","comment":"An abstract class for service providers that provide localized string\n representations (display names) of {@code Calendar} field values.\n\n \u003cp\u003e\u003ca name\u003d\"calendartypes\"\u003e\u003cb\u003eCalendar Types\u003c/b\u003e\u003c/a\u003e\n\n \u003cp\u003eCalendar types are used to specify calendar systems for which the {@link\n #getDisplayName(String, int, int, int, Locale) getDisplayName} and {@link\n #getDisplayNames(String, int, int, Locale) getDisplayNames} methods provide\n calendar field value names. See {@link Calendar#getCalendarType()} for details.\n\n \u003cp\u003e\u003cb\u003eCalendar Fields\u003c/b\u003e\n\n \u003cp\u003eCalendar fields are specified with the constants defined in {@link\n Calendar}. The following are calendar-common fields and their values to be\n supported for each calendar system.\n\n \u003ctable style\u003d\"border-bottom:1px solid\" border\u003d\"1\" cellpadding\u003d\"3\" cellspacing\u003d\"0\" summary\u003d\"Field values\"\u003e\n   \u003ctr\u003e\n     \u003cth\u003eField\u003c/th\u003e\n     \u003cth\u003eValue\u003c/th\u003e\n     \u003cth\u003eDescription\u003c/th\u003e\n   \u003c/tr\u003e\n   \u003ctr\u003e\n     \u003ctd valign\u003d\"top\"\u003e{@link Calendar#MONTH}\u003c/td\u003e\n     \u003ctd valign\u003d\"top\"\u003e{@link Calendar#JANUARY} to {@link Calendar#UNDECIMBER}\u003c/td\u003e\n     \u003ctd\u003eMonth numbering is 0-based (e.g., 0 - January, ..., 11 -\n         December). Some calendar systems have 13 months. Month\n         names need to be supported in both the formatting and\n         stand-alone forms if required by the supported locales. If there\u0027s\n         no distinction in the two forms, the same names should be returned\n         in both of the forms.\u003c/td\u003e\n   \u003c/tr\u003e\n   \u003ctr\u003e\n     \u003ctd valign\u003d\"top\"\u003e{@link Calendar#DAY_OF_WEEK}\u003c/td\u003e\n     \u003ctd valign\u003d\"top\"\u003e{@link Calendar#SUNDAY} to {@link Calendar#SATURDAY}\u003c/td\u003e\n     \u003ctd\u003eDay-of-week numbering is 1-based starting from Sunday (i.e., 1 - Sunday,\n         ..., 7 - Saturday).\u003c/td\u003e\n   \u003c/tr\u003e\n   \u003ctr\u003e\n     \u003ctd valign\u003d\"top\"\u003e{@link Calendar#AM_PM}\u003c/td\u003e\n     \u003ctd valign\u003d\"top\"\u003e{@link Calendar#AM} to {@link Calendar#PM}\u003c/td\u003e\n     \u003ctd\u003e0 - AM, 1 - PM\u003c/td\u003e\n   \u003c/tr\u003e\n \u003c/table\u003e\n\n \u003cp style\u003d\"margin-top:20px\"\u003eThe following are calendar-specific fields and their values to be supported.\n\n \u003ctable style\u003d\"border-bottom:1px solid\" border\u003d\"1\" cellpadding\u003d\"3\" cellspacing\u003d\"0\" summary\u003d\"Calendar type and field values\"\u003e\n   \u003ctr\u003e\n     \u003cth\u003eCalendar Type\u003c/th\u003e\n     \u003cth\u003eField\u003c/th\u003e\n     \u003cth\u003eValue\u003c/th\u003e\n     \u003cth\u003eDescription\u003c/th\u003e\n   \u003c/tr\u003e\n   \u003ctr\u003e\n     \u003ctd rowspan\u003d\"2\" valign\u003d\"top\"\u003e{@code \"gregory\"}\u003c/td\u003e\n     \u003ctd rowspan\u003d\"2\" valign\u003d\"top\"\u003e{@link Calendar#ERA}\u003c/td\u003e\n     \u003ctd\u003e0\u003c/td\u003e\n     \u003ctd\u003e{@link java.util.GregorianCalendar#BC} (BCE)\u003c/td\u003e\n   \u003c/tr\u003e\n   \u003ctr\u003e\n     \u003ctd\u003e1\u003c/td\u003e\n     \u003ctd\u003e{@link java.util.GregorianCalendar#AD} (CE)\u003c/td\u003e\n   \u003c/tr\u003e\n   \u003ctr\u003e\n     \u003ctd rowspan\u003d\"2\" valign\u003d\"top\"\u003e{@code \"buddhist\"}\u003c/td\u003e\n     \u003ctd rowspan\u003d\"2\" valign\u003d\"top\"\u003e{@link Calendar#ERA}\u003c/td\u003e\n     \u003ctd\u003e0\u003c/td\u003e\n     \u003ctd\u003eBC (BCE)\u003c/td\u003e\n   \u003c/tr\u003e\n   \u003ctr\u003e\n     \u003ctd\u003e1\u003c/td\u003e\n     \u003ctd\u003eB.E. (Buddhist Era)\u003c/td\u003e\n   \u003c/tr\u003e\n   \u003ctr\u003e\n     \u003ctd rowspan\u003d\"6\" valign\u003d\"top\"\u003e{@code \"japanese\"}\u003c/td\u003e\n     \u003ctd rowspan\u003d\"5\" valign\u003d\"top\"\u003e{@link Calendar#ERA}\u003c/td\u003e\n     \u003ctd\u003e0\u003c/td\u003e\n     \u003ctd\u003eSeireki (Before Meiji)\u003c/td\u003e\n   \u003c/tr\u003e\n   \u003ctr\u003e\n     \u003ctd\u003e1\u003c/td\u003e\n     \u003ctd\u003eMeiji\u003c/td\u003e\n   \u003c/tr\u003e\n   \u003ctr\u003e\n     \u003ctd\u003e2\u003c/td\u003e\n     \u003ctd\u003eTaisho\u003c/td\u003e\n   \u003c/tr\u003e\n   \u003ctr\u003e\n     \u003ctd\u003e3\u003c/td\u003e\n     \u003ctd\u003eShowa\u003c/td\u003e\n   \u003c/tr\u003e\n   \u003ctr\u003e\n     \u003ctd\u003e4\u003c/td\u003e\n     \u003ctd \u003eHeisei\u003c/td\u003e\n   \u003c/tr\u003e\n   \u003ctr\u003e\n     \u003ctd\u003e{@link Calendar#YEAR}\u003c/td\u003e\n     \u003ctd\u003e1\u003c/td\u003e\n     \u003ctd\u003ethe first year in each era. It should be returned when a long\n     style ({@link Calendar#LONG_FORMAT} or {@link Calendar#LONG_STANDALONE}) is\n     specified. See also the \u003ca href\u003d\"../../text/SimpleDateFormat.html#year\"\u003e\n     Year representation in {@code SimpleDateFormat}\u003c/a\u003e.\u003c/td\u003e\n   \u003c/tr\u003e\n   \u003ctr\u003e\n     \u003ctd rowspan\u003d\"2\" valign\u003d\"top\"\u003e{@code \"roc\"}\u003c/td\u003e\n     \u003ctd rowspan\u003d\"2\" valign\u003d\"top\"\u003e{@link Calendar#ERA}\u003c/td\u003e\n     \u003ctd\u003e0\u003c/td\u003e\n     \u003ctd\u003eBefore R.O.C.\u003c/td\u003e\n   \u003c/tr\u003e\n   \u003ctr\u003e\n     \u003ctd\u003e1\u003c/td\u003e\n     \u003ctd\u003eR.O.C.\u003c/td\u003e\n   \u003c/tr\u003e\n   \u003ctr\u003e\n     \u003ctd rowspan\u003d\"2\" valign\u003d\"top\"\u003e{@code \"islamic\"}\u003c/td\u003e\n     \u003ctd rowspan\u003d\"2\" valign\u003d\"top\"\u003e{@link Calendar#ERA}\u003c/td\u003e\n     \u003ctd\u003e0\u003c/td\u003e\n     \u003ctd\u003eBefore AH\u003c/td\u003e\n   \u003c/tr\u003e\n   \u003ctr\u003e\n     \u003ctd\u003e1\u003c/td\u003e\n     \u003ctd\u003eAnno Hijrah (AH)\u003c/td\u003e\n   \u003c/tr\u003e\n \u003c/table\u003e\n\n \u003cp\u003eCalendar field value names for {@code \"gregory\"} must be consistent with\n the date-time symbols provided by {@link java.text.spi.DateFormatSymbolsProvider}.\n\n \u003cp\u003eTime zone names are supported by {@link TimeZoneNameProvider}.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"CalendarNameProvider","qualifiedName":"java.util.spi.CalendarNameProvider","dimension":"","elementType":{},"package":"java.util.spi","superclass":"java.util.spi.LocaleServiceProvider","interfaces":[],"isAbstract":true,"isStatic":false,"since":"1.8","innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"getDisplayName","comment":"Returns the string representation (display name) of the calendar\n \u003ccode\u003efield value\u003c/code\u003e in the given \u003ccode\u003estyle\u003c/code\u003e and\n \u003ccode\u003elocale\u003c/code\u003e.  If no string representation is\n applicable, \u003ccode\u003enull\u003c/code\u003e is returned.\n\n \u003cp\u003e{@code field} is a {@code Calendar} field index, such as {@link\n Calendar#MONTH}. The time zone fields, {@link Calendar#ZONE_OFFSET} and\n {@link Calendar#DST_OFFSET}, are \u003cem\u003enot\u003c/em\u003e supported by this\n method. {@code null} must be returned if any time zone fields are\n specified.\n\n \u003cp\u003e{@code value} is the numeric representation of the {@code field} value.\n For example, if {@code field} is {@link Calendar#DAY_OF_WEEK}, the valid\n values are {@link Calendar#SUNDAY} to {@link Calendar#SATURDAY}\n (inclusive).\n\n \u003cp\u003e{@code style} gives the style of the string representation. It is one\n of {@link Calendar#SHORT_FORMAT} ({@link Calendar#SHORT SHORT}),\n {@link Calendar#SHORT_STANDALONE}, {@link Calendar#LONG_FORMAT}\n ({@link Calendar#LONG LONG}), {@link Calendar#LONG_STANDALONE},\n {@link Calendar#NARROW_FORMAT}, or {@link Calendar#NARROW_STANDALONE}.\n\n \u003cp\u003eFor example, the following call will return {@code \"Sunday\"}.\n \u003cpre\u003e\n getDisplayName(\"gregory\", Calendar.DAY_OF_WEEK, Calendar.SUNDAY,\n                Calendar.LONG_STANDALONE, Locale.ENGLISH);\n \u003c/pre\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String, int, int, int, java.util.Locale)","flatSignature":"(String, int, int, int, Locale)","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"calendarType","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"field","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"value","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"style","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"locale","type":{"isPrimitive":false,"simpleName":"Locale","qualifiedName":"java.util.Locale","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getDisplayNames","comment":"Returns a {@code Map} containing all string representations (display\n names) of the {@code Calendar} {@code field} in the given {@code style}\n and {@code locale} and their corresponding field values.\n\n \u003cp\u003e{@code field} is a {@code Calendar} field index, such as {@link\n Calendar#MONTH}. The time zone fields, {@link Calendar#ZONE_OFFSET} and\n {@link Calendar#DST_OFFSET}, are \u003cem\u003enot\u003c/em\u003e supported by this\n method. {@code null} must be returned if any time zone fields are specified.\n\n \u003cp\u003e{@code style} gives the style of the string representation. It must be\n one of {@link Calendar#ALL_STYLES}, {@link Calendar#SHORT_FORMAT} ({@link\n Calendar#SHORT SHORT}), {@link Calendar#SHORT_STANDALONE}, {@link\n Calendar#LONG_FORMAT} ({@link Calendar#LONG LONG}), {@link\n Calendar#LONG_STANDALONE}, {@link Calendar#NARROW_FORMAT}, or\n {@link Calendar#NARROW_STANDALONE}. Note that narrow names may\n not be unique due to use of single characters, such as \"S\" for Sunday\n and Saturday, and that no narrow names are included in that case.\n\n \u003cp\u003eFor example, the following call will return a {@code Map} containing\n {@code \"January\"} to {@link Calendar#JANUARY}, {@code \"Jan\"} to {@link\n Calendar#JANUARY}, {@code \"February\"} to {@link Calendar#FEBRUARY},\n {@code \"Feb\"} to {@link Calendar#FEBRUARY}, and so on.\n \u003cpre\u003e\n getDisplayNames(\"gregory\", Calendar.MONTH, Calendar.ALL_STYLES, Locale.ENGLISH);\n \u003c/pre\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String, int, int, java.util.Locale)","flatSignature":"(String, int, int, Locale)","returnType":{"isPrimitive":false,"simpleName":"Map","qualifiedName":"java.util.Map","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"calendarType","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"field","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"style","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"locale","type":{"isPrimitive":false,"simpleName":"Locale","qualifiedName":"java.util.Locale","dimension":"","elementType":{}}}],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}