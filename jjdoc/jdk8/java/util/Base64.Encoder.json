{"name":"Base64.Encoder","comment":"This class implements an encoder for encoding byte data using\n the Base64 encoding scheme as specified in RFC 4648 and RFC 2045.\n\n \u003cp\u003e Instances of {@link Encoder} class are safe for use by\n multiple concurrent threads.\n\n \u003cp\u003e Unless otherwise noted, passing a {@code null} argument to\n a method of this class will cause a\n {@link java.lang.NullPointerException NullPointerException} to\n be thrown.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"Encoder","qualifiedName":"java.util.Base64.Encoder","dimension":"","elementType":{},"package":"java.util","superclass":"java.lang.Object","interfaces":[],"isAbstract":false,"isStatic":true,"since":"1.8","innerClasses":[],"isInnerClass":true,"constructors":[],"fields":[],"methods":[{"name":"encode","comment":"Encodes all bytes from the specified byte array into a newly-allocated\n byte array using the {@link Base64} encoding scheme. The returned byte\n array is of the length of the resulting bytes.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(byte[])","flatSignature":"(byte[])","returnType":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"[]","elementType":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"","elementType":{}}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"src","type":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"[]","elementType":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"","elementType":{}}}}],"typeParameters":[]},{"name":"encode","comment":"Encodes all bytes from the specified byte array using the\n {@link Base64} encoding scheme, writing the resulting bytes to the\n given output byte array, starting at offset 0.\n\n \u003cp\u003e It is the responsibility of the invoker of this method to make\n sure the output byte array {@code dst} has enough space for encoding\n all bytes from the input byte array. No bytes will be written to the\n output byte array if the output byte array is not big enough.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(byte[], byte[])","flatSignature":"(byte[], byte[])","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"src","type":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"[]","elementType":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"","elementType":{}}}},{"name":"dst","type":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"[]","elementType":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"","elementType":{}}}}],"typeParameters":[]},{"name":"encodeToString","comment":"Encodes the specified byte array into a String using the {@link Base64}\n encoding scheme.\n\n \u003cp\u003e This method first encodes all input bytes into a base64 encoded\n byte array and then constructs a new String by using the encoded byte\n array and the {@link java.nio.charset.StandardCharsets#ISO_8859_1\n ISO-8859-1} charset.\n\n \u003cp\u003e In other words, an invocation of this method has exactly the same\n effect as invoking\n {@code new String(encode(src), StandardCharsets.ISO_8859_1)}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(byte[])","flatSignature":"(byte[])","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"src","type":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"[]","elementType":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"","elementType":{}}}}],"typeParameters":[]},{"name":"encode","comment":"Encodes all remaining bytes from the specified byte buffer into\n a newly-allocated ByteBuffer using the {@link Base64} encoding\n scheme.\n\n Upon return, the source buffer\u0027s position will be updated to\n its limit; its limit will not have been changed. The returned\n output buffer\u0027s position will be zero and its limit will be the\n number of resulting encoded bytes.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.nio.ByteBuffer)","flatSignature":"(ByteBuffer)","returnType":{"isPrimitive":false,"simpleName":"ByteBuffer","qualifiedName":"java.nio.ByteBuffer","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"buffer","type":{"isPrimitive":false,"simpleName":"ByteBuffer","qualifiedName":"java.nio.ByteBuffer","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"wrap","comment":"Wraps an output stream for encoding byte data using the {@link Base64}\n encoding scheme.\n\n \u003cp\u003e It is recommended to promptly close the returned output stream after\n use, during which it will flush all possible leftover bytes to the underlying\n output stream. Closing the returned output stream will close the underlying\n output stream.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.io.OutputStream)","flatSignature":"(OutputStream)","returnType":{"isPrimitive":false,"simpleName":"OutputStream","qualifiedName":"java.io.OutputStream","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"os","type":{"isPrimitive":false,"simpleName":"OutputStream","qualifiedName":"java.io.OutputStream","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"withoutPadding","comment":"Returns an encoder instance that encodes equivalently to this one,\n but without adding any padding character at the end of the encoded\n byte data.\n\n \u003cp\u003e The encoding scheme of this encoder instance is unaffected by\n this invocation. The returned encoder instance should be used for\n non-padding encoding operation.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Encoder","qualifiedName":"java.util.Base64.Encoder","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}