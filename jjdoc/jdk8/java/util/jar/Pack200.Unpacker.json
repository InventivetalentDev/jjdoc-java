{"name":"Pack200.Unpacker","comment":"The unpacker engine converts the packed stream to a JAR file.\n An instance of the engine can be obtained\n using {@link #newUnpacker}.\n \u003cp\u003e\n Every JAR file produced by this engine will include the string\n \"\u003ctt\u003ePACK200\u003c/tt\u003e\" as a zip file comment.\n This allows a deployer to detect if a JAR archive was packed and unpacked.\n \u003cp\u003e\n Note: Unless otherwise noted, passing a \u003ctt\u003enull\u003c/tt\u003e argument to a\n constructor or method in this class will cause a {@link NullPointerException}\n to be thrown.\n \u003cp\u003e\n This version of the unpacker is compatible with all previous versions.","isClass":false,"isInterface":true,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"Unpacker","qualifiedName":"java.util.jar.Pack200.Unpacker","dimension":"","elementType":{},"package":"java.util.jar","interfaces":[],"isAbstract":true,"isStatic":true,"since":"1.5","innerClasses":[],"isInnerClass":true,"constructors":[],"fields":[{"name":"KEEP","comment":"The string \"keep\", a possible value for certain properties.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":true,"isMethod":false,"isOrdinaryClass":false,"type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isStatic":true,"constantValue":"\"keep\""},{"name":"TRUE","comment":"The string \"true\", a possible value for certain properties.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":true,"isMethod":false,"isOrdinaryClass":false,"type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isStatic":true,"constantValue":"\"true\""},{"name":"FALSE","comment":"The string \"false\", a possible value for certain properties.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":true,"isMethod":false,"isOrdinaryClass":false,"type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isStatic":true,"constantValue":"\"false\""},{"name":"DEFLATE_HINT","comment":"Property indicating that the unpacker should\n ignore all transmitted values for DEFLATE_HINT,\n replacing them by the given value, {@link #TRUE} or {@link #FALSE}.\n The default value is the special string {@link #KEEP},\n which asks the unpacker to preserve all transmitted\n deflation hints.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":true,"isMethod":false,"isOrdinaryClass":false,"type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isStatic":true,"constantValue":"\"unpack.deflate.hint\""},{"name":"PROGRESS","comment":"The unpacker\u0027s progress as a percentage, as periodically\n updated by the unpacker.\n Values of 0 - 100 are normal, and -1 indicates a stall.\n Progress can be monitored by polling the value of this\n property.\n \u003cp\u003e\n At a minimum, the unpacker must set progress to 0\n at the beginning of a packing operation, and to 100\n at the end.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":true,"isMethod":false,"isOrdinaryClass":false,"type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isStatic":true,"constantValue":"\"unpack.progress\""}],"methods":[{"name":"properties","comment":"Get the set of this engine\u0027s properties. This set is\n a \"live view\", so that changing its\n contents immediately affects the Packer engine, and\n changes from the engine (such as progress indications)\n are immediately visible in the map.\n\n \u003cp\u003eThe property map may contain pre-defined implementation\n specific and default properties.  Users are encouraged to\n read the information and fully understand the implications,\n before modifying pre-existing properties.\n \u003cp\u003e\n Implementation specific properties are prefixed with a\n package name associated with the implementor, beginning\n with \u003ctt\u003ecom.\u003c/tt\u003e or a similar prefix.\n All property names beginning with \u003ctt\u003epack.\u003c/tt\u003e and\n \u003ctt\u003eunpack.\u003c/tt\u003e are reserved for use by this API.\n \u003cp\u003e\n Unknown properties may be ignored or rejected with an\n unspecified error, and invalid entries may cause an\n unspecified error to be thrown.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"SortedMap","qualifiedName":"java.util.SortedMap","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"unpack","comment":"Read a Pack200 archive, and write the encoded JAR to\n a JarOutputStream.\n The entire contents of the input stream will be read.\n It may be more efficient to read the Pack200 archive\n to a file and pass the File object, using the alternate\n method described below.\n \u003cp\u003e\n Closes its input but not its output.  (The output can accumulate more elements.)","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.io.InputStream, java.util.jar.JarOutputStream)","flatSignature":"(InputStream, JarOutputStream)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"in","type":{"isPrimitive":false,"simpleName":"InputStream","qualifiedName":"java.io.InputStream","dimension":"","elementType":{}}},{"name":"out","type":{"isPrimitive":false,"simpleName":"JarOutputStream","qualifiedName":"java.util.jar.JarOutputStream","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"unpack","comment":"Read a Pack200 archive, and write the encoded JAR to\n a JarOutputStream.\n \u003cp\u003e\n Does not close its output.  (The output can accumulate more elements.)","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.io.File, java.util.jar.JarOutputStream)","flatSignature":"(File, JarOutputStream)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"in","type":{"isPrimitive":false,"simpleName":"File","qualifiedName":"java.io.File","dimension":"","elementType":{}}},{"name":"out","type":{"isPrimitive":false,"simpleName":"JarOutputStream","qualifiedName":"java.util.jar.JarOutputStream","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"addPropertyChangeListener","comment":"Registers a listener for PropertyChange events on the properties map.\n This is typically used by applications to update a progress bar.\n\n \u003cp\u003e The default implementation of this method does nothing and has\n no side-effects.\u003c/p\u003e\n\n \u003cp\u003e\u003cb\u003eWARNING:\u003c/b\u003e This method is omitted from the interface\n declaration in all subset Profiles of Java SE that do not include\n the {@code java.beans} package. \u003c/p\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.beans.PropertyChangeListener)","flatSignature":"(PropertyChangeListener)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":true,"isStatic":false,"parameters":[{"name":"listener","type":{"isPrimitive":false,"simpleName":"PropertyChangeListener","qualifiedName":"java.beans.PropertyChangeListener","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"removePropertyChangeListener","comment":"Remove a listener for PropertyChange events, added by\n the {@link #addPropertyChangeListener}.\n\n \u003cp\u003e The default implementation of this method does nothing and has\n no side-effects.\u003c/p\u003e\n\n \u003cp\u003e\u003cb\u003eWARNING:\u003c/b\u003e This method is omitted from the interface\n declaration in all subset Profiles of Java SE that do not include\n the {@code java.beans} package. \u003c/p\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.beans.PropertyChangeListener)","flatSignature":"(PropertyChangeListener)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":true,"isStatic":false,"parameters":[{"name":"listener","type":{"isPrimitive":false,"simpleName":"PropertyChangeListener","qualifiedName":"java.beans.PropertyChangeListener","dimension":"","elementType":{}}}],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}