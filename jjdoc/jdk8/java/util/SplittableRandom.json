{"name":"SplittableRandom","comment":"A generator of uniform pseudorandom values applicable for use in\n (among other contexts) isolated parallel computations that may\n generate subtasks. Class {@code SplittableRandom} supports methods for\n producing pseudorandom numbers of type {@code int}, {@code long},\n and {@code double} with similar usages as for class\n {@link java.util.Random} but differs in the following ways:\n\n \u003cul\u003e\n\n \u003cli\u003eSeries of generated values pass the DieHarder suite testing\n independence and uniformity properties of random number generators.\n (Most recently validated with \u003ca\n href\u003d\"http://www.phy.duke.edu/~rgb/General/dieharder.php\"\u003e version\n 3.31.1\u003c/a\u003e.) These tests validate only the methods for certain\n types and ranges, but similar properties are expected to hold, at\n least approximately, for others as well. The \u003cem\u003eperiod\u003c/em\u003e\n (length of any series of generated values before it repeats) is at\n least 2\u003csup\u003e64\u003c/sup\u003e. \u003c/li\u003e\n\n \u003cli\u003e Method {@link #split} constructs and returns a new\n SplittableRandom instance that shares no mutable state with the\n current instance. However, with very high probability, the\n values collectively generated by the two objects have the same\n statistical properties as if the same quantity of values were\n generated by a single thread using a single {@code\n SplittableRandom} object.  \u003c/li\u003e\n\n \u003cli\u003eInstances of SplittableRandom are \u003cem\u003enot\u003c/em\u003e thread-safe.\n They are designed to be split, not shared, across threads. For\n example, a {@link java.util.concurrent.ForkJoinTask\n fork/join-style} computation using random numbers might include a\n construction of the form {@code new\n Subtask(aSplittableRandom.split()).fork()}.\n\n \u003cli\u003eThis class provides additional methods for generating random\n streams, that employ the above techniques when used in {@code\n stream.parallel()} mode.\u003c/li\u003e\n\n \u003c/ul\u003e\n\n \u003cp\u003eInstances of {@code SplittableRandom} are not cryptographically\n secure.  Consider instead using {@link java.security.SecureRandom}\n in security-sensitive applications. Additionally,\n default-constructed instances do not use a cryptographically random\n seed unless the {@linkplain System#getProperty system property}\n {@code java.util.secureRandomSeed} is set to {@code true}.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"SplittableRandom","qualifiedName":"java.util.SplittableRandom","dimension":"","elementType":{},"package":"java.util","superclass":"java.lang.Object","interfaces":[],"isAbstract":false,"isStatic":false,"since":"1.8","innerClasses":[],"isInnerClass":false,"constructors":[{"name":"SplittableRandom","comment":"Creates a new SplittableRandom instance using the specified\n initial seed. SplittableRandom instances created with the same\n seed in the same program generate identical sequences of values.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(long)","flatSignature":"(long)","parameters":[{"name":"seed","type":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"SplittableRandom","comment":"Creates a new SplittableRandom instance that is likely to\n generate sequences of values that are statistically independent\n of those of any other instances in the current program; and\n may, and typically does, vary across program invocations.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","parameters":[],"typeParameters":[]}],"fields":[],"methods":[{"name":"split","comment":"Constructs and returns a new SplittableRandom instance that\n shares no mutable state with this instance. However, with very\n high probability, the set of values collectively generated by\n the two objects has the same statistical properties as if the\n same quantity of values were generated by a single thread using\n a single SplittableRandom object.  Either or both of the two\n objects may be further split using the {@code split()} method,\n and the same expected statistical properties apply to the\n entire set of generators constructed by such recursive\n splitting.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"SplittableRandom","qualifiedName":"java.util.SplittableRandom","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"nextInt","comment":"Returns a pseudorandom {@code int} value.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"nextInt","comment":"Returns a pseudorandom {@code int} value between zero (inclusive)\n and the specified bound (exclusive).","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int)","flatSignature":"(int)","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"bound","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"nextInt","comment":"Returns a pseudorandom {@code int} value between the specified\n origin (inclusive) and the specified bound (exclusive).","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int, int)","flatSignature":"(int, int)","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"origin","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"bound","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"nextLong","comment":"Returns a pseudorandom {@code long} value.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"nextLong","comment":"Returns a pseudorandom {@code long} value between zero (inclusive)\n and the specified bound (exclusive).","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(long)","flatSignature":"(long)","returnType":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"bound","type":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"nextLong","comment":"Returns a pseudorandom {@code long} value between the specified\n origin (inclusive) and the specified bound (exclusive).","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(long, long)","flatSignature":"(long, long)","returnType":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"origin","type":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}}},{"name":"bound","type":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"nextDouble","comment":"Returns a pseudorandom {@code double} value between zero\n (inclusive) and one (exclusive).","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"nextDouble","comment":"Returns a pseudorandom {@code double} value between 0.0\n (inclusive) and the specified bound (exclusive).","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(double)","flatSignature":"(double)","returnType":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"bound","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"nextDouble","comment":"Returns a pseudorandom {@code double} value between the specified\n origin (inclusive) and bound (exclusive).","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(double, double)","flatSignature":"(double, double)","returnType":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"origin","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"bound","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"nextBoolean","comment":"Returns a pseudorandom {@code boolean} value.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"ints","comment":"Returns a stream producing the given {@code streamSize} number\n of pseudorandom {@code int} values from this generator and/or\n one split from it.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(long)","flatSignature":"(long)","returnType":{"isPrimitive":false,"simpleName":"IntStream","qualifiedName":"java.util.stream.IntStream","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"streamSize","type":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"ints","comment":"Returns an effectively unlimited stream of pseudorandom {@code int}\n values from this generator and/or one split from it.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"IntStream","qualifiedName":"java.util.stream.IntStream","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"ints","comment":"Returns a stream producing the given {@code streamSize} number\n of pseudorandom {@code int} values from this generator and/or one split\n from it; each value conforms to the given origin (inclusive) and bound\n (exclusive).","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(long, int, int)","flatSignature":"(long, int, int)","returnType":{"isPrimitive":false,"simpleName":"IntStream","qualifiedName":"java.util.stream.IntStream","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"streamSize","type":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}}},{"name":"randomNumberOrigin","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"randomNumberBound","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"ints","comment":"Returns an effectively unlimited stream of pseudorandom {@code\n int} values from this generator and/or one split from it; each value\n conforms to the given origin (inclusive) and bound (exclusive).","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int, int)","flatSignature":"(int, int)","returnType":{"isPrimitive":false,"simpleName":"IntStream","qualifiedName":"java.util.stream.IntStream","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"randomNumberOrigin","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"randomNumberBound","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"longs","comment":"Returns a stream producing the given {@code streamSize} number\n of pseudorandom {@code long} values from this generator and/or\n one split from it.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(long)","flatSignature":"(long)","returnType":{"isPrimitive":false,"simpleName":"LongStream","qualifiedName":"java.util.stream.LongStream","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"streamSize","type":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"longs","comment":"Returns an effectively unlimited stream of pseudorandom {@code\n long} values from this generator and/or one split from it.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"LongStream","qualifiedName":"java.util.stream.LongStream","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"longs","comment":"Returns a stream producing the given {@code streamSize} number of\n pseudorandom {@code long} values from this generator and/or one split\n from it; each value conforms to the given origin (inclusive) and bound\n (exclusive).","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(long, long, long)","flatSignature":"(long, long, long)","returnType":{"isPrimitive":false,"simpleName":"LongStream","qualifiedName":"java.util.stream.LongStream","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"streamSize","type":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}}},{"name":"randomNumberOrigin","type":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}}},{"name":"randomNumberBound","type":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"longs","comment":"Returns an effectively unlimited stream of pseudorandom {@code\n long} values from this generator and/or one split from it; each value\n conforms to the given origin (inclusive) and bound (exclusive).","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(long, long)","flatSignature":"(long, long)","returnType":{"isPrimitive":false,"simpleName":"LongStream","qualifiedName":"java.util.stream.LongStream","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"randomNumberOrigin","type":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}}},{"name":"randomNumberBound","type":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"doubles","comment":"Returns a stream producing the given {@code streamSize} number of\n pseudorandom {@code double} values from this generator and/or one split\n from it; each value is between zero (inclusive) and one (exclusive).","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(long)","flatSignature":"(long)","returnType":{"isPrimitive":false,"simpleName":"DoubleStream","qualifiedName":"java.util.stream.DoubleStream","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"streamSize","type":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"doubles","comment":"Returns an effectively unlimited stream of pseudorandom {@code\n double} values from this generator and/or one split from it; each value\n is between zero (inclusive) and one (exclusive).","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"DoubleStream","qualifiedName":"java.util.stream.DoubleStream","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"doubles","comment":"Returns a stream producing the given {@code streamSize} number of\n pseudorandom {@code double} values from this generator and/or one split\n from it; each value conforms to the given origin (inclusive) and bound\n (exclusive).","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(long, double, double)","flatSignature":"(long, double, double)","returnType":{"isPrimitive":false,"simpleName":"DoubleStream","qualifiedName":"java.util.stream.DoubleStream","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"streamSize","type":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}}},{"name":"randomNumberOrigin","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"randomNumberBound","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"doubles","comment":"Returns an effectively unlimited stream of pseudorandom {@code\n double} values from this generator and/or one split from it; each value\n conforms to the given origin (inclusive) and bound (exclusive).","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(double, double)","flatSignature":"(double, double)","returnType":{"isPrimitive":false,"simpleName":"DoubleStream","qualifiedName":"java.util.stream.DoubleStream","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"randomNumberOrigin","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"randomNumberBound","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}}],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}