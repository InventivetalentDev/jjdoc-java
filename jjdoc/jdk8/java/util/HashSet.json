{"name":"HashSet","comment":"This class implements the \u003ctt\u003eSet\u003c/tt\u003e interface, backed by a hash table\n (actually a \u003ctt\u003eHashMap\u003c/tt\u003e instance).  It makes no guarantees as to the\n iteration order of the set; in particular, it does not guarantee that the\n order will remain constant over time.  This class permits the \u003ctt\u003enull\u003c/tt\u003e\n element.\n\n \u003cp\u003eThis class offers constant time performance for the basic operations\n (\u003ctt\u003eadd\u003c/tt\u003e, \u003ctt\u003eremove\u003c/tt\u003e, \u003ctt\u003econtains\u003c/tt\u003e and \u003ctt\u003esize\u003c/tt\u003e),\n assuming the hash function disperses the elements properly among the\n buckets.  Iterating over this set requires time proportional to the sum of\n the \u003ctt\u003eHashSet\u003c/tt\u003e instance\u0027s size (the number of elements) plus the\n \"capacity\" of the backing \u003ctt\u003eHashMap\u003c/tt\u003e instance (the number of\n buckets).  Thus, it\u0027s very important not to set the initial capacity too\n high (or the load factor too low) if iteration performance is important.\n\n \u003cp\u003e\u003cstrong\u003eNote that this implementation is not synchronized.\u003c/strong\u003e\n If multiple threads access a hash set concurrently, and at least one of\n the threads modifies the set, it \u003ci\u003emust\u003c/i\u003e be synchronized externally.\n This is typically accomplished by synchronizing on some object that\n naturally encapsulates the set.\n\n If no such object exists, the set should be \"wrapped\" using the\n {@link Collections#synchronizedSet Collections.synchronizedSet}\n method.  This is best done at creation time, to prevent accidental\n unsynchronized access to the set:\u003cpre\u003e\n   Set s \u003d Collections.synchronizedSet(new HashSet(...));\u003c/pre\u003e\n\n \u003cp\u003eThe iterators returned by this class\u0027s \u003ctt\u003eiterator\u003c/tt\u003e method are\n \u003ci\u003efail-fast\u003c/i\u003e: if the set is modified at any time after the iterator is\n created, in any way except through the iterator\u0027s own \u003ctt\u003eremove\u003c/tt\u003e\n method, the Iterator throws a {@link ConcurrentModificationException}.\n Thus, in the face of concurrent modification, the iterator fails quickly\n and cleanly, rather than risking arbitrary, non-deterministic behavior at\n an undetermined time in the future.\n\n \u003cp\u003eNote that the fail-fast behavior of an iterator cannot be guaranteed\n as it is, generally speaking, impossible to make any hard guarantees in the\n presence of unsynchronized concurrent modification.  Fail-fast iterators\n throw \u003ctt\u003eConcurrentModificationException\u003c/tt\u003e on a best-effort basis.\n Therefore, it would be wrong to write a program that depended on this\n exception for its correctness: \u003ci\u003ethe fail-fast behavior of iterators\n should be used only to detect bugs.\u003c/i\u003e\n\n \u003cp\u003eThis class is a member of the\n \u003ca href\u003d\"{@docRoot}/../technotes/guides/collections/index.html\"\u003e\n Java Collections Framework\u003c/a\u003e.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"HashSet","qualifiedName":"java.util.HashSet","dimension":"","elementType":{},"package":"java.util","superclass":"java.util.AbstractSet","interfaces":["java.util.Set","java.lang.Cloneable","java.io.Serializable"],"isAbstract":false,"isStatic":false,"since":"1.2","innerClasses":[],"isInnerClass":false,"constructors":[{"name":"HashSet","comment":"Constructs a new, empty set; the backing \u003ctt\u003eHashMap\u003c/tt\u003e instance has\n default initial capacity (16) and load factor (0.75).","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","parameters":[],"typeParameters":[]},{"name":"HashSet","comment":"Constructs a new set containing the elements in the specified\n collection.  The \u003ctt\u003eHashMap\u003c/tt\u003e is created with default load factor\n (0.75) and an initial capacity sufficient to contain the elements in\n the specified collection.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.util.Collection\u003c? extends E\u003e)","flatSignature":"(Collection\u003c? extends E\u003e)","parameters":[{"name":"c","type":{"isPrimitive":false,"simpleName":"Collection","qualifiedName":"java.util.Collection","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"HashSet","comment":"Constructs a new, empty set; the backing \u003ctt\u003eHashMap\u003c/tt\u003e instance has\n the specified initial capacity and the specified load factor.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(int, float)","flatSignature":"(int, float)","parameters":[{"name":"initialCapacity","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"loadFactor","type":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"HashSet","comment":"Constructs a new, empty set; the backing \u003ctt\u003eHashMap\u003c/tt\u003e instance has\n the specified initial capacity and default load factor (0.75).","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(int)","flatSignature":"(int)","parameters":[{"name":"initialCapacity","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]}],"fields":[],"methods":[{"name":"iterator","comment":"Returns an iterator over the elements in this set.  The elements\n are returned in no particular order.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Iterator","qualifiedName":"java.util.Iterator","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"size","comment":"Returns the number of elements in this set (its cardinality).","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"isEmpty","comment":"Returns \u003ctt\u003etrue\u003c/tt\u003e if this set contains no elements.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"contains","comment":"Returns \u003ctt\u003etrue\u003c/tt\u003e if this set contains the specified element.\n More formally, returns \u003ctt\u003etrue\u003c/tt\u003e if and only if this set\n contains an element \u003ctt\u003ee\u003c/tt\u003e such that\n \u003ctt\u003e(o\u003d\u003dnull\u0026nbsp;?\u0026nbsp;e\u003d\u003dnull\u0026nbsp;:\u0026nbsp;o.equals(e))\u003c/tt\u003e.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.Object)","flatSignature":"(Object)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"o","type":{"isPrimitive":false,"simpleName":"Object","qualifiedName":"java.lang.Object","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"add","comment":"Adds the specified element to this set if it is not already present.\n More formally, adds the specified element \u003ctt\u003ee\u003c/tt\u003e to this set if\n this set contains no element \u003ctt\u003ee2\u003c/tt\u003e such that\n \u003ctt\u003e(e\u003d\u003dnull\u0026nbsp;?\u0026nbsp;e2\u003d\u003dnull\u0026nbsp;:\u0026nbsp;e.equals(e2))\u003c/tt\u003e.\n If this set already contains the element, the call leaves the set\n unchanged and returns \u003ctt\u003efalse\u003c/tt\u003e.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(E)","flatSignature":"(E)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"e","type":{"isPrimitive":false,"simpleName":"E","qualifiedName":"E","dimension":"","elementType":{},"typeVariable":{"name":"E","bounds":[]}}}],"typeParameters":[]},{"name":"remove","comment":"Removes the specified element from this set if it is present.\n More formally, removes an element \u003ctt\u003ee\u003c/tt\u003e such that\n \u003ctt\u003e(o\u003d\u003dnull\u0026nbsp;?\u0026nbsp;e\u003d\u003dnull\u0026nbsp;:\u0026nbsp;o.equals(e))\u003c/tt\u003e,\n if this set contains such an element.  Returns \u003ctt\u003etrue\u003c/tt\u003e if\n this set contained the element (or equivalently, if this set\n changed as a result of the call).  (This set will not contain the\n element once the call returns.)","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.Object)","flatSignature":"(Object)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"o","type":{"isPrimitive":false,"simpleName":"Object","qualifiedName":"java.lang.Object","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"clear","comment":"Removes all of the elements from this set.\n The set will be empty after this call returns.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"clone","comment":"Returns a shallow copy of this \u003ctt\u003eHashSet\u003c/tt\u003e instance: the elements\n themselves are not cloned.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Object","qualifiedName":"java.lang.Object","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"spliterator","comment":"Creates a \u003cem\u003e\u003ca href\u003d\"Spliterator.html#binding\"\u003elate-binding\u003c/a\u003e\u003c/em\u003e\n and \u003cem\u003efail-fast\u003c/em\u003e {@link Spliterator} over the elements in this\n set.\n\n \u003cp\u003eThe {@code Spliterator} reports {@link Spliterator#SIZED} and\n {@link Spliterator#DISTINCT}.  Overriding implementations should document\n the reporting of additional characteristic values.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Spliterator","qualifiedName":"java.util.Spliterator","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[{"name":"E","bounds":[]}],"subClasses":["java.util.LinkedHashSet"],"enumConstants":[]}