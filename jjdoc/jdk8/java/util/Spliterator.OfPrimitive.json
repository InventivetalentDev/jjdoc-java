{"name":"Spliterator.OfPrimitive","comment":"A Spliterator specialized for primitive values.","isClass":false,"isInterface":true,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"OfPrimitive","qualifiedName":"java.util.Spliterator.OfPrimitive","dimension":"","elementType":{},"package":"java.util","interfaces":["java.util.Spliterator"],"isAbstract":true,"isStatic":true,"since":"1.8","innerClasses":[],"isInnerClass":true,"constructors":[],"fields":[],"methods":[{"name":"trySplit","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"T_SPLITR","qualifiedName":"T_SPLITR","dimension":"","elementType":{},"typeVariable":{"name":"T_SPLITR","bounds":["java.util.Spliterator.OfPrimitive"]}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"tryAdvance","comment":"If a remaining element exists, performs the given action on it,\n returning {@code true}; else returns {@code false}.  If this\n Spliterator is {@link #ORDERED} the action is performed on the\n next element in encounter order.  Exceptions thrown by the\n action are relayed to the caller.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(T_CONS)","flatSignature":"(T_CONS)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"action","type":{"isPrimitive":false,"simpleName":"T_CONS","qualifiedName":"T_CONS","dimension":"","elementType":{},"typeVariable":{"name":"T_CONS","bounds":[]}}}],"typeParameters":[]},{"name":"forEachRemaining","comment":"Performs the given action for each remaining element, sequentially in\n the current thread, until all elements have been processed or the\n action throws an exception.  If this Spliterator is {@link #ORDERED},\n actions are performed in encounter order.  Exceptions thrown by the\n action are relayed to the caller.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(T_CONS)","flatSignature":"(T_CONS)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":true,"isStatic":false,"parameters":[{"name":"action","type":{"isPrimitive":false,"simpleName":"T_CONS","qualifiedName":"T_CONS","dimension":"","elementType":{},"typeVariable":{"name":"T_CONS","bounds":[]}}}],"typeParameters":[]}],"typeParameters":[{"name":"T","bounds":[]},{"name":"T_CONS","bounds":[]},{"name":"T_SPLITR","bounds":["java.util.Spliterator.OfPrimitive"]}],"subInterfaces":["java.util.Spliterator.OfInt","java.util.Spliterator.OfLong","java.util.Spliterator.OfDouble"],"enumConstants":[]}