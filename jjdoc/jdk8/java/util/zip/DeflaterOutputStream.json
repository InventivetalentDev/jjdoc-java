{"name":"DeflaterOutputStream","comment":"This class implements an output stream filter for compressing data in\n the \"deflate\" compression format. It is also used as the basis for other\n types of compression filters, such as GZIPOutputStream.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"DeflaterOutputStream","qualifiedName":"java.util.zip.DeflaterOutputStream","dimension":"","elementType":{},"package":"java.util.zip","superclass":"java.io.FilterOutputStream","interfaces":[],"isAbstract":false,"isStatic":false,"innerClasses":[],"isInnerClass":false,"constructors":[{"name":"DeflaterOutputStream","comment":"Creates a new output stream with the specified compressor,\n buffer size and flush mode.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.io.OutputStream, java.util.zip.Deflater, int, boolean)","flatSignature":"(OutputStream, Deflater, int, boolean)","parameters":[{"name":"out","type":{"isPrimitive":false,"simpleName":"OutputStream","qualifiedName":"java.io.OutputStream","dimension":"","elementType":{}}},{"name":"def","type":{"isPrimitive":false,"simpleName":"Deflater","qualifiedName":"java.util.zip.Deflater","dimension":"","elementType":{}}},{"name":"size","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"syncFlush","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"DeflaterOutputStream","comment":"Creates a new output stream with the specified compressor and\n buffer size.\n\n \u003cp\u003eThe new output stream instance is created as if by invoking\n the 4-argument constructor DeflaterOutputStream(out, def, size, false).","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.io.OutputStream, java.util.zip.Deflater, int)","flatSignature":"(OutputStream, Deflater, int)","parameters":[{"name":"out","type":{"isPrimitive":false,"simpleName":"OutputStream","qualifiedName":"java.io.OutputStream","dimension":"","elementType":{}}},{"name":"def","type":{"isPrimitive":false,"simpleName":"Deflater","qualifiedName":"java.util.zip.Deflater","dimension":"","elementType":{}}},{"name":"size","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"DeflaterOutputStream","comment":"Creates a new output stream with the specified compressor, flush\n mode and a default buffer size.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.io.OutputStream, java.util.zip.Deflater, boolean)","flatSignature":"(OutputStream, Deflater, boolean)","parameters":[{"name":"out","type":{"isPrimitive":false,"simpleName":"OutputStream","qualifiedName":"java.io.OutputStream","dimension":"","elementType":{}}},{"name":"def","type":{"isPrimitive":false,"simpleName":"Deflater","qualifiedName":"java.util.zip.Deflater","dimension":"","elementType":{}}},{"name":"syncFlush","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"DeflaterOutputStream","comment":"Creates a new output stream with the specified compressor and\n a default buffer size.\n\n \u003cp\u003eThe new output stream instance is created as if by invoking\n the 3-argument constructor DeflaterOutputStream(out, def, false).","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.io.OutputStream, java.util.zip.Deflater)","flatSignature":"(OutputStream, Deflater)","parameters":[{"name":"out","type":{"isPrimitive":false,"simpleName":"OutputStream","qualifiedName":"java.io.OutputStream","dimension":"","elementType":{}}},{"name":"def","type":{"isPrimitive":false,"simpleName":"Deflater","qualifiedName":"java.util.zip.Deflater","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"DeflaterOutputStream","comment":"Creates a new output stream with a default compressor, a default\n buffer size and the specified flush mode.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.io.OutputStream, boolean)","flatSignature":"(OutputStream, boolean)","parameters":[{"name":"out","type":{"isPrimitive":false,"simpleName":"OutputStream","qualifiedName":"java.io.OutputStream","dimension":"","elementType":{}}},{"name":"syncFlush","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"DeflaterOutputStream","comment":"Creates a new output stream with a default compressor and buffer size.\n\n \u003cp\u003eThe new output stream instance is created as if by invoking\n the 2-argument constructor DeflaterOutputStream(out, false).","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.io.OutputStream)","flatSignature":"(OutputStream)","parameters":[{"name":"out","type":{"isPrimitive":false,"simpleName":"OutputStream","qualifiedName":"java.io.OutputStream","dimension":"","elementType":{}}}],"typeParameters":[]}],"fields":[],"methods":[{"name":"write","comment":"Writes a byte to the compressed output stream. This method will\n block until the byte can be written.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int)","flatSignature":"(int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"b","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"write","comment":"Writes an array of bytes to the compressed output stream. This\n method will block until all the bytes are written.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(byte[], int, int)","flatSignature":"(byte[], int, int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"b","type":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"[]","elementType":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"","elementType":{}}}},{"name":"off","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"len","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"finish","comment":"Finishes writing compressed data to the output stream without closing\n the underlying stream. Use this method when applying multiple filters\n in succession to the same output stream.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"close","comment":"Writes remaining compressed data to the output stream and closes the\n underlying stream.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"flush","comment":"Flushes the compressed output stream.\n\n If {@link #DeflaterOutputStream(OutputStream, Deflater, int, boolean)\n syncFlush} is {@code true} when this compressed output stream is\n constructed, this method first flushes the underlying {@code compressor}\n with the flush mode {@link Deflater#SYNC_FLUSH} to force\n all pending data to be flushed out to the output stream and then\n flushes the output stream. Otherwise this method only flushes the\n output stream without flushing the {@code compressor}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"subClasses":["java.util.zip.ZipOutputStream","java.util.zip.GZIPOutputStream"],"enumConstants":[]}