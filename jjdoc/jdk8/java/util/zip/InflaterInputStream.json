{"name":"InflaterInputStream","comment":"This class implements a stream filter for uncompressing data in the\n \"deflate\" compression format. It is also used as the basis for other\n decompression filters, such as GZIPInputStream.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"InflaterInputStream","qualifiedName":"java.util.zip.InflaterInputStream","dimension":"","elementType":{},"package":"java.util.zip","superclass":"java.io.FilterInputStream","interfaces":[],"isAbstract":false,"isStatic":false,"innerClasses":[],"isInnerClass":false,"constructors":[{"name":"InflaterInputStream","comment":"Creates a new input stream with the specified decompressor and\n buffer size.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.io.InputStream, java.util.zip.Inflater, int)","flatSignature":"(InputStream, Inflater, int)","parameters":[{"name":"in","type":{"isPrimitive":false,"simpleName":"InputStream","qualifiedName":"java.io.InputStream","dimension":"","elementType":{}}},{"name":"inf","type":{"isPrimitive":false,"simpleName":"Inflater","qualifiedName":"java.util.zip.Inflater","dimension":"","elementType":{}}},{"name":"size","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"InflaterInputStream","comment":"Creates a new input stream with the specified decompressor and a\n default buffer size.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.io.InputStream, java.util.zip.Inflater)","flatSignature":"(InputStream, Inflater)","parameters":[{"name":"in","type":{"isPrimitive":false,"simpleName":"InputStream","qualifiedName":"java.io.InputStream","dimension":"","elementType":{}}},{"name":"inf","type":{"isPrimitive":false,"simpleName":"Inflater","qualifiedName":"java.util.zip.Inflater","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"InflaterInputStream","comment":"Creates a new input stream with a default decompressor and buffer size.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.io.InputStream)","flatSignature":"(InputStream)","parameters":[{"name":"in","type":{"isPrimitive":false,"simpleName":"InputStream","qualifiedName":"java.io.InputStream","dimension":"","elementType":{}}}],"typeParameters":[]}],"fields":[],"methods":[{"name":"read","comment":"Reads a byte of uncompressed data. This method will block until\n enough input is available for decompression.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"read","comment":"Reads uncompressed data into an array of bytes. If \u003ccode\u003elen\u003c/code\u003e is not\n zero, the method will block until some input can be decompressed; otherwise,\n no bytes are read and \u003ccode\u003e0\u003c/code\u003e is returned.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(byte[], int, int)","flatSignature":"(byte[], int, int)","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"b","type":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"[]","elementType":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"","elementType":{}}}},{"name":"off","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"len","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"available","comment":"Returns 0 after EOF has been reached, otherwise always return 1.\n \u003cp\u003e\n Programs should not count on this method to return the actual number\n of bytes that could be read without blocking.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"skip","comment":"Skips specified number of bytes of uncompressed data.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(long)","flatSignature":"(long)","returnType":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"n","type":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"close","comment":"Closes this input stream and releases any system resources associated\n with the stream.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"markSupported","comment":"Tests if this input stream supports the \u003ccode\u003emark\u003c/code\u003e and\n \u003ccode\u003ereset\u003c/code\u003e methods. The \u003ccode\u003emarkSupported\u003c/code\u003e\n method of \u003ccode\u003eInflaterInputStream\u003c/code\u003e returns\n \u003ccode\u003efalse\u003c/code\u003e.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"mark","comment":"Marks the current position in this input stream.\n\n \u003cp\u003e The \u003ccode\u003emark\u003c/code\u003e method of \u003ccode\u003eInflaterInputStream\u003c/code\u003e\n does nothing.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int)","flatSignature":"(int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"readlimit","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"reset","comment":"Repositions this stream to the position at the time the\n \u003ccode\u003emark\u003c/code\u003e method was last called on this input stream.\n\n \u003cp\u003e The method \u003ccode\u003ereset\u003c/code\u003e for class\n \u003ccode\u003eInflaterInputStream\u003c/code\u003e does nothing except throw an\n \u003ccode\u003eIOException\u003c/code\u003e.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"subClasses":["java.util.zip.ZipInputStream","java.util.zip.GZIPInputStream"],"enumConstants":[]}