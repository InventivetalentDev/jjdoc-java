{"name":"Currency","comment":"Represents a currency. Currencies are identified by their ISO 4217 currency\n codes. Visit the \u003ca href\u003d\"http://www.iso.org/iso/home/standards/currency_codes.htm\"\u003e\n ISO web site\u003c/a\u003e for more information.\n \u003cp\u003e\n The class is designed so that there\u0027s never more than one\n \u003ccode\u003eCurrency\u003c/code\u003e instance for any given currency. Therefore, there\u0027s\n no public constructor. You obtain a \u003ccode\u003eCurrency\u003c/code\u003e instance using\n the \u003ccode\u003egetInstance\u003c/code\u003e methods.\n \u003cp\u003e\n Users can supersede the Java runtime currency data by means of the system\n property {@code java.util.currency.data}. If this system property is\n defined then its value is the location of a properties file, the contents of\n which are key/value pairs of the ISO 3166 country codes and the ISO 4217\n currency data respectively.  The value part consists of three ISO 4217 values\n of a currency, i.e., an alphabetic code, a numeric code, and a minor unit.\n Those three ISO 4217 values are separated by commas.\n The lines which start with \u0027#\u0027s are considered comment lines. An optional UTC\n timestamp may be specified per currency entry if users need to specify a\n cutover date indicating when the new data comes into effect. The timestamp is\n appended to the end of the currency properties and uses a comma as a separator.\n If a UTC datestamp is present and valid, the JRE will only use the new currency\n properties if the current UTC date is later than the date specified at class\n loading time. The format of the timestamp must be of ISO 8601 format :\n {@code \u0027yyyy-MM-dd\u0027T\u0027HH:mm:ss\u0027}. For example,\n \u003cp\u003e\n \u003ccode\u003e\n #Sample currency properties\u003cbr\u003e\n JP\u003dJPZ,999,0\n \u003c/code\u003e\n \u003cp\u003e\n will supersede the currency data for Japan.\n\n \u003cp\u003e\n \u003ccode\u003e\n #Sample currency properties with cutover date\u003cbr\u003e\n JP\u003dJPZ,999,0,2014-01-01T00:00:00\n \u003c/code\u003e\n \u003cp\u003e\n will supersede the currency data for Japan if {@code Currency} class is loaded after\n 1st January 2014 00:00:00 GMT.\n \u003cp\u003e\n Where syntactically malformed entries are encountered, the entry is ignored\n and the remainder of entries in file are processed. For instances where duplicate\n country code entries exist, the behavior of the Currency information for that\n {@code Currency} is undefined and the remainder of entries in file are processed.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"Currency","qualifiedName":"java.util.Currency","dimension":"","elementType":{},"package":"java.util","superclass":"java.lang.Object","interfaces":["java.io.Serializable"],"isAbstract":false,"isStatic":false,"since":"1.4","innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"getInstance","comment":"Returns the \u003ccode\u003eCurrency\u003c/code\u003e instance for the given currency code.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":false,"simpleName":"Currency","qualifiedName":"java.util.Currency","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[{"name":"currencyCode","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getInstance","comment":"Returns the \u003ccode\u003eCurrency\u003c/code\u003e instance for the country of the\n given locale. The language and variant components of the locale\n are ignored. The result may vary over time, as countries change their\n currencies. For example, for the original member countries of the\n European Monetary Union, the method returns the old national currencies\n until December 31, 2001, and the Euro from January 1, 2002, local time\n of the respective countries.\n \u003cp\u003e\n The method returns \u003ccode\u003enull\u003c/code\u003e for territories that don\u0027t\n have a currency, such as Antarctica.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.util.Locale)","flatSignature":"(Locale)","returnType":{"isPrimitive":false,"simpleName":"Currency","qualifiedName":"java.util.Currency","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[{"name":"locale","type":{"isPrimitive":false,"simpleName":"Locale","qualifiedName":"java.util.Locale","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getAvailableCurrencies","comment":"Gets the set of available currencies.  The returned set of currencies\n contains all of the available currencies, which may include currencies\n that represent obsolete ISO 4217 codes.  The set can be modified\n without affecting the available currencies in the runtime.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Set","qualifiedName":"java.util.Set","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[],"typeParameters":[]},{"name":"getCurrencyCode","comment":"Gets the ISO 4217 currency code of this currency.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getSymbol","comment":"Gets the symbol of this currency for the default\n {@link Locale.Category#DISPLAY DISPLAY} locale.\n For example, for the US Dollar, the symbol is \"$\" if the default\n locale is the US, while for other locales it may be \"US$\". If no\n symbol can be determined, the ISO 4217 currency code is returned.\n \u003cp\u003e\n This is equivalent to calling\n {@link #getSymbol(Locale)\n     getSymbol(Locale.getDefault(Locale.Category.DISPLAY))}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getSymbol","comment":"Gets the symbol of this currency for the specified locale.\n For example, for the US Dollar, the symbol is \"$\" if the specified\n locale is the US, while for other locales it may be \"US$\". If no\n symbol can be determined, the ISO 4217 currency code is returned.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.util.Locale)","flatSignature":"(Locale)","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"locale","type":{"isPrimitive":false,"simpleName":"Locale","qualifiedName":"java.util.Locale","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getDefaultFractionDigits","comment":"Gets the default number of fraction digits used with this currency.\n For example, the default number of fraction digits for the Euro is 2,\n while for the Japanese Yen it\u0027s 0.\n In the case of pseudo-currencies, such as IMF Special Drawing Rights,\n -1 is returned.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getNumericCode","comment":"Returns the ISO 4217 numeric code of this currency.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getDisplayName","comment":"Gets the name that is suitable for displaying this currency for\n the default {@link Locale.Category#DISPLAY DISPLAY} locale.\n If there is no suitable display name found\n for the default locale, the ISO 4217 currency code is returned.\n \u003cp\u003e\n This is equivalent to calling\n {@link #getDisplayName(Locale)\n     getDisplayName(Locale.getDefault(Locale.Category.DISPLAY))}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getDisplayName","comment":"Gets the name that is suitable for displaying this currency for\n the specified locale.  If there is no suitable display name found\n for the specified locale, the ISO 4217 currency code is returned.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.util.Locale)","flatSignature":"(Locale)","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"locale","type":{"isPrimitive":false,"simpleName":"Locale","qualifiedName":"java.util.Locale","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"toString","comment":"Returns the ISO 4217 currency code of this currency.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}