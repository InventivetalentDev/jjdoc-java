{"name":"ListResourceBundle","comment":"\u003ccode\u003eListResourceBundle\u003c/code\u003e is an abstract subclass of\n \u003ccode\u003eResourceBundle\u003c/code\u003e that manages resources for a locale\n in a convenient and easy to use list. See \u003ccode\u003eResourceBundle\u003c/code\u003e for\n more information about resource bundles in general.\n\n \u003cP\u003e\n Subclasses must override \u003ccode\u003egetContents\u003c/code\u003e and provide an array,\n where each item in the array is a pair of objects.\n The first element of each pair is the key, which must be a\n \u003ccode\u003eString\u003c/code\u003e, and the second element is the value associated with\n that key.\n\n \u003cp\u003e\n The following \u003ca name\u003d\"sample\"\u003eexample\u003c/a\u003e shows two members of a resource\n bundle family with the base name \"MyResources\".\n \"MyResources\" is the default member of the bundle family, and\n \"MyResources_fr\" is the French member.\n These members are based on \u003ccode\u003eListResourceBundle\u003c/code\u003e\n (a related \u003ca href\u003d\"PropertyResourceBundle.html#sample\"\u003eexample\u003c/a\u003e shows\n how you can add a bundle to this family that\u0027s based on a properties file).\n The keys in this example are of the form \"s1\" etc. The actual\n keys are entirely up to your choice, so long as they are the same as\n the keys you use in your program to retrieve the objects from the bundle.\n Keys are case-sensitive.\n \u003cblockquote\u003e\n \u003cpre\u003e\n\n public class MyResources extends ListResourceBundle {\n     protected Object[][] getContents() {\n         return new Object[][] {\n         // LOCALIZE THIS\n             {\"s1\", \"The disk \\\"{1}\\\" contains {0}.\"},  // MessageFormat pattern\n             {\"s2\", \"1\"},                               // location of {0} in pattern\n             {\"s3\", \"My Disk\"},                         // sample disk name\n             {\"s4\", \"no files\"},                        // first ChoiceFormat choice\n             {\"s5\", \"one file\"},                        // second ChoiceFormat choice\n             {\"s6\", \"{0,number} files\"},                // third ChoiceFormat choice\n             {\"s7\", \"3 Mar 96\"},                        // sample date\n             {\"s8\", new Dimension(1,5)}                 // real object, not just string\n         // END OF MATERIAL TO LOCALIZE\n         };\n     }\n }\n\n public class MyResources_fr extends ListResourceBundle {\n     protected Object[][] getContents() {\n         return new Object[][] {\n         // LOCALIZE THIS\n             {\"s1\", \"Le disque \\\"{1}\\\" {0}.\"},          // MessageFormat pattern\n             {\"s2\", \"1\"},                               // location of {0} in pattern\n             {\"s3\", \"Mon disque\"},                      // sample disk name\n             {\"s4\", \"ne contient pas de fichiers\"},     // first ChoiceFormat choice\n             {\"s5\", \"contient un fichier\"},             // second ChoiceFormat choice\n             {\"s6\", \"contient {0,number} fichiers\"},    // third ChoiceFormat choice\n             {\"s7\", \"3 mars 1996\"},                     // sample date\n             {\"s8\", new Dimension(1,3)}                 // real object, not just string\n         // END OF MATERIAL TO LOCALIZE\n         };\n     }\n }\n \u003c/pre\u003e\n \u003c/blockquote\u003e\n\n \u003cp\u003e\n The implementation of a {@code ListResourceBundle} subclass must be thread-safe\n if it\u0027s simultaneously used by multiple threads. The default implementations\n of the methods in this class are thread-safe.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"ListResourceBundle","qualifiedName":"java.util.ListResourceBundle","dimension":"","elementType":{},"package":"java.util","superclass":"java.util.ResourceBundle","interfaces":[],"isAbstract":true,"isStatic":false,"since":"JDK1.1","innerClasses":[],"isInnerClass":false,"constructors":[{"name":"ListResourceBundle","comment":"Sole constructor.  (For invocation by subclass constructors, typically\n implicit.)","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","parameters":[],"typeParameters":[]}],"fields":[],"methods":[{"name":"handleGetObject","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":false,"simpleName":"Object","qualifiedName":"java.lang.Object","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"key","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getKeys","comment":"Returns an \u003ccode\u003eEnumeration\u003c/code\u003e of the keys contained in\n this \u003ccode\u003eResourceBundle\u003c/code\u003e and its parent bundles.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Enumeration","qualifiedName":"java.util.Enumeration","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}