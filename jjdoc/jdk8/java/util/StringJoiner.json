{"name":"StringJoiner","comment":"{@code StringJoiner} is used to construct a sequence of characters separated\n by a delimiter and optionally starting with a supplied prefix\n and ending with a supplied suffix.\n \u003cp\u003e\n Prior to adding something to the {@code StringJoiner}, its\n {@code sj.toString()} method will, by default, return {@code prefix + suffix}.\n However, if the {@code setEmptyValue} method is called, the {@code emptyValue}\n supplied will be returned instead. This can be used, for example, when\n creating a string using set notation to indicate an empty set, i.e.\n \u003ccode\u003e\"{}\"\u003c/code\u003e, where the {@code prefix} is \u003ccode\u003e\"{\"\u003c/code\u003e, the\n {@code suffix} is \u003ccode\u003e\"}\"\u003c/code\u003e and nothing has been added to the\n {@code StringJoiner}.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"StringJoiner","qualifiedName":"java.util.StringJoiner","dimension":"","elementType":{},"package":"java.util","superclass":"java.lang.Object","interfaces":[],"isAbstract":false,"isStatic":false,"since":"1.8","innerClasses":[],"isInnerClass":false,"constructors":[{"name":"StringJoiner","comment":"Constructs a {@code StringJoiner} with no characters in it, with no\n {@code prefix} or {@code suffix}, and a copy of the supplied\n {@code delimiter}.\n If no characters are added to the {@code StringJoiner} and methods\n accessing the value of it are invoked, it will not return a\n {@code prefix} or {@code suffix} (or properties thereof) in the result,\n unless {@code setEmptyValue} has first been called.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.lang.CharSequence)","flatSignature":"(CharSequence)","parameters":[{"name":"delimiter","type":{"isPrimitive":false,"simpleName":"CharSequence","qualifiedName":"java.lang.CharSequence","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"StringJoiner","comment":"Constructs a {@code StringJoiner} with no characters in it using copies\n of the supplied {@code prefix}, {@code delimiter} and {@code suffix}.\n If no characters are added to the {@code StringJoiner} and methods\n accessing the string value of it are invoked, it will return the\n {@code prefix + suffix} (or properties thereof) in the result, unless\n {@code setEmptyValue} has first been called.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence)","flatSignature":"(CharSequence, CharSequence, CharSequence)","parameters":[{"name":"delimiter","type":{"isPrimitive":false,"simpleName":"CharSequence","qualifiedName":"java.lang.CharSequence","dimension":"","elementType":{}}},{"name":"prefix","type":{"isPrimitive":false,"simpleName":"CharSequence","qualifiedName":"java.lang.CharSequence","dimension":"","elementType":{}}},{"name":"suffix","type":{"isPrimitive":false,"simpleName":"CharSequence","qualifiedName":"java.lang.CharSequence","dimension":"","elementType":{}}}],"typeParameters":[]}],"fields":[],"methods":[{"name":"setEmptyValue","comment":"Sets the sequence of characters to be used when determining the string\n representation of this {@code StringJoiner} and no elements have been\n added yet, that is, when it is empty.  A copy of the {@code emptyValue}\n parameter is made for this purpose. Note that once an add method has been\n called, the {@code StringJoiner} is no longer considered empty, even if\n the element(s) added correspond to the empty {@code String}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.CharSequence)","flatSignature":"(CharSequence)","returnType":{"isPrimitive":false,"simpleName":"StringJoiner","qualifiedName":"java.util.StringJoiner","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"emptyValue","type":{"isPrimitive":false,"simpleName":"CharSequence","qualifiedName":"java.lang.CharSequence","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"toString","comment":"Returns the current value, consisting of the {@code prefix}, the values\n added so far separated by the {@code delimiter}, and the {@code suffix},\n unless no elements have been added in which case, the\n {@code prefix + suffix} or the {@code emptyValue} characters are returned","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"add","comment":"Adds a copy of the given {@code CharSequence} value as the next\n element of the {@code StringJoiner} value. If {@code newElement} is\n {@code null}, then {@code \"null\"} is added.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.CharSequence)","flatSignature":"(CharSequence)","returnType":{"isPrimitive":false,"simpleName":"StringJoiner","qualifiedName":"java.util.StringJoiner","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"newElement","type":{"isPrimitive":false,"simpleName":"CharSequence","qualifiedName":"java.lang.CharSequence","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"merge","comment":"Adds the contents of the given {@code StringJoiner} without prefix and\n suffix as the next element if it is non-empty. If the given {@code\n StringJoiner} is empty, the call has no effect.\n\n \u003cp\u003eA {@code StringJoiner} is empty if {@link #add(CharSequence) add()}\n has never been called, and if {@code merge()} has never been called\n with a non-empty {@code StringJoiner} argument.\n\n \u003cp\u003eIf the other {@code StringJoiner} is using a different delimiter,\n then elements from the other {@code StringJoiner} are concatenated with\n that delimiter and the result is appended to this {@code StringJoiner}\n as a single element.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.util.StringJoiner)","flatSignature":"(StringJoiner)","returnType":{"isPrimitive":false,"simpleName":"StringJoiner","qualifiedName":"java.util.StringJoiner","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"other","type":{"isPrimitive":false,"simpleName":"StringJoiner","qualifiedName":"java.util.StringJoiner","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"length","comment":"Returns the length of the {@code String} representation\n of this {@code StringJoiner}. Note that if\n no add methods have been called, then the length of the {@code String}\n representation (either {@code prefix + suffix} or {@code emptyValue})\n will be returned. The value should be equivalent to\n {@code toString().length()}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}