{"name":"PropertyResourceBundle","comment":"\u003ccode\u003ePropertyResourceBundle\u003c/code\u003e is a concrete subclass of\n \u003ccode\u003eResourceBundle\u003c/code\u003e that manages resources for a locale\n using a set of static strings from a property file. See\n {@link ResourceBundle ResourceBundle} for more information about resource\n bundles.\n\n \u003cp\u003e\n Unlike other types of resource bundle, you don\u0027t subclass\n \u003ccode\u003ePropertyResourceBundle\u003c/code\u003e.  Instead, you supply properties\n files containing the resource data.  \u003ccode\u003eResourceBundle.getBundle\u003c/code\u003e\n will automatically look for the appropriate properties file and create a\n \u003ccode\u003ePropertyResourceBundle\u003c/code\u003e that refers to it. See\n {@link ResourceBundle#getBundle(java.lang.String, java.util.Locale, java.lang.ClassLoader) ResourceBundle.getBundle}\n for a complete description of the search and instantiation strategy.\n\n \u003cp\u003e\n The following \u003ca name\u003d\"sample\"\u003eexample\u003c/a\u003e shows a member of a resource\n bundle family with the base name \"MyResources\".\n The text defines the bundle \"MyResources_de\",\n the German member of the bundle family.\n This member is based on \u003ccode\u003ePropertyResourceBundle\u003c/code\u003e, and the text\n therefore is the content of the file \"MyResources_de.properties\"\n (a related \u003ca href\u003d\"ListResourceBundle.html#sample\"\u003eexample\u003c/a\u003e shows\n how you can add bundles to this family that are implemented as subclasses\n of \u003ccode\u003eListResourceBundle\u003c/code\u003e).\n The keys in this example are of the form \"s1\" etc. The actual\n keys are entirely up to your choice, so long as they are the same as\n the keys you use in your program to retrieve the objects from the bundle.\n Keys are case-sensitive.\n \u003cblockquote\u003e\n \u003cpre\u003e\n # MessageFormat pattern\n s1\u003dDie Platte \\\"{1}\\\" enth\u0026auml;lt {0}.\n\n # location of {0} in pattern\n s2\u003d1\n\n # sample disk name\n s3\u003dMeine Platte\n\n # first ChoiceFormat choice\n s4\u003dkeine Dateien\n\n # second ChoiceFormat choice\n s5\u003deine Datei\n\n # third ChoiceFormat choice\n s6\u003d{0,number} Dateien\n\n # sample date\n s7\u003d3. M\u0026auml;rz 1996\n \u003c/pre\u003e\n \u003c/blockquote\u003e\n\n \u003cp\u003e\n The implementation of a {@code PropertyResourceBundle} subclass must be\n thread-safe if it\u0027s simultaneously used by multiple threads. The default\n implementations of the non-abstract methods in this class are thread-safe.\n\n \u003cp\u003e\n \u003cstrong\u003eNote:\u003c/strong\u003e PropertyResourceBundle can be constructed either\n from an InputStream or a Reader, which represents a property file.\n Constructing a PropertyResourceBundle instance from an InputStream requires\n that the input stream be encoded in ISO-8859-1.  In that case, characters\n that cannot be represented in ISO-8859-1 encoding must be represented by Unicode Escapes\n as defined in section 3.3 of\n \u003ccite\u003eThe Java\u0026trade; Language Specification\u003c/cite\u003e\n whereas the other constructor which takes a Reader does not have that limitation.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"PropertyResourceBundle","qualifiedName":"java.util.PropertyResourceBundle","dimension":"","elementType":{},"package":"java.util","superclass":"java.util.ResourceBundle","interfaces":[],"isAbstract":false,"isStatic":false,"since":"JDK1.1","innerClasses":[],"isInnerClass":false,"constructors":[{"name":"PropertyResourceBundle","comment":"Creates a property resource bundle from an {@link java.io.InputStream\n InputStream}.  The property file read with this constructor\n must be encoded in ISO-8859-1.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.io.InputStream)","flatSignature":"(InputStream)","parameters":[{"name":"stream","type":{"isPrimitive":false,"simpleName":"InputStream","qualifiedName":"java.io.InputStream","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"PropertyResourceBundle","comment":"Creates a property resource bundle from a {@link java.io.Reader\n Reader}.  Unlike the constructor\n {@link #PropertyResourceBundle(java.io.InputStream) PropertyResourceBundle(InputStream)},\n there is no limitation as to the encoding of the input property file.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.io.Reader)","flatSignature":"(Reader)","parameters":[{"name":"reader","type":{"isPrimitive":false,"simpleName":"Reader","qualifiedName":"java.io.Reader","dimension":"","elementType":{}}}],"typeParameters":[]}],"fields":[],"methods":[{"name":"handleGetObject","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":false,"simpleName":"Object","qualifiedName":"java.lang.Object","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"key","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getKeys","comment":"Returns an \u003ccode\u003eEnumeration\u003c/code\u003e of the keys contained in\n this \u003ccode\u003eResourceBundle\u003c/code\u003e and its parent bundles.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Enumeration","qualifiedName":"java.util.Enumeration","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}