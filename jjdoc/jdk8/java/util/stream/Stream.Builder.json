{"name":"Stream.Builder","comment":"A mutable builder for a {@code Stream}.  This allows the creation of a\n {@code Stream} by generating elements individually and adding them to the\n {@code Builder} (without the copying overhead that comes from using\n an {@code ArrayList} as a temporary buffer.)\n\n \u003cp\u003eA stream builder has a lifecycle, which starts in a building\n phase, during which elements can be added, and then transitions to a built\n phase, after which elements may not be added.  The built phase begins\n when the {@link #build()} method is called, which creates an ordered\n {@code Stream} whose elements are the elements that were added to the stream\n builder, in the order they were added.","isClass":false,"isInterface":true,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"Builder","qualifiedName":"java.util.stream.Stream.Builder","dimension":"","elementType":{},"package":"java.util.stream","interfaces":["java.util.function.Consumer"],"isAbstract":true,"isStatic":true,"since":"1.8","innerClasses":[],"isInnerClass":true,"constructors":[],"fields":[],"methods":[{"name":"accept","comment":"Adds an element to the stream being built.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(T)","flatSignature":"(T)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"t","type":{"isPrimitive":false,"simpleName":"T","qualifiedName":"T","dimension":"","elementType":{},"typeVariable":{"name":"T","bounds":[]}}}],"typeParameters":[]},{"name":"add","comment":"Adds an element to the stream being built.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(T)","flatSignature":"(T)","returnType":{"isPrimitive":false,"simpleName":"Builder","qualifiedName":"java.util.stream.Stream.Builder","dimension":"","elementType":{}},"isAbstract":false,"isDefault":true,"isStatic":false,"parameters":[{"name":"t","type":{"isPrimitive":false,"simpleName":"T","qualifiedName":"T","dimension":"","elementType":{},"typeVariable":{"name":"T","bounds":[]}}}],"typeParameters":[]},{"name":"build","comment":"Builds the stream, transitioning this builder to the built state.\n An {@code IllegalStateException} is thrown if there are further attempts\n to operate on the builder after it has entered the built state.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Stream","qualifiedName":"java.util.stream.Stream","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[{"name":"T","bounds":[]}],"enumConstants":[]}