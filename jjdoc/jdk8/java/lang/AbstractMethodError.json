{"name":"AbstractMethodError","comment":"Thrown when an application tries to call an abstract method.\n Normally, this error is caught by the compiler; this error can\n only occur at run time if the definition of some class has\n incompatibly changed since the currently executing method was last\n compiled.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"AbstractMethodError","qualifiedName":"java.lang.AbstractMethodError","dimension":"","elementType":{},"package":"java.lang","superclass":"java.lang.IncompatibleClassChangeError","interfaces":[],"isAbstract":false,"isStatic":false,"since":"JDK1.0","innerClasses":[],"isInnerClass":false,"constructors":[{"name":"AbstractMethodError","comment":"Constructs an \u003ccode\u003eAbstractMethodError\u003c/code\u003e with no detail  message.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","parameters":[],"typeParameters":[]},{"name":"AbstractMethodError","comment":"Constructs an \u003ccode\u003eAbstractMethodError\u003c/code\u003e with the specified\n detail message.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","parameters":[{"name":"s","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]}],"fields":[],"methods":[],"typeParameters":[],"enumConstants":[]}