{"name":"Reference","comment":"Abstract base class for reference objects.  This class defines the\n operations common to all reference objects.  Because reference objects are\n implemented in close cooperation with the garbage collector, this class may\n not be subclassed directly.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"Reference","qualifiedName":"java.lang.ref.Reference","dimension":"","elementType":{},"package":"java.lang.ref","superclass":"java.lang.Object","interfaces":[],"isAbstract":true,"isStatic":false,"since":"1.2","innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"get","comment":"Returns this reference object\u0027s referent.  If this reference object has\n been cleared, either by the program or by the garbage collector, then\n this method returns \u003ccode\u003enull\u003c/code\u003e.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"T","qualifiedName":"T","dimension":"","elementType":{},"typeVariable":{"name":"T","bounds":[]}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"clear","comment":"Clears this reference object.  Invoking this method will not cause this\n object to be enqueued.\n\n \u003cp\u003e This method is invoked only by Java code; when the garbage collector\n clears references it does so directly, without invoking this method.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"isEnqueued","comment":"Tells whether or not this reference object has been enqueued, either by\n the program or by the garbage collector.  If this reference object was\n not registered with a queue when it was created, then this method will\n always return \u003ccode\u003efalse\u003c/code\u003e.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"enqueue","comment":"Adds this reference object to the queue with which it is registered,\n if any.\n\n \u003cp\u003e This method is invoked only by Java code; when the garbage collector\n enqueues references it does so directly, without invoking this method.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[{"name":"T","bounds":[]}],"subClasses":["java.lang.ref.WeakReference","java.lang.ref.SoftReference","java.lang.ref.PhantomReference"],"enumConstants":[]}