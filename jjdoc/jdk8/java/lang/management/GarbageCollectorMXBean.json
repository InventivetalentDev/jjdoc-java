{"name":"GarbageCollectorMXBean","comment":"The management interface for the garbage collection of\n the Java virtual machine.  Garbage collection is the process\n that the Java virtual machine uses to find and reclaim unreachable\n objects to free up memory space.  A garbage collector is one type of\n {@link MemoryManagerMXBean memory manager}.\n\n \u003cp\u003e A Java virtual machine may have one or more instances of\n the implementation class of this interface.\n An instance implementing this interface is\n an \u003ca href\u003d\"ManagementFactory.html#MXBean\"\u003eMXBean\u003c/a\u003e\n that can be obtained by calling\n the {@link ManagementFactory#getGarbageCollectorMXBeans} method or\n from the {@link ManagementFactory#getPlatformMBeanServer\n platform \u003ctt\u003eMBeanServer\u003c/tt\u003e} method.\n\n \u003cp\u003eThe \u003ctt\u003eObjectName\u003c/tt\u003e for uniquely identifying the MXBean for\n a garbage collector within an MBeanServer is:\n \u003cblockquote\u003e\n   {@link ManagementFactory#GARBAGE_COLLECTOR_MXBEAN_DOMAIN_TYPE\n    \u003ctt\u003ejava.lang:type\u003dGarbageCollector\u003c/tt\u003e}\u003ctt\u003e,name\u003d\u003c/tt\u003e\u003ci\u003ecollector\u0027s name\u003c/i\u003e\n \u003c/blockquote\u003e\n\n It can be obtained by calling the\n {@link PlatformManagedObject#getObjectName} method.\n\n A platform usually includes additional platform-dependent information\n specific to a garbage collection algorithm for monitoring.","isClass":false,"isInterface":true,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"GarbageCollectorMXBean","qualifiedName":"java.lang.management.GarbageCollectorMXBean","dimension":"","elementType":{},"package":"java.lang.management","interfaces":["java.lang.management.MemoryManagerMXBean"],"isAbstract":true,"isStatic":false,"since":"1.5","innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"getCollectionCount","comment":"Returns the total number of collections that have occurred.\n This method returns \u003ctt\u003e-1\u003c/tt\u003e if the collection count is undefined for\n this collector.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getCollectionTime","comment":"Returns the approximate accumulated collection elapsed time\n in milliseconds.  This method returns \u003ctt\u003e-1\u003c/tt\u003e if the collection\n elapsed time is undefined for this collector.\n \u003cp\u003e\n The Java virtual machine implementation may use a high resolution\n timer to measure the elapsed time.  This method may return the\n same value even if the collection count has been incremented\n if the collection elapsed time is very short.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}