{"name":"ManagementPermission","comment":"The permission which the SecurityManager will check when code\n that is running with a SecurityManager calls methods defined\n in the management interface for the Java platform.\n \u003cP\u003e\n The following table\n provides a summary description of what the permission allows,\n and discusses the risks of granting code the permission.\n\n \u003ctable border\u003d1 cellpadding\u003d5 summary\u003d\"Table shows permission target name, what the permission allows, and associated risks\"\u003e\n \u003ctr\u003e\n \u003cth\u003ePermission Target Name\u003c/th\u003e\n \u003cth\u003eWhat the Permission Allows\u003c/th\u003e\n \u003cth\u003eRisks of Allowing this Permission\u003c/th\u003e\n \u003c/tr\u003e\n\n \u003ctr\u003e\n   \u003ctd\u003econtrol\u003c/td\u003e\n   \u003ctd\u003eAbility to control the runtime characteristics of the Java virtual\n       machine, for example, enabling and disabling the verbose output for\n       the class loading or memory system, setting the threshold of a memory\n       pool, and enabling and disabling the thread contention monitoring\n       support. Some actions controlled by this permission can disclose\n       information about the running application, like the -verbose:class\n       flag.\n   \u003c/td\u003e\n   \u003ctd\u003eThis allows an attacker to control the runtime characteristics\n       of the Java virtual machine and cause the system to misbehave. An\n       attacker can also access some information related to the running\n       application.\n   \u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n   \u003ctd\u003emonitor\u003c/td\u003e\n   \u003ctd\u003eAbility to retrieve runtime information about\n       the Java virtual machine such as thread\n       stack trace, a list of all loaded class names, and input arguments\n       to the Java virtual machine.\u003c/td\u003e\n   \u003ctd\u003eThis allows malicious code to monitor runtime information and\n       uncover vulnerabilities.\u003c/td\u003e\n \u003c/tr\u003e\n\n \u003c/table\u003e\n\n \u003cp\u003e\n Programmers do not normally create ManagementPermission objects directly.\n Instead they are created by the security policy code based on reading\n the security policy file.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"ManagementPermission","qualifiedName":"java.lang.management.ManagementPermission","dimension":"","elementType":{},"package":"java.lang.management","superclass":"java.security.BasicPermission","interfaces":[],"isAbstract":false,"isStatic":false,"since":"1.5","innerClasses":[],"isInnerClass":false,"constructors":[{"name":"ManagementPermission","comment":"Constructs a ManagementPermission with the specified name.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","parameters":[{"name":"name","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"ManagementPermission","comment":"Constructs a new ManagementPermission object.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.lang.String, java.lang.String)","flatSignature":"(String, String)","parameters":[{"name":"name","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"actions","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]}],"fields":[],"methods":[],"typeParameters":[],"enumConstants":[]}