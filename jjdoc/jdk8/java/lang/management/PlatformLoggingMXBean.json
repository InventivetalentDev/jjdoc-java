{"name":"PlatformLoggingMXBean","comment":"The management interface for the {@linkplain java.util.logging logging} facility.\n\n \u003cp\u003eThere is a single global instance of the \u003ctt\u003ePlatformLoggingMXBean\u003c/tt\u003e.\n The {@link java.lang.management.ManagementFactory#getPlatformMXBean(Class)\n ManagementFactory.getPlatformMXBean} method can be used to obtain\n the {@code PlatformLoggingMXBean} object as follows:\n \u003cpre\u003e\n     PlatformLoggingMXBean logging \u003d ManagementFactory.getPlatformMXBean(PlatformLoggingMXBean.class);\n \u003c/pre\u003e\n The {@code PlatformLoggingMXBean} object is also registered with the\n platform {@linkplain java.lang.management.ManagementFactory#getPlatformMBeanServer\n MBeanServer}.\n The {@link javax.management.ObjectName ObjectName} for uniquely\n identifying the {@code PlatformLoggingMXBean} within an MBeanServer is:\n \u003cpre\u003e\n      {@link java.util.logging.LogManager#LOGGING_MXBEAN_NAME java.util.logging:type\u003dLogging}\n \u003c/pre\u003e\n\n \u003cp\u003eThe instance registered in the platform \u003ctt\u003eMBeanServer\u003c/tt\u003e with\n this {@code ObjectName} implements all attributes defined by\n {@link java.util.logging.LoggingMXBean}.","isClass":false,"isInterface":true,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"PlatformLoggingMXBean","qualifiedName":"java.lang.management.PlatformLoggingMXBean","dimension":"","elementType":{},"package":"java.lang.management","interfaces":["java.lang.management.PlatformManagedObject"],"isAbstract":true,"isStatic":false,"since":"1.7","innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"getLoggerNames","comment":"Returns the list of the currently registered\n {@linkplain java.util.logging.Logger logger} names. This method\n calls {@link java.util.logging.LogManager#getLoggerNames} and\n returns a list of the logger names.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"List","qualifiedName":"java.util.List","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getLoggerLevel","comment":"Gets the name of the log {@linkplain java.util.logging.Logger#getLevel\n level} associated with the specified logger.\n If the specified logger does not exist, {@code null}\n is returned.\n This method first finds the logger of the given name and\n then returns the name of the log level by calling:\n \u003cblockquote\u003e\n   {@link java.util.logging.Logger#getLevel\n    Logger.getLevel()}.{@link java.util.logging.Level#getName getName()};\n \u003c/blockquote\u003e\n\n \u003cp\u003e\n If the {@code Level} of the specified logger is {@code null},\n which means that this logger\u0027s effective level is inherited\n from its parent, an empty string will be returned.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"loggerName","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"setLoggerLevel","comment":"Sets the specified logger to the specified new\n {@linkplain java.util.logging.Logger#setLevel level}.\n If the {@code levelName} is not {@code null}, the level\n of the specified logger is set to the parsed\n {@link java.util.logging.Level Level}\n matching the {@code levelName}.\n If the {@code levelName} is {@code null}, the level\n of the specified logger is set to {@code null} and\n the effective level of the logger is inherited from\n its nearest ancestor with a specific (non-null) level value.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String, java.lang.String)","flatSignature":"(String, String)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"loggerName","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"levelName","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getParentLoggerName","comment":"Returns the name of the\n {@linkplain java.util.logging.Logger#getParent parent}\n for the specified logger.\n If the specified logger does not exist, {@code null} is returned.\n If the specified logger is the root {@code Logger} in the namespace,\n the result will be an empty string.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"loggerName","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}