{"name":"MemoryNotificationInfo","comment":"The information about a memory notification.\n\n \u003cp\u003e\n A memory notification is emitted by {@link MemoryMXBean}\n when the Java virtual machine detects that the memory usage\n of a memory pool is exceeding a threshold value.\n The notification emitted will contain the memory notification\n information about the detected condition:\n \u003cul\u003e\n   \u003cli\u003eThe name of the memory pool.\u003c/li\u003e\n   \u003cli\u003eThe memory usage of the memory pool when the notification\n       was constructed.\u003c/li\u003e\n   \u003cli\u003eThe number of times that the memory usage has crossed\n       a threshold when the notification was constructed.\n       For usage threshold notifications, this count will be the\n       {@link MemoryPoolMXBean#getUsageThresholdCount usage threshold\n       count}.  For collection threshold notifications,\n       this count will be the\n       {@link MemoryPoolMXBean#getCollectionUsageThresholdCount\n       collection usage threshold count}.\n       \u003c/li\u003e\n \u003c/ul\u003e\n\n \u003cp\u003e\n A {@link CompositeData CompositeData} representing\n the \u003ctt\u003eMemoryNotificationInfo\u003c/tt\u003e object\n is stored in the\n {@link javax.management.Notification#setUserData user data}\n of a {@link javax.management.Notification notification}.\n The {@link #from from} method is provided to convert from\n a \u003ctt\u003eCompositeData\u003c/tt\u003e to a \u003ctt\u003eMemoryNotificationInfo\u003c/tt\u003e\n object. For example:\n\n \u003cblockquote\u003e\u003cpre\u003e\n      Notification notif;\n\n      // receive the notification emitted by MemoryMXBean and set to notif\n      ...\n\n      String notifType \u003d notif.getType();\n      if (notifType.equals(MemoryNotificationInfo.MEMORY_THRESHOLD_EXCEEDED) ||\n          notifType.equals(MemoryNotificationInfo.MEMORY_COLLECTION_THRESHOLD_EXCEEDED)) {\n          // retrieve the memory notification information\n          CompositeData cd \u003d (CompositeData) notif.getUserData();\n          MemoryNotificationInfo info \u003d MemoryNotificationInfo.from(cd);\n          ....\n      }\n \u003c/pre\u003e\u003c/blockquote\u003e\n\n \u003cp\u003e\n The types of notifications emitted by \u003ctt\u003eMemoryMXBean\u003c/tt\u003e are:\n \u003cul\u003e\n   \u003cli\u003eA {@link #MEMORY_THRESHOLD_EXCEEDED\n       usage threshold exceeded notification}.\n       \u003cbr\u003eThis notification will be emitted when\n       the memory usage of a memory pool is increased and has reached\n       or exceeded its\n       \u003ca href\u003d\"MemoryPoolMXBean.html#UsageThreshold\"\u003e usage threshold\u003c/a\u003e value.\n       Subsequent crossing of the usage threshold value does not cause\n       further notification until the memory usage has returned\n       to become less than the usage threshold value.\n       \u003cp\u003e\u003c/li\u003e\n   \u003cli\u003eA {@link #MEMORY_COLLECTION_THRESHOLD_EXCEEDED\n       collection usage threshold exceeded notification}.\n       \u003cbr\u003eThis notification will be emitted when\n       the memory usage of a memory pool is greater than or equal to its\n       \u003ca href\u003d\"MemoryPoolMXBean.html#CollectionThreshold\"\u003e\n       collection usage threshold\u003c/a\u003e after the Java virtual machine\n       has expended effort in recycling unused objects in that\n       memory pool.\u003c/li\u003e\n \u003c/ul\u003e","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"MemoryNotificationInfo","qualifiedName":"java.lang.management.MemoryNotificationInfo","dimension":"","elementType":{},"package":"java.lang.management","superclass":"java.lang.Object","interfaces":[],"isAbstract":false,"isStatic":false,"since":"1.5","innerClasses":[],"isInnerClass":false,"constructors":[{"name":"MemoryNotificationInfo","comment":"Constructs a \u003ctt\u003eMemoryNotificationInfo\u003c/tt\u003e object.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.lang.String, java.lang.management.MemoryUsage, long)","flatSignature":"(String, MemoryUsage, long)","parameters":[{"name":"poolName","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"usage","type":{"isPrimitive":false,"simpleName":"MemoryUsage","qualifiedName":"java.lang.management.MemoryUsage","dimension":"","elementType":{}}},{"name":"count","type":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}}}],"typeParameters":[]}],"fields":[{"name":"MEMORY_THRESHOLD_EXCEEDED","comment":"Notification type denoting that\n the memory usage of a memory pool has\n reached or exceeded its\n \u003ca href\u003d\"MemoryPoolMXBean.html#UsageThreshold\"\u003e usage threshold\u003c/a\u003e value.\n This notification is emitted by {@link MemoryMXBean}.\n Subsequent crossing of the usage threshold value does not cause\n further notification until the memory usage has returned\n to become less than the usage threshold value.\n The value of this notification type is\n \u003ctt\u003ejava.management.memory.threshold.exceeded\u003c/tt\u003e.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":true,"isMethod":false,"isOrdinaryClass":false,"type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isStatic":true,"constantValue":"\"java.management.memory.threshold.exceeded\""},{"name":"MEMORY_COLLECTION_THRESHOLD_EXCEEDED","comment":"Notification type denoting that\n the memory usage of a memory pool is greater than or equal to its\n \u003ca href\u003d\"MemoryPoolMXBean.html#CollectionThreshold\"\u003e\n collection usage threshold\u003c/a\u003e after the Java virtual machine\n has expended effort in recycling unused objects in that\n memory pool.\n This notification is emitted by {@link MemoryMXBean}.\n The value of this notification type is\n \u003ctt\u003ejava.management.memory.collection.threshold.exceeded\u003c/tt\u003e.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":true,"isMethod":false,"isOrdinaryClass":false,"type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isStatic":true,"constantValue":"\"java.management.memory.collection.threshold.exceeded\""}],"methods":[{"name":"getPoolName","comment":"Returns the name of the memory pool that triggers this notification.\n The memory pool usage has crossed a threshold.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getUsage","comment":"Returns the memory usage of the memory pool\n when this notification was constructed.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"MemoryUsage","qualifiedName":"java.lang.management.MemoryUsage","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getCount","comment":"Returns the number of times that the memory usage has crossed\n a threshold when the notification was constructed.\n For usage threshold notifications, this count will be the\n {@link MemoryPoolMXBean#getUsageThresholdCount threshold\n count}.  For collection threshold notifications,\n this count will be the\n {@link MemoryPoolMXBean#getCollectionUsageThresholdCount\n collection usage threshold count}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"from","comment":"Returns a \u003ctt\u003eMemoryNotificationInfo\u003c/tt\u003e object represented by the\n given \u003ctt\u003eCompositeData\u003c/tt\u003e.\n The given \u003ctt\u003eCompositeData\u003c/tt\u003e must contain\n the following attributes:\n \u003cblockquote\u003e\n \u003ctable border summary\u003d\"The attributes and the types the given CompositeData contains\"\u003e\n \u003ctr\u003e\n   \u003cth align\u003dleft\u003eAttribute Name\u003c/th\u003e\n   \u003cth align\u003dleft\u003eType\u003c/th\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n   \u003ctd\u003epoolName\u003c/td\u003e\n   \u003ctd\u003e\u003ctt\u003ejava.lang.String\u003c/tt\u003e\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n   \u003ctd\u003eusage\u003c/td\u003e\n   \u003ctd\u003e\u003ctt\u003ejavax.management.openmbean.CompositeData\u003c/tt\u003e\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n   \u003ctd\u003ecount\u003c/td\u003e\n   \u003ctd\u003e\u003ctt\u003ejava.lang.Long\u003c/tt\u003e\u003c/td\u003e\n \u003c/tr\u003e\n \u003c/table\u003e\n \u003c/blockquote\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(javax.management.openmbean.CompositeData)","flatSignature":"(CompositeData)","returnType":{"isPrimitive":false,"simpleName":"MemoryNotificationInfo","qualifiedName":"java.lang.management.MemoryNotificationInfo","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[{"name":"cd","type":{"isPrimitive":false,"simpleName":"CompositeData","qualifiedName":"javax.management.openmbean.CompositeData","dimension":"","elementType":{}}}],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}