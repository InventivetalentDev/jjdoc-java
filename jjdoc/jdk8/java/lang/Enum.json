{"name":"Enum","comment":"This is the common base class of all Java language enumeration types.\n\n More information about enums, including descriptions of the\n implicitly declared methods synthesized by the compiler, can be\n found in section 8.9 of\n \u003ccite\u003eThe Java\u0026trade; Language Specification\u003c/cite\u003e.\n\n \u003cp\u003e Note that when using an enumeration type as the type of a set\n or as the type of the keys in a map, specialized and efficient\n {@linkplain java.util.EnumSet set} and {@linkplain\n java.util.EnumMap map} implementations are available.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"Enum","qualifiedName":"java.lang.Enum","dimension":"","elementType":{},"package":"java.lang","superclass":"java.lang.Object","interfaces":["java.lang.Comparable","java.io.Serializable"],"isAbstract":true,"isStatic":false,"since":"1.5","innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"name","comment":"Returns the name of this enum constant, exactly as declared in its\n enum declaration.\n\n \u003cb\u003eMost programmers should use the {@link #toString} method in\n preference to this one, as the toString method may return\n a more user-friendly name.\u003c/b\u003e  This method is designed primarily for\n use in specialized situations where correctness depends on getting the\n exact name, which will not vary from release to release.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"ordinal","comment":"Returns the ordinal of this enumeration constant (its position\n in its enum declaration, where the initial constant is assigned\n an ordinal of zero).\n\n Most programmers will have no use for this method.  It is\n designed for use by sophisticated enum-based data structures, such\n as {@link java.util.EnumSet} and {@link java.util.EnumMap}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"toString","comment":"Returns the name of this enum constant, as contained in the\n declaration.  This method may be overridden, though it typically\n isn\u0027t necessary or desirable.  An enum type should override this\n method when a more \"programmer-friendly\" string form exists.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"equals","comment":"Returns true if the specified object is equal to this\n enum constant.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.Object)","flatSignature":"(Object)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"other","type":{"isPrimitive":false,"simpleName":"Object","qualifiedName":"java.lang.Object","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"hashCode","comment":"Returns a hash code for this enum constant.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"compareTo","comment":"Compares this enum with the specified object for order.  Returns a\n negative integer, zero, or a positive integer as this object is less\n than, equal to, or greater than the specified object.\n\n Enum constants are only comparable to other enum constants of the\n same enum type.  The natural order implemented by this\n method is the order in which the constants are declared.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(E)","flatSignature":"(E)","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"o","type":{"isPrimitive":false,"simpleName":"E","qualifiedName":"E","dimension":"","elementType":{},"typeVariable":{"name":"E","bounds":["java.lang.Enum"]}}}],"typeParameters":[]},{"name":"getDeclaringClass","comment":"Returns the Class object corresponding to this enum constant\u0027s\n enum type.  Two enum constants e1 and  e2 are of the\n same enum type if and only if\n   e1.getDeclaringClass() \u003d\u003d e2.getDeclaringClass().\n (The value returned by this method may differ from the one returned\n by the {@link Object#getClass} method for enum constants with\n constant-specific class bodies.)","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Class","qualifiedName":"java.lang.Class","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"valueOf","comment":"Returns the enum constant of the specified enum type with the\n specified name.  The name must match exactly an identifier used\n to declare an enum constant in this type.  (Extraneous whitespace\n characters are not permitted.)\n\n \u003cp\u003eNote that for a particular enum type {@code T}, the\n implicitly declared {@code public static T valueOf(String)}\n method on that enum may be used instead of this method to map\n from a name to the corresponding enum constant.  All the\n constants of an enum type can be obtained by calling the\n implicit {@code public static T[] values()} method of that\n type.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.Class\u003cT\u003e, java.lang.String)","flatSignature":"(Class\u003cT\u003e, String)","returnType":{"isPrimitive":false,"simpleName":"T","qualifiedName":"T","dimension":"","elementType":{},"typeVariable":{"name":"T","bounds":["java.lang.Enum"]}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[{"name":"enumType","type":{"isPrimitive":false,"simpleName":"Class","qualifiedName":"java.lang.Class","dimension":"","elementType":{}}},{"name":"name","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[{"name":"T","bounds":["java.lang.Enum"]}]}],"typeParameters":[{"name":"E","bounds":["java.lang.Enum"]}],"subClasses":["java.security.KeyRep.Type","java.security.CryptoPrimitive","java.security.cert.PKIXRevocationChecker.Option","java.security.cert.PKIXReason","java.security.cert.CertPathValidatorException.BasicReason","java.security.cert.CRLReason","java.net.StandardProtocolFamily","java.net.Proxy.Type","java.net.Authenticator.RequestorType","java.nio.file.StandardOpenOption","java.nio.file.StandardCopyOption","java.nio.file.LinkOption","java.nio.file.FileVisitResult","java.nio.file.FileVisitOption","java.nio.file.AccessMode","java.nio.file.attribute.PosixFilePermission","java.nio.file.attribute.AclEntryType","java.nio.file.attribute.AclEntryPermission","java.nio.file.attribute.AclEntryFlag","java.text.Normalizer.Form","java.lang.Thread.State","java.lang.ProcessBuilder.Redirect.Type","java.lang.Character.UnicodeScript","java.lang.management.MemoryType","java.lang.annotation.RetentionPolicy","java.lang.annotation.ElementType","java.time.zone.ZoneOffsetTransitionRule.TimeDefinition","java.time.Month","java.time.DayOfWeek","java.time.chrono.ThaiBuddhistEra","java.time.chrono.MinguoEra","java.time.chrono.IsoEra","java.time.chrono.HijrahEra","java.time.temporal.ChronoUnit","java.time.temporal.ChronoField","java.time.format.TextStyle","java.time.format.SignStyle","java.time.format.ResolverStyle","java.time.format.FormatStyle","java.util.Locale.Category","java.util.Locale.FilteringMode","java.util.Formatter.BigDecimalLayoutForm","java.util.stream.Collector.Characteristics","java.util.concurrent.TimeUnit","java.math.RoundingMode"],"enumConstants":[]}