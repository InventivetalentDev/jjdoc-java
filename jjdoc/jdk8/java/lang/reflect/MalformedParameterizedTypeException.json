{"name":"MalformedParameterizedTypeException","comment":"Thrown when a semantically malformed parameterized type is\n encountered by a reflective method that needs to instantiate it.\n For example, if the number of type arguments to a parameterized type\n is wrong.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"MalformedParameterizedTypeException","qualifiedName":"java.lang.reflect.MalformedParameterizedTypeException","dimension":"","elementType":{},"package":"java.lang.reflect","superclass":"java.lang.RuntimeException","interfaces":[],"isAbstract":false,"isStatic":false,"since":"1.5","innerClasses":[],"isInnerClass":false,"constructors":[{"name":"MalformedParameterizedTypeException","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","parameters":[],"typeParameters":[]}],"fields":[],"methods":[],"typeParameters":[],"enumConstants":[]}