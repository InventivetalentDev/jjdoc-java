{"name":"ReflectPermission","comment":"The Permission class for reflective operations.\n \u003cP\u003e\n The following table\n provides a summary description of what the permission allows,\n and discusses the risks of granting code the permission.\n\n \u003ctable border\u003d1 cellpadding\u003d5 summary\u003d\"Table shows permission target name, what the permission allows, and associated risks\"\u003e\n \u003ctr\u003e\n \u003cth\u003ePermission Target Name\u003c/th\u003e\n \u003cth\u003eWhat the Permission Allows\u003c/th\u003e\n \u003cth\u003eRisks of Allowing this Permission\u003c/th\u003e\n \u003c/tr\u003e\n\n \u003ctr\u003e\n   \u003ctd\u003esuppressAccessChecks\u003c/td\u003e\n   \u003ctd\u003eability to suppress the standard Java language access checks\n       on fields and methods in a class; allow access not only public members\n       but also allow access to default (package) access, protected,\n       and private members.\u003c/td\u003e\n   \u003ctd\u003eThis is dangerous in that information (possibly confidential) and\n       methods normally unavailable would be accessible to malicious code.\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n   \u003ctd\u003enewProxyInPackage.{package name}\u003c/td\u003e\n   \u003ctd\u003eability to create a proxy instance in the specified package of which\n       the non-public interface that the proxy class implements.\u003c/td\u003e\n   \u003ctd\u003eThis gives code access to classes in packages to which it normally\n       does not have access and the dynamic proxy class is in the system\n       protection domain. Malicious code may use these classes to\n       help in its attempt to compromise security in the system.\u003c/td\u003e\n \u003c/tr\u003e\n\n \u003c/table\u003e","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"ReflectPermission","qualifiedName":"java.lang.reflect.ReflectPermission","dimension":"","elementType":{},"package":"java.lang.reflect","superclass":"java.security.BasicPermission","interfaces":[],"isAbstract":false,"isStatic":false,"since":"1.2","innerClasses":[],"isInnerClass":false,"constructors":[{"name":"ReflectPermission","comment":"Constructs a ReflectPermission with the specified name.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","parameters":[{"name":"name","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"ReflectPermission","comment":"Constructs a ReflectPermission with the specified name and actions.\n The actions should be null; they are ignored.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.lang.String, java.lang.String)","flatSignature":"(String, String)","parameters":[{"name":"name","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"actions","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]}],"fields":[],"methods":[],"typeParameters":[],"enumConstants":[]}