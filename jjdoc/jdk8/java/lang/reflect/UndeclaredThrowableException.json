{"name":"UndeclaredThrowableException","comment":"Thrown by a method invocation on a proxy instance if its invocation\n handler\u0027s {@link InvocationHandler#invoke invoke} method throws a\n checked exception (a {@code Throwable} that is not assignable\n to {@code RuntimeException} or {@code Error}) that\n is not assignable to any of the exception types declared in the\n {@code throws} clause of the method that was invoked on the\n proxy instance and dispatched to the invocation handler.\n\n \u003cp\u003eAn {@code UndeclaredThrowableException} instance contains\n the undeclared checked exception that was thrown by the invocation\n handler, and it can be retrieved with the\n {@code getUndeclaredThrowable()} method.\n {@code UndeclaredThrowableException} extends\n {@code RuntimeException}, so it is an unchecked exception\n that wraps a checked exception.\n\n \u003cp\u003eAs of release 1.4, this exception has been retrofitted to\n conform to the general purpose exception-chaining mechanism.  The\n \"undeclared checked exception that was thrown by the invocation\n handler\" that may be provided at construction time and accessed via\n the {@link #getUndeclaredThrowable()} method is now known as the\n \u003ci\u003ecause\u003c/i\u003e, and may be accessed via the {@link\n Throwable#getCause()} method, as well as the aforementioned \"legacy\n method.\"","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"UndeclaredThrowableException","qualifiedName":"java.lang.reflect.UndeclaredThrowableException","dimension":"","elementType":{},"package":"java.lang.reflect","superclass":"java.lang.RuntimeException","interfaces":[],"isAbstract":false,"isStatic":false,"since":"1.3","innerClasses":[],"isInnerClass":false,"constructors":[{"name":"UndeclaredThrowableException","comment":"Constructs an {@code UndeclaredThrowableException} with the\n specified {@code Throwable}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.lang.Throwable)","flatSignature":"(Throwable)","parameters":[{"name":"undeclaredThrowable","type":{"isPrimitive":false,"simpleName":"Throwable","qualifiedName":"java.lang.Throwable","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"UndeclaredThrowableException","comment":"Constructs an {@code UndeclaredThrowableException} with the\n specified {@code Throwable} and a detail message.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.lang.Throwable, java.lang.String)","flatSignature":"(Throwable, String)","parameters":[{"name":"undeclaredThrowable","type":{"isPrimitive":false,"simpleName":"Throwable","qualifiedName":"java.lang.Throwable","dimension":"","elementType":{}}},{"name":"s","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]}],"fields":[],"methods":[{"name":"getUndeclaredThrowable","comment":"Returns the {@code Throwable} instance wrapped in this\n {@code UndeclaredThrowableException}, which may be {@code null}.\n\n \u003cp\u003eThis method predates the general-purpose exception chaining facility.\n The {@link Throwable#getCause()} method is now the preferred means of\n obtaining this information.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Throwable","qualifiedName":"java.lang.Throwable","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getCause","comment":"Returns the cause of this exception (the {@code Throwable}\n instance wrapped in this {@code UndeclaredThrowableException},\n which may be {@code null}).","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Throwable","qualifiedName":"java.lang.Throwable","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}