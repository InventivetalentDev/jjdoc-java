{"name":"ParameterizedType","comment":"ParameterizedType represents a parameterized type such as\n Collection\u0026lt;String\u0026gt;.\n\n \u003cp\u003eA parameterized type is created the first time it is needed by a\n reflective method, as specified in this package. When a\n parameterized type p is created, the generic type declaration that\n p instantiates is resolved, and all type arguments of p are created\n recursively. See {@link java.lang.reflect.TypeVariable\n TypeVariable} for details on the creation process for type\n variables. Repeated creation of a parameterized type has no effect.\n\n \u003cp\u003eInstances of classes that implement this interface must implement\n an equals() method that equates any two instances that share the\n same generic type declaration and have equal type parameters.","isClass":false,"isInterface":true,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"ParameterizedType","qualifiedName":"java.lang.reflect.ParameterizedType","dimension":"","elementType":{},"package":"java.lang.reflect","interfaces":["java.lang.reflect.Type"],"isAbstract":true,"isStatic":false,"since":"1.5","innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"getActualTypeArguments","comment":"Returns an array of {@code Type} objects representing the actual type\n arguments to this type.\n\n \u003cp\u003eNote that in some cases, the returned array be empty. This can occur\n if this type represents a non-parameterized type nested within\n a parameterized type.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Type","qualifiedName":"java.lang.reflect.Type","dimension":"[]","elementType":{"isPrimitive":false,"simpleName":"Type","qualifiedName":"java.lang.reflect.Type","dimension":"","elementType":{}}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getRawType","comment":"Returns the {@code Type} object representing the class or interface\n that declared this type.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Type","qualifiedName":"java.lang.reflect.Type","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getOwnerType","comment":"Returns a {@code Type} object representing the type that this type\n is a member of.  For example, if this type is {@code O\u003cT\u003e.I\u003cS\u003e},\n return a representation of {@code O\u003cT\u003e}.\n\n \u003cp\u003eIf this type is a top-level type, {@code null} is returned.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Type","qualifiedName":"java.lang.reflect.Type","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}