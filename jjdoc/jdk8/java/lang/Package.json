{"name":"Package","comment":"{@code Package} objects contain version information\n about the implementation and specification of a Java package.\n This versioning information is retrieved and made available\n by the {@link ClassLoader} instance that\n loaded the class(es).  Typically, it is stored in the manifest that is\n distributed with the classes.\n\n \u003cp\u003eThe set of classes that make up the package may implement a\n particular specification and if so the specification title, version number,\n and vendor strings identify that specification.\n An application can ask if the package is\n compatible with a particular version, see the {@link\n #isCompatibleWith isCompatibleWith}\n method for details.\n\n \u003cp\u003eSpecification version numbers use a syntax that consists of nonnegative\n decimal integers separated by periods \".\", for example \"2.0\" or\n \"1.2.3.4.5.6.7\".  This allows an extensible number to be used to represent\n major, minor, micro, etc. versions.  The version specification is described\n by the following formal grammar:\n \u003cblockquote\u003e\n \u003cdl\u003e\n \u003cdt\u003e\u003ci\u003eSpecificationVersion:\u003c/i\u003e\n \u003cdd\u003e\u003ci\u003eDigits RefinedVersion\u003csub\u003eopt\u003c/sub\u003e\u003c/i\u003e\n\n \u003cdt\u003e\u003ci\u003eRefinedVersion:\u003c/i\u003e\n \u003cdd\u003e{@code .} \u003ci\u003eDigits\u003c/i\u003e\n \u003cdd\u003e{@code .} \u003ci\u003eDigits RefinedVersion\u003c/i\u003e\n\n \u003cdt\u003e\u003ci\u003eDigits:\u003c/i\u003e\n \u003cdd\u003e\u003ci\u003eDigit\u003c/i\u003e\n \u003cdd\u003e\u003ci\u003eDigits\u003c/i\u003e\n\n \u003cdt\u003e\u003ci\u003eDigit:\u003c/i\u003e\n \u003cdd\u003eany character for which {@link Character#isDigit} returns {@code true},\n e.g. 0, 1, 2, ...\n \u003c/dl\u003e\n \u003c/blockquote\u003e\n\n \u003cp\u003eThe implementation title, version, and vendor strings identify an\n implementation and are made available conveniently to enable accurate\n reporting of the packages involved when a problem occurs. The contents\n all three implementation strings are vendor specific. The\n implementation version strings have no specified syntax and should\n only be compared for equality with desired version identifiers.\n\n \u003cp\u003eWithin each {@code ClassLoader} instance all classes from the same\n java package have the same Package object.  The static methods allow a package\n to be found by name or the set of all packages known to the current class\n loader to be found.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"Package","qualifiedName":"java.lang.Package","dimension":"","elementType":{},"package":"java.lang","superclass":"java.lang.Object","interfaces":["java.lang.reflect.AnnotatedElement"],"isAbstract":false,"isStatic":false,"innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"getName","comment":"Return the name of this package.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getSpecificationTitle","comment":"Return the title of the specification that this package implements.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getSpecificationVersion","comment":"Returns the version number of the specification\n that this package implements.\n This version string must be a sequence of nonnegative decimal\n integers separated by \".\"\u0027s and may have leading zeros.\n When version strings are compared the most significant\n numbers are compared.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getSpecificationVendor","comment":"Return the name of the organization, vendor,\n or company that owns and maintains the specification\n of the classes that implement this package.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getImplementationTitle","comment":"Return the title of this package.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getImplementationVersion","comment":"Return the version of this implementation. It consists of any string\n assigned by the vendor of this implementation and does\n not have any particular syntax specified or expected by the Java\n runtime. It may be compared for equality with other\n package version strings used for this implementation\n by this vendor for this package.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getImplementationVendor","comment":"Returns the name of the organization,\n vendor or company that provided this implementation.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"isSealed","comment":"Returns true if this package is sealed.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"isSealed","comment":"Returns true if this package is sealed with respect to the specified\n code source url.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.net.URL)","flatSignature":"(URL)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"url","type":{"isPrimitive":false,"simpleName":"URL","qualifiedName":"java.net.URL","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"isCompatibleWith","comment":"Compare this package\u0027s specification version with a\n desired version. It returns true if\n this packages specification version number is greater than or equal\n to the desired version number. \u003cp\u003e\n\n Version numbers are compared by sequentially comparing corresponding\n components of the desired and specification strings.\n Each component is converted as a decimal integer and the values\n compared.\n If the specification value is greater than the desired\n value true is returned. If the value is less false is returned.\n If the values are equal the period is skipped and the next pair of\n components is compared.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"desired","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getPackage","comment":"Find a package by name in the callers {@code ClassLoader} instance.\n The callers {@code ClassLoader} instance is used to find the package\n instance corresponding to the named class. If the callers\n {@code ClassLoader} instance is null then the set of packages loaded\n by the system {@code ClassLoader} instance is searched to find the\n named package. \u003cp\u003e\n\n Packages have attributes for versions and specifications only if the class\n loader created the package instance with the appropriate attributes. Typically,\n those attributes are defined in the manifests that accompany the classes.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":false,"simpleName":"Package","qualifiedName":"java.lang.Package","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[{"name":"name","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getPackages","comment":"Get all the packages currently known for the caller\u0027s {@code ClassLoader}\n instance.  Those packages correspond to classes loaded via or accessible by\n name to that {@code ClassLoader} instance.  If the caller\u0027s\n {@code ClassLoader} instance is the bootstrap {@code ClassLoader}\n instance, which may be represented by {@code null} in some implementations,\n only packages corresponding to classes loaded by the bootstrap\n {@code ClassLoader} instance will be returned.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Package","qualifiedName":"java.lang.Package","dimension":"[]","elementType":{"isPrimitive":false,"simpleName":"Package","qualifiedName":"java.lang.Package","dimension":"","elementType":{}}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[],"typeParameters":[]},{"name":"hashCode","comment":"Return the hash code computed from the package name.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"toString","comment":"Returns the string representation of this Package.\n Its value is the string \"package \" and the package name.\n If the package title is defined it is appended.\n If the package version is defined it is appended.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getAnnotation","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.Class\u003cA\u003e)","flatSignature":"(Class\u003cA\u003e)","returnType":{"isPrimitive":false,"simpleName":"A","qualifiedName":"A","dimension":"","elementType":{},"typeVariable":{"name":"A","bounds":["java.lang.annotation.Annotation"]}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"annotationClass","type":{"isPrimitive":false,"simpleName":"Class","qualifiedName":"java.lang.Class","dimension":"","elementType":{}}}],"typeParameters":[{"name":"A","bounds":["java.lang.annotation.Annotation"]}]},{"name":"isAnnotationPresent","comment":"{@inheritDoc}","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.Class\u003c? extends java.lang.annotation.Annotation\u003e)","flatSignature":"(Class\u003c? extends Annotation\u003e)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"annotationClass","type":{"isPrimitive":false,"simpleName":"Class","qualifiedName":"java.lang.Class","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getAnnotationsByType","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.Class\u003cA\u003e)","flatSignature":"(Class\u003cA\u003e)","returnType":{"isPrimitive":false,"simpleName":"A","qualifiedName":"A","dimension":"[]","elementType":{"isPrimitive":false,"simpleName":"A","qualifiedName":"A","dimension":"","elementType":{},"typeVariable":{"name":"A","bounds":["java.lang.annotation.Annotation"]}},"typeVariable":{"name":"A","bounds":["java.lang.annotation.Annotation"]}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"annotationClass","type":{"isPrimitive":false,"simpleName":"Class","qualifiedName":"java.lang.Class","dimension":"","elementType":{}}}],"typeParameters":[{"name":"A","bounds":["java.lang.annotation.Annotation"]}]},{"name":"getAnnotations","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Annotation","qualifiedName":"java.lang.annotation.Annotation","dimension":"[]","elementType":{"isPrimitive":false,"simpleName":"Annotation","qualifiedName":"java.lang.annotation.Annotation","dimension":"","elementType":{}}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getDeclaredAnnotation","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.Class\u003cA\u003e)","flatSignature":"(Class\u003cA\u003e)","returnType":{"isPrimitive":false,"simpleName":"A","qualifiedName":"A","dimension":"","elementType":{},"typeVariable":{"name":"A","bounds":["java.lang.annotation.Annotation"]}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"annotationClass","type":{"isPrimitive":false,"simpleName":"Class","qualifiedName":"java.lang.Class","dimension":"","elementType":{}}}],"typeParameters":[{"name":"A","bounds":["java.lang.annotation.Annotation"]}]},{"name":"getDeclaredAnnotationsByType","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.Class\u003cA\u003e)","flatSignature":"(Class\u003cA\u003e)","returnType":{"isPrimitive":false,"simpleName":"A","qualifiedName":"A","dimension":"[]","elementType":{"isPrimitive":false,"simpleName":"A","qualifiedName":"A","dimension":"","elementType":{},"typeVariable":{"name":"A","bounds":["java.lang.annotation.Annotation"]}},"typeVariable":{"name":"A","bounds":["java.lang.annotation.Annotation"]}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"annotationClass","type":{"isPrimitive":false,"simpleName":"Class","qualifiedName":"java.lang.Class","dimension":"","elementType":{}}}],"typeParameters":[{"name":"A","bounds":["java.lang.annotation.Annotation"]}]},{"name":"getDeclaredAnnotations","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Annotation","qualifiedName":"java.lang.annotation.Annotation","dimension":"[]","elementType":{"isPrimitive":false,"simpleName":"Annotation","qualifiedName":"java.lang.annotation.Annotation","dimension":"","elementType":{}}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}