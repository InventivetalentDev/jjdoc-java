{"name":"Number","comment":"The abstract class {@code Number} is the superclass of platform\n classes representing numeric values that are convertible to the\n primitive types {@code byte}, {@code double}, {@code float}, {@code\n int}, {@code long}, and {@code short}.\n\n The specific semantics of the conversion from the numeric value of\n a particular {@code Number} implementation to a given primitive\n type is defined by the {@code Number} implementation in question.\n\n For platform classes, the conversion is often analogous to a\n narrowing primitive conversion or a widening primitive conversion\n as defining in \u003ccite\u003eThe Java\u0026trade; Language Specification\u003c/cite\u003e\n for converting between primitive types.  Therefore, conversions may\n lose information about the overall magnitude of a numeric value, may\n lose precision, and may even return a result of a different sign\n than the input.\n\n See the documentation of a given {@code Number} implementation for\n conversion details.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"Number","qualifiedName":"java.lang.Number","dimension":"","elementType":{},"package":"java.lang","superclass":"java.lang.Object","interfaces":["java.io.Serializable"],"isAbstract":true,"isStatic":false,"since":"JDK1.0","innerClasses":[],"isInnerClass":false,"constructors":[{"name":"Number","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","parameters":[],"typeParameters":[]}],"fields":[],"methods":[{"name":"intValue","comment":"Returns the value of the specified number as an {@code int},\n which may involve rounding or truncation.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"longValue","comment":"Returns the value of the specified number as a {@code long},\n which may involve rounding or truncation.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"floatValue","comment":"Returns the value of the specified number as a {@code float},\n which may involve rounding.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"doubleValue","comment":"Returns the value of the specified number as a {@code double},\n which may involve rounding.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"byteValue","comment":"Returns the value of the specified number as a {@code byte},\n which may involve rounding or truncation.\n\n \u003cp\u003eThis implementation returns the result of {@link #intValue} cast\n to a {@code byte}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"shortValue","comment":"Returns the value of the specified number as a {@code short},\n which may involve rounding or truncation.\n\n \u003cp\u003eThis implementation returns the result of {@link #intValue} cast\n to a {@code short}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"short","qualifiedName":"short","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"subClasses":["java.lang.Short","java.lang.Long","java.lang.Integer","java.lang.Float","java.lang.Double","java.lang.Byte","java.util.concurrent.atomic.Striped64","java.util.concurrent.atomic.AtomicLong","java.util.concurrent.atomic.AtomicInteger","java.math.BigInteger","java.math.BigDecimal"],"enumConstants":[]}