{"name":"IllegalAccessException","comment":"An IllegalAccessException is thrown when an application tries\n to reflectively create an instance (other than an array),\n set or get a field, or invoke a method, but the currently\n executing method does not have access to the definition of\n the specified class, field, method or constructor.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"IllegalAccessException","qualifiedName":"java.lang.IllegalAccessException","dimension":"","elementType":{},"package":"java.lang","superclass":"java.lang.ReflectiveOperationException","interfaces":[],"isAbstract":false,"isStatic":false,"since":"JDK1.0","innerClasses":[],"isInnerClass":false,"constructors":[{"name":"IllegalAccessException","comment":"Constructs an \u003ccode\u003eIllegalAccessException\u003c/code\u003e without a\n detail message.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","parameters":[],"typeParameters":[]},{"name":"IllegalAccessException","comment":"Constructs an \u003ccode\u003eIllegalAccessException\u003c/code\u003e with a detail message.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","parameters":[{"name":"s","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]}],"fields":[],"methods":[],"typeParameters":[],"enumConstants":[]}