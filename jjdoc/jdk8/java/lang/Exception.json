{"name":"Exception","comment":"The class {@code Exception} and its subclasses are a form of\n {@code Throwable} that indicates conditions that a reasonable\n application might want to catch.\n\n \u003cp\u003eThe class {@code Exception} and any subclasses that are not also\n subclasses of {@link RuntimeException} are \u003cem\u003echecked\n exceptions\u003c/em\u003e.  Checked exceptions need to be declared in a\n method or constructor\u0027s {@code throws} clause if they can be thrown\n by the execution of the method or constructor and propagate outside\n the method or constructor boundary.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"Exception","qualifiedName":"java.lang.Exception","dimension":"","elementType":{},"package":"java.lang","superclass":"java.lang.Throwable","interfaces":[],"isAbstract":false,"isStatic":false,"since":"JDK1.0","innerClasses":[],"isInnerClass":false,"constructors":[{"name":"Exception","comment":"Constructs a new exception with {@code null} as its detail message.\n The cause is not initialized, and may subsequently be initialized by a\n call to {@link #initCause}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","parameters":[],"typeParameters":[]},{"name":"Exception","comment":"Constructs a new exception with the specified detail message.  The\n cause is not initialized, and may subsequently be initialized by\n a call to {@link #initCause}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","parameters":[{"name":"message","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"Exception","comment":"Constructs a new exception with the specified detail message and\n cause.  \u003cp\u003eNote that the detail message associated with\n {@code cause} is \u003ci\u003enot\u003c/i\u003e automatically incorporated in\n this exception\u0027s detail message.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.lang.String, java.lang.Throwable)","flatSignature":"(String, Throwable)","parameters":[{"name":"message","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"cause","type":{"isPrimitive":false,"simpleName":"Throwable","qualifiedName":"java.lang.Throwable","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"Exception","comment":"Constructs a new exception with the specified cause and a detail\n message of \u003ctt\u003e(cause\u003d\u003dnull ? null : cause.toString())\u003c/tt\u003e (which\n typically contains the class and detail message of \u003ctt\u003ecause\u003c/tt\u003e).\n This constructor is useful for exceptions that are little more than\n wrappers for other throwables (for example, {@link\n java.security.PrivilegedActionException}).","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.lang.Throwable)","flatSignature":"(Throwable)","parameters":[{"name":"cause","type":{"isPrimitive":false,"simpleName":"Throwable","qualifiedName":"java.lang.Throwable","dimension":"","elementType":{}}}],"typeParameters":[]}],"fields":[],"methods":[],"typeParameters":[],"subClasses":["java.security.GeneralSecurityException","java.lang.RuntimeException","java.security.PrivilegedActionException","java.security.acl.NotOwnerException","java.security.acl.LastOwnerException","java.security.acl.AclNotFoundException","java.io.IOException","java.net.URISyntaxException","java.text.ParseException","java.lang.ReflectiveOperationException","java.lang.InterruptedException","java.lang.CloneNotSupportedException","java.lang.instrument.UnmodifiableClassException","java.lang.instrument.IllegalClassFormatException","java.lang.invoke.LambdaConversionException","java.util.zip.DataFormatException","java.util.TooManyListenersException","java.util.concurrent.TimeoutException","java.util.concurrent.ExecutionException","java.util.concurrent.BrokenBarrierException","java.util.prefs.InvalidPreferencesFormatException","java.util.prefs.BackingStoreException"],"enumConstants":[]}