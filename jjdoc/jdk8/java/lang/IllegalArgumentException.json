{"name":"IllegalArgumentException","comment":"Thrown to indicate that a method has been passed an illegal or\n inappropriate argument.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"IllegalArgumentException","qualifiedName":"java.lang.IllegalArgumentException","dimension":"","elementType":{},"package":"java.lang","superclass":"java.lang.RuntimeException","interfaces":[],"isAbstract":false,"isStatic":false,"since":"JDK1.0","innerClasses":[],"isInnerClass":false,"constructors":[{"name":"IllegalArgumentException","comment":"Constructs an \u003ccode\u003eIllegalArgumentException\u003c/code\u003e with no\n detail message.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","parameters":[],"typeParameters":[]},{"name":"IllegalArgumentException","comment":"Constructs an \u003ccode\u003eIllegalArgumentException\u003c/code\u003e with the\n specified detail message.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","parameters":[{"name":"s","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"IllegalArgumentException","comment":"Constructs a new exception with the specified detail message and\n cause.\n\n \u003cp\u003eNote that the detail message associated with \u003ccode\u003ecause\u003c/code\u003e is\n \u003ci\u003enot\u003c/i\u003e automatically incorporated in this exception\u0027s detail\n message.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.lang.String, java.lang.Throwable)","flatSignature":"(String, Throwable)","parameters":[{"name":"message","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"cause","type":{"isPrimitive":false,"simpleName":"Throwable","qualifiedName":"java.lang.Throwable","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"IllegalArgumentException","comment":"Constructs a new exception with the specified cause and a detail\n message of \u003ctt\u003e(cause\u003d\u003dnull ? null : cause.toString())\u003c/tt\u003e (which\n typically contains the class and detail message of \u003ctt\u003ecause\u003c/tt\u003e).\n This constructor is useful for exceptions that are little more than\n wrappers for other throwables (for example, {@link\n java.security.PrivilegedActionException}).","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.lang.Throwable)","flatSignature":"(Throwable)","parameters":[{"name":"cause","type":{"isPrimitive":false,"simpleName":"Throwable","qualifiedName":"java.lang.Throwable","dimension":"","elementType":{}}}],"typeParameters":[]}],"fields":[],"methods":[],"typeParameters":[],"subClasses":["java.security.InvalidParameterException","java.nio.channels.UnsupportedAddressTypeException","java.nio.channels.UnresolvedAddressException","java.nio.channels.IllegalSelectorException","java.nio.channels.IllegalChannelGroupException","java.nio.file.ProviderMismatchException","java.nio.file.InvalidPathException","java.nio.charset.UnsupportedCharsetException","java.nio.charset.IllegalCharsetNameException","java.lang.NumberFormatException","java.lang.IllegalThreadStateException","java.util.IllegalFormatException","java.util.regex.PatternSyntaxException"],"enumConstants":[]}