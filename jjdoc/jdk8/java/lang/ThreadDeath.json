{"name":"ThreadDeath","comment":"An instance of {@code ThreadDeath} is thrown in the victim thread\n when the (deprecated) {@link Thread#stop()} method is invoked.\n\n \u003cp\u003eAn application should catch instances of this class only if it\n must clean up after being terminated asynchronously.  If\n {@code ThreadDeath} is caught by a method, it is important that it\n be rethrown so that the thread actually dies.\n\n \u003cp\u003eThe {@linkplain ThreadGroup#uncaughtException top-level error\n handler} does not print out a message if {@code ThreadDeath} is\n never caught.\n\n \u003cp\u003eThe class {@code ThreadDeath} is specifically a subclass of\n {@code Error} rather than {@code Exception}, even though it is a\n \"normal occurrence\", because many applications catch all\n occurrences of {@code Exception} and then discard the exception.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"ThreadDeath","qualifiedName":"java.lang.ThreadDeath","dimension":"","elementType":{},"package":"java.lang","superclass":"java.lang.Error","interfaces":[],"isAbstract":false,"isStatic":false,"since":"JDK1.0","innerClasses":[],"isInnerClass":false,"constructors":[{"name":"ThreadDeath","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","parameters":[],"typeParameters":[]}],"fields":[],"methods":[],"typeParameters":[],"enumConstants":[]}