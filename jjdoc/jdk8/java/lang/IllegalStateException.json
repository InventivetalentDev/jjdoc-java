{"name":"IllegalStateException","comment":"Signals that a method has been invoked at an illegal or\n inappropriate time.  In other words, the Java environment or\n Java application is not in an appropriate state for the requested\n operation.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"IllegalStateException","qualifiedName":"java.lang.IllegalStateException","dimension":"","elementType":{},"package":"java.lang","superclass":"java.lang.RuntimeException","interfaces":[],"isAbstract":false,"isStatic":false,"since":"JDK1.1","innerClasses":[],"isInnerClass":false,"constructors":[{"name":"IllegalStateException","comment":"Constructs an IllegalStateException with no detail message.\n A detail message is a String that describes this particular exception.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","parameters":[],"typeParameters":[]},{"name":"IllegalStateException","comment":"Constructs an IllegalStateException with the specified detail\n message.  A detail message is a String that describes this particular\n exception.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","parameters":[{"name":"s","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"IllegalStateException","comment":"Constructs a new exception with the specified detail message and\n cause.\n\n \u003cp\u003eNote that the detail message associated with \u003ccode\u003ecause\u003c/code\u003e is\n \u003ci\u003enot\u003c/i\u003e automatically incorporated in this exception\u0027s detail\n message.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.lang.String, java.lang.Throwable)","flatSignature":"(String, Throwable)","parameters":[{"name":"message","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"cause","type":{"isPrimitive":false,"simpleName":"Throwable","qualifiedName":"java.lang.Throwable","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"IllegalStateException","comment":"Constructs a new exception with the specified cause and a detail\n message of \u003ctt\u003e(cause\u003d\u003dnull ? null : cause.toString())\u003c/tt\u003e (which\n typically contains the class and detail message of \u003ctt\u003ecause\u003c/tt\u003e).\n This constructor is useful for exceptions that are little more than\n wrappers for other throwables (for example, {@link\n java.security.PrivilegedActionException}).","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.lang.Throwable)","flatSignature":"(Throwable)","parameters":[{"name":"cause","type":{"isPrimitive":false,"simpleName":"Throwable","qualifiedName":"java.lang.Throwable","dimension":"","elementType":{}}}],"typeParameters":[]}],"fields":[],"methods":[],"typeParameters":[],"subClasses":["java.nio.InvalidMarkException","java.nio.channels.WritePendingException","java.nio.channels.ShutdownChannelGroupException","java.nio.channels.ReadPendingException","java.nio.channels.OverlappingFileLockException","java.nio.channels.NotYetConnectedException","java.nio.channels.NotYetBoundException","java.nio.channels.NonWritableChannelException","java.nio.channels.NonReadableChannelException","java.nio.channels.NoConnectionPendingException","java.nio.channels.IllegalBlockingModeException","java.nio.channels.ConnectionPendingException","java.nio.channels.ClosedSelectorException","java.nio.channels.CancelledKeyException","java.nio.channels.AlreadyConnectedException","java.nio.channels.AlreadyBoundException","java.nio.channels.AcceptPendingException","java.nio.file.ClosedWatchServiceException","java.nio.file.ClosedFileSystemException","java.nio.file.ClosedDirectoryStreamException","java.util.FormatterClosedException","java.util.concurrent.CancellationException"],"enumConstants":[]}