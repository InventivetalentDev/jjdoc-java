{"name":"Cloneable","comment":"A class implements the \u003ccode\u003eCloneable\u003c/code\u003e interface to\n indicate to the {@link java.lang.Object#clone()} method that it\n is legal for that method to make a\n field-for-field copy of instances of that class.\n \u003cp\u003e\n Invoking Object\u0027s clone method on an instance that does not implement the\n \u003ccode\u003eCloneable\u003c/code\u003e interface results in the exception\n \u003ccode\u003eCloneNotSupportedException\u003c/code\u003e being thrown.\n \u003cp\u003e\n By convention, classes that implement this interface should override\n \u003ctt\u003eObject.clone\u003c/tt\u003e (which is protected) with a public method.\n See {@link java.lang.Object#clone()} for details on overriding this\n method.\n \u003cp\u003e\n Note that this interface does \u003ci\u003enot\u003c/i\u003e contain the \u003ctt\u003eclone\u003c/tt\u003e method.\n Therefore, it is not possible to clone an object merely by virtue of the\n fact that it implements this interface.  Even if the clone method is invoked\n reflectively, there is no guarantee that it will succeed.","isClass":false,"isInterface":true,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"Cloneable","qualifiedName":"java.lang.Cloneable","dimension":"","elementType":{},"package":"java.lang","interfaces":[],"isAbstract":true,"isStatic":false,"since":"JDK1.0","innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[],"typeParameters":[],"subInterfaces":["java.security.acl.AclEntry","java.security.cert.CertSelector","java.security.cert.CRLSelector","java.security.cert.CertPathParameters","java.security.cert.CertPathValidatorResult","java.security.cert.PKIXCertPathChecker","java.security.cert.CertPathBuilderResult","java.security.cert.CertStoreParameters","java.net.HttpCookie","java.text.CharacterIterator","java.text.Format","java.text.DecimalFormatSymbols","java.text.DateFormatSymbols","java.text.Collator","java.text.BreakIterator","java.util.zip.ZipEntry","java.util.Vector","java.util.TreeSet","java.util.TreeMap","java.util.TimeZone","java.util.Locale","java.util.LinkedList","java.util.LinkedHashSet","java.util.IdentityHashMap","java.util.Hashtable","java.util.HashSet","java.util.HashMap","java.util.EnumSet","java.util.EnumMap","java.util.Date","java.util.Calendar","java.util.BitSet","java.util.ArrayList","java.util.ArrayDeque","java.util.concurrent.CopyOnWriteArrayList","java.util.concurrent.ConcurrentSkipListSet","java.util.concurrent.ConcurrentSkipListMap","java.util.jar.Manifest","java.util.jar.Attributes"],"enumConstants":[]}