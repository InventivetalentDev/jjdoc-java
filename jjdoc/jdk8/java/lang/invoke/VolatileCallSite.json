{"name":"VolatileCallSite","comment":"A {@code VolatileCallSite} is a {@link CallSite} whose target acts like a volatile variable.\n An {@code invokedynamic} instruction linked to a {@code VolatileCallSite} sees updates\n to its call site target immediately, even if the update occurs in another thread.\n There may be a performance penalty for such tight coupling between threads.\n \u003cp\u003e\n Unlike {@code MutableCallSite}, there is no\n {@linkplain MutableCallSite#syncAll syncAll operation} on volatile\n call sites, since every write to a volatile variable is implicitly\n synchronized with reader threads.\n \u003cp\u003e\n In other respects, a {@code VolatileCallSite} is interchangeable\n with {@code MutableCallSite}.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"VolatileCallSite","qualifiedName":"java.lang.invoke.VolatileCallSite","dimension":"","elementType":{},"package":"java.lang.invoke","superclass":"java.lang.invoke.CallSite","interfaces":[],"isAbstract":false,"isStatic":false,"innerClasses":[],"isInnerClass":false,"constructors":[{"name":"VolatileCallSite","comment":"Creates a call site with a volatile binding to its target.\n The initial target is set to a method handle\n of the given type which will throw an {@code IllegalStateException} if called.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.lang.invoke.MethodType)","flatSignature":"(MethodType)","parameters":[{"name":"type","type":{"isPrimitive":false,"simpleName":"MethodType","qualifiedName":"java.lang.invoke.MethodType","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"VolatileCallSite","comment":"Creates a call site with a volatile binding to its target.\n The target is set to the given value.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.lang.invoke.MethodHandle)","flatSignature":"(MethodHandle)","parameters":[{"name":"target","type":{"isPrimitive":false,"simpleName":"MethodHandle","qualifiedName":"java.lang.invoke.MethodHandle","dimension":"","elementType":{}}}],"typeParameters":[]}],"fields":[],"methods":[{"name":"getTarget","comment":"Returns the target method of the call site, which behaves\n like a {@code volatile} field of the {@code VolatileCallSite}.\n \u003cp\u003e\n The interactions of {@code getTarget} with memory are the same\n as of a read from a {@code volatile} field.\n \u003cp\u003e\n In particular, the current thread is required to issue a fresh\n read of the target from memory, and must not fail to see\n a recent update to the target by another thread.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"MethodHandle","qualifiedName":"java.lang.invoke.MethodHandle","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setTarget","comment":"Updates the target method of this call site, as a volatile variable.\n The type of the new target must agree with the type of the old target.\n \u003cp\u003e\n The interactions with memory are the same as of a write to a volatile field.\n In particular, any threads is guaranteed to see the updated target\n the next time it calls {@code getTarget}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.invoke.MethodHandle)","flatSignature":"(MethodHandle)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"newTarget","type":{"isPrimitive":false,"simpleName":"MethodHandle","qualifiedName":"java.lang.invoke.MethodHandle","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"dynamicInvoker","comment":"{@inheritDoc}","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"MethodHandle","qualifiedName":"java.lang.invoke.MethodHandle","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}