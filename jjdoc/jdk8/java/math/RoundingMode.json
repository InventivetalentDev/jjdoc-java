{"name":"RoundingMode","comment":"Specifies a \u003ci\u003erounding behavior\u003c/i\u003e for numerical operations\n capable of discarding precision. Each rounding mode indicates how\n the least significant returned digit of a rounded result is to be\n calculated.  If fewer digits are returned than the digits needed to\n represent the exact numerical result, the discarded digits will be\n referred to as the \u003ci\u003ediscarded fraction\u003c/i\u003e regardless the digits\u0027\n contribution to the value of the number.  In other words,\n considered as a numerical value, the discarded fraction could have\n an absolute value greater than one.\n\n \u003cp\u003eEach rounding mode description includes a table listing how\n different two-digit decimal values would round to a one digit\n decimal value under the rounding mode in question.  The result\n column in the tables could be gotten by creating a\n {@code BigDecimal} number with the specified value, forming a\n {@link MathContext} object with the proper settings\n ({@code precision} set to {@code 1}, and the\n {@code roundingMode} set to the rounding mode in question), and\n calling {@link BigDecimal#round round} on this number with the\n proper {@code MathContext}.  A summary table showing the results\n of these rounding operations for all rounding modes appears below.\n\n\u003ctable border\u003e\n \u003ccaption\u003e\u003cb\u003eSummary of Rounding Operations Under Different Rounding Modes\u003c/b\u003e\u003c/caption\u003e\n \u003ctr\u003e\u003cth\u003e\u003c/th\u003e\u003cth colspan\u003d8\u003eResult of rounding input to one digit with the given\n                           rounding mode\u003c/th\u003e\n \u003ctr valign\u003dtop\u003e\n \u003cth\u003eInput Number\u003c/th\u003e         \u003cth\u003e{@code UP}\u003c/th\u003e\n                                           \u003cth\u003e{@code DOWN}\u003c/th\u003e\n                                                        \u003cth\u003e{@code CEILING}\u003c/th\u003e\n                                                                       \u003cth\u003e{@code FLOOR}\u003c/th\u003e\n                                                                                    \u003cth\u003e{@code HALF_UP}\u003c/th\u003e\n                                                                                                   \u003cth\u003e{@code HALF_DOWN}\u003c/th\u003e\n                                                                                                                    \u003cth\u003e{@code HALF_EVEN}\u003c/th\u003e\n                                                                                                                                     \u003cth\u003e{@code UNNECESSARY}\u003c/th\u003e\n\n \u003ctr align\u003dright\u003e\u003ctd\u003e5.5\u003c/td\u003e  \u003ctd\u003e6\u003c/td\u003e  \u003ctd\u003e5\u003c/td\u003e    \u003ctd\u003e6\u003c/td\u003e    \u003ctd\u003e5\u003c/td\u003e  \u003ctd\u003e6\u003c/td\u003e      \u003ctd\u003e5\u003c/td\u003e       \u003ctd\u003e6\u003c/td\u003e       \u003ctd\u003ethrow {@code ArithmeticException}\u003c/td\u003e\n \u003ctr align\u003dright\u003e\u003ctd\u003e2.5\u003c/td\u003e  \u003ctd\u003e3\u003c/td\u003e  \u003ctd\u003e2\u003c/td\u003e    \u003ctd\u003e3\u003c/td\u003e    \u003ctd\u003e2\u003c/td\u003e  \u003ctd\u003e3\u003c/td\u003e      \u003ctd\u003e2\u003c/td\u003e       \u003ctd\u003e2\u003c/td\u003e       \u003ctd\u003ethrow {@code ArithmeticException}\u003c/td\u003e\n \u003ctr align\u003dright\u003e\u003ctd\u003e1.6\u003c/td\u003e  \u003ctd\u003e2\u003c/td\u003e  \u003ctd\u003e1\u003c/td\u003e    \u003ctd\u003e2\u003c/td\u003e    \u003ctd\u003e1\u003c/td\u003e  \u003ctd\u003e2\u003c/td\u003e      \u003ctd\u003e2\u003c/td\u003e       \u003ctd\u003e2\u003c/td\u003e       \u003ctd\u003ethrow {@code ArithmeticException}\u003c/td\u003e\n \u003ctr align\u003dright\u003e\u003ctd\u003e1.1\u003c/td\u003e  \u003ctd\u003e2\u003c/td\u003e  \u003ctd\u003e1\u003c/td\u003e    \u003ctd\u003e2\u003c/td\u003e    \u003ctd\u003e1\u003c/td\u003e  \u003ctd\u003e1\u003c/td\u003e      \u003ctd\u003e1\u003c/td\u003e       \u003ctd\u003e1\u003c/td\u003e       \u003ctd\u003ethrow {@code ArithmeticException}\u003c/td\u003e\n \u003ctr align\u003dright\u003e\u003ctd\u003e1.0\u003c/td\u003e  \u003ctd\u003e1\u003c/td\u003e  \u003ctd\u003e1\u003c/td\u003e    \u003ctd\u003e1\u003c/td\u003e    \u003ctd\u003e1\u003c/td\u003e  \u003ctd\u003e1\u003c/td\u003e      \u003ctd\u003e1\u003c/td\u003e       \u003ctd\u003e1\u003c/td\u003e       \u003ctd\u003e1\u003c/td\u003e\n \u003ctr align\u003dright\u003e\u003ctd\u003e-1.0\u003c/td\u003e \u003ctd\u003e-1\u003c/td\u003e \u003ctd\u003e-1\u003c/td\u003e   \u003ctd\u003e-1\u003c/td\u003e   \u003ctd\u003e-1\u003c/td\u003e \u003ctd\u003e-1\u003c/td\u003e     \u003ctd\u003e-1\u003c/td\u003e      \u003ctd\u003e-1\u003c/td\u003e      \u003ctd\u003e-1\u003c/td\u003e\n \u003ctr align\u003dright\u003e\u003ctd\u003e-1.1\u003c/td\u003e \u003ctd\u003e-2\u003c/td\u003e \u003ctd\u003e-1\u003c/td\u003e   \u003ctd\u003e-1\u003c/td\u003e   \u003ctd\u003e-2\u003c/td\u003e \u003ctd\u003e-1\u003c/td\u003e     \u003ctd\u003e-1\u003c/td\u003e      \u003ctd\u003e-1\u003c/td\u003e      \u003ctd\u003ethrow {@code ArithmeticException}\u003c/td\u003e\n \u003ctr align\u003dright\u003e\u003ctd\u003e-1.6\u003c/td\u003e \u003ctd\u003e-2\u003c/td\u003e \u003ctd\u003e-1\u003c/td\u003e   \u003ctd\u003e-1\u003c/td\u003e   \u003ctd\u003e-2\u003c/td\u003e \u003ctd\u003e-2\u003c/td\u003e     \u003ctd\u003e-2\u003c/td\u003e      \u003ctd\u003e-2\u003c/td\u003e      \u003ctd\u003ethrow {@code ArithmeticException}\u003c/td\u003e\n \u003ctr align\u003dright\u003e\u003ctd\u003e-2.5\u003c/td\u003e \u003ctd\u003e-3\u003c/td\u003e \u003ctd\u003e-2\u003c/td\u003e   \u003ctd\u003e-2\u003c/td\u003e   \u003ctd\u003e-3\u003c/td\u003e \u003ctd\u003e-3\u003c/td\u003e     \u003ctd\u003e-2\u003c/td\u003e      \u003ctd\u003e-2\u003c/td\u003e      \u003ctd\u003ethrow {@code ArithmeticException}\u003c/td\u003e\n \u003ctr align\u003dright\u003e\u003ctd\u003e-5.5\u003c/td\u003e \u003ctd\u003e-6\u003c/td\u003e \u003ctd\u003e-5\u003c/td\u003e   \u003ctd\u003e-5\u003c/td\u003e   \u003ctd\u003e-6\u003c/td\u003e \u003ctd\u003e-6\u003c/td\u003e     \u003ctd\u003e-5\u003c/td\u003e      \u003ctd\u003e-6\u003c/td\u003e      \u003ctd\u003ethrow {@code ArithmeticException}\u003c/td\u003e\n\u003c/table\u003e\n\n\n \u003cp\u003eThis {@code enum} is intended to replace the integer-based\n enumeration of rounding mode constants in {@link BigDecimal}\n ({@link BigDecimal#ROUND_UP}, {@link BigDecimal#ROUND_DOWN},\n etc. ).","isClass":true,"isInterface":false,"isEnum":true,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"RoundingMode","qualifiedName":"java.math.RoundingMode","dimension":"","elementType":{},"package":"java.math","superclass":"java.lang.Enum","interfaces":[],"isAbstract":false,"isStatic":false,"since":"1.5","innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"values","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"RoundingMode","qualifiedName":"java.math.RoundingMode","dimension":"[]","elementType":{"isPrimitive":false,"simpleName":"RoundingMode","qualifiedName":"java.math.RoundingMode","dimension":"","elementType":{}}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[],"typeParameters":[]},{"name":"valueOf","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":false,"simpleName":"RoundingMode","qualifiedName":"java.math.RoundingMode","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[{"name":"name","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"valueOf","comment":"Returns the {@code RoundingMode} object corresponding to a\n legacy integer rounding mode constant in {@link BigDecimal}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int)","flatSignature":"(int)","returnType":{"isPrimitive":false,"simpleName":"RoundingMode","qualifiedName":"java.math.RoundingMode","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[{"name":"rm","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]}],"typeParameters":[],"enumConstants":["UP","DOWN","CEILING","FLOOR","HALF_UP","HALF_DOWN","HALF_EVEN","UNNECESSARY"]}