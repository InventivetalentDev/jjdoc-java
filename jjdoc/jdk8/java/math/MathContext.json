{"name":"MathContext","comment":"Immutable objects which encapsulate the context settings which\n describe certain rules for numerical operators, such as those\n implemented by the {@link BigDecimal} class.\n\n \u003cp\u003eThe base-independent settings are:\n \u003col\u003e\n \u003cli\u003e{@code precision}:\n the number of digits to be used for an operation; results are\n rounded to this precision\n\n \u003cli\u003e{@code roundingMode}:\n a {@link RoundingMode} object which specifies the algorithm to be\n used for rounding.\n \u003c/ol\u003e","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"MathContext","qualifiedName":"java.math.MathContext","dimension":"","elementType":{},"package":"java.math","superclass":"java.lang.Object","interfaces":["java.io.Serializable"],"isAbstract":false,"isStatic":false,"since":"1.5","innerClasses":[],"isInnerClass":false,"constructors":[{"name":"MathContext","comment":"Constructs a new {@code MathContext} with the specified\n precision and the {@link RoundingMode#HALF_UP HALF_UP} rounding\n mode.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(int)","flatSignature":"(int)","parameters":[{"name":"setPrecision","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"MathContext","comment":"Constructs a new {@code MathContext} with a specified\n precision and rounding mode.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(int, java.math.RoundingMode)","flatSignature":"(int, RoundingMode)","parameters":[{"name":"setPrecision","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"setRoundingMode","type":{"isPrimitive":false,"simpleName":"RoundingMode","qualifiedName":"java.math.RoundingMode","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"MathContext","comment":"Constructs a new {@code MathContext} from a string.\n\n The string must be in the same format as that produced by the\n {@link #toString} method.\n\n \u003cp\u003eAn {@code IllegalArgumentException} is thrown if the precision\n section of the string is out of range ({@code \u003c 0}) or the string is\n not in the format created by the {@link #toString} method.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","parameters":[{"name":"val","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]}],"fields":[{"name":"UNLIMITED","comment":"A {@code MathContext} object whose settings have the values\n  required for unlimited precision arithmetic.\n  The values of the settings are:\n  \u003ccode\u003e\n  precision\u003d0 roundingMode\u003dHALF_UP\n  \u003c/code\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":true,"isMethod":false,"isOrdinaryClass":false,"type":{"isPrimitive":false,"simpleName":"MathContext","qualifiedName":"java.math.MathContext","dimension":"","elementType":{}},"isStatic":true},{"name":"DECIMAL32","comment":"A {@code MathContext} object with a precision setting\n  matching the IEEE 754R Decimal32 format, 7 digits, and a\n  rounding mode of {@link RoundingMode#HALF_EVEN HALF_EVEN}, the\n  IEEE 754R default.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":true,"isMethod":false,"isOrdinaryClass":false,"type":{"isPrimitive":false,"simpleName":"MathContext","qualifiedName":"java.math.MathContext","dimension":"","elementType":{}},"isStatic":true},{"name":"DECIMAL64","comment":"A {@code MathContext} object with a precision setting\n  matching the IEEE 754R Decimal64 format, 16 digits, and a\n  rounding mode of {@link RoundingMode#HALF_EVEN HALF_EVEN}, the\n  IEEE 754R default.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":true,"isMethod":false,"isOrdinaryClass":false,"type":{"isPrimitive":false,"simpleName":"MathContext","qualifiedName":"java.math.MathContext","dimension":"","elementType":{}},"isStatic":true},{"name":"DECIMAL128","comment":"A {@code MathContext} object with a precision setting\n  matching the IEEE 754R Decimal128 format, 34 digits, and a\n  rounding mode of {@link RoundingMode#HALF_EVEN HALF_EVEN}, the\n  IEEE 754R default.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":true,"isMethod":false,"isOrdinaryClass":false,"type":{"isPrimitive":false,"simpleName":"MathContext","qualifiedName":"java.math.MathContext","dimension":"","elementType":{}},"isStatic":true}],"methods":[{"name":"getPrecision","comment":"Returns the {@code precision} setting.\n This value is always non-negative.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getRoundingMode","comment":"Returns the roundingMode setting.\n This will be one of\n {@link  RoundingMode#CEILING},\n {@link  RoundingMode#DOWN},\n {@link  RoundingMode#FLOOR},\n {@link  RoundingMode#HALF_DOWN},\n {@link  RoundingMode#HALF_EVEN},\n {@link  RoundingMode#HALF_UP},\n {@link  RoundingMode#UNNECESSARY}, or\n {@link  RoundingMode#UP}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"RoundingMode","qualifiedName":"java.math.RoundingMode","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"equals","comment":"Compares this {@code MathContext} with the specified\n {@code Object} for equality.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.Object)","flatSignature":"(Object)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"x","type":{"isPrimitive":false,"simpleName":"Object","qualifiedName":"java.lang.Object","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"hashCode","comment":"Returns the hash code for this {@code MathContext}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"toString","comment":"Returns the string representation of this {@code MathContext}.\n The {@code String} returned represents the settings of the\n {@code MathContext} object as two space-delimited words\n (separated by a single space character, \u003ctt\u003e\u0027\u0026#92;u0020\u0027\u003c/tt\u003e,\n and with no leading or trailing white space), as follows:\n \u003col\u003e\n \u003cli\u003e\n The string {@code \"precision\u003d\"}, immediately followed\n by the value of the precision setting as a numeric string as if\n generated by the {@link Integer#toString(int) Integer.toString}\n method.\n\n \u003cli\u003e\n The string {@code \"roundingMode\u003d\"}, immediately\n followed by the value of the {@code roundingMode} setting as a\n word.  This word will be the same as the name of the\n corresponding public constant in the {@link RoundingMode}\n enum.\n \u003c/ol\u003e\n \u003cp\u003e\n For example:\n \u003cpre\u003e\n precision\u003d9 roundingMode\u003dHALF_UP\n \u003c/pre\u003e\n\n Additional words may be appended to the result of\n {@code toString} in the future if more properties are added to\n this class.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}