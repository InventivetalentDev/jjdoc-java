{"name":"JapaneseEra","comment":"An era in the Japanese Imperial calendar system.\n \u003cp\u003e\n This class defines the valid eras for the Japanese chronology.\n Japan introduced the Gregorian calendar starting with Meiji 6.\n Only Meiji and later eras are supported;\n dates before Meiji 6, January 1 are not supported.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"JapaneseEra","qualifiedName":"java.time.chrono.JapaneseEra","dimension":"","elementType":{},"package":"java.time.chrono","superclass":"java.lang.Object","interfaces":["java.time.chrono.Era","java.io.Serializable"],"isAbstract":false,"isStatic":false,"since":"1.8","innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[{"name":"MEIJI","comment":"The singleton instance for the \u0027Meiji\u0027 era (1868-01-01 - 1912-07-29)\n which has the value -1.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":true,"isMethod":false,"isOrdinaryClass":false,"type":{"isPrimitive":false,"simpleName":"JapaneseEra","qualifiedName":"java.time.chrono.JapaneseEra","dimension":"","elementType":{}},"isStatic":true},{"name":"TAISHO","comment":"The singleton instance for the \u0027Taisho\u0027 era (1912-07-30 - 1926-12-24)\n which has the value 0.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":true,"isMethod":false,"isOrdinaryClass":false,"type":{"isPrimitive":false,"simpleName":"JapaneseEra","qualifiedName":"java.time.chrono.JapaneseEra","dimension":"","elementType":{}},"isStatic":true},{"name":"SHOWA","comment":"The singleton instance for the \u0027Showa\u0027 era (1926-12-25 - 1989-01-07)\n which has the value 1.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":true,"isMethod":false,"isOrdinaryClass":false,"type":{"isPrimitive":false,"simpleName":"JapaneseEra","qualifiedName":"java.time.chrono.JapaneseEra","dimension":"","elementType":{}},"isStatic":true},{"name":"HEISEI","comment":"The singleton instance for the \u0027Heisei\u0027 era (1989-01-08 - current)\n which has the value 2.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":true,"isMethod":false,"isOrdinaryClass":false,"type":{"isPrimitive":false,"simpleName":"JapaneseEra","qualifiedName":"java.time.chrono.JapaneseEra","dimension":"","elementType":{}},"isStatic":true}],"methods":[{"name":"of","comment":"Obtains an instance of {@code JapaneseEra} from an {@code int} value.\n \u003cp\u003e\n The {@link #SHOWA} era that contains 1970-01-01 (ISO calendar system) has the value 1\n Later era is numbered 2 ({@link #HEISEI}). Earlier eras are numbered 0 ({@link #TAISHO}),\n -1 ({@link #MEIJI}), only Meiji and later eras are supported.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int)","flatSignature":"(int)","returnType":{"isPrimitive":false,"simpleName":"JapaneseEra","qualifiedName":"java.time.chrono.JapaneseEra","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[{"name":"japaneseEra","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"valueOf","comment":"Returns the {@code JapaneseEra} with the name.\n \u003cp\u003e\n The string must match exactly the name of the era.\n (Extraneous whitespace characters are not permitted.)","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":false,"simpleName":"JapaneseEra","qualifiedName":"java.time.chrono.JapaneseEra","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[{"name":"japaneseEra","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"values","comment":"Returns an array of JapaneseEras.\n \u003cp\u003e\n This method may be used to iterate over the JapaneseEras as follows:\n \u003cpre\u003e\n for (JapaneseEra c : JapaneseEra.values())\n     System.out.println(c);\n \u003c/pre\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"JapaneseEra","qualifiedName":"java.time.chrono.JapaneseEra","dimension":"[]","elementType":{"isPrimitive":false,"simpleName":"JapaneseEra","qualifiedName":"java.time.chrono.JapaneseEra","dimension":"","elementType":{}}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[],"typeParameters":[]},{"name":"getDisplayName","comment":"{@inheritDoc}","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.time.format.TextStyle, java.util.Locale)","flatSignature":"(TextStyle, Locale)","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"style","type":{"isPrimitive":false,"simpleName":"TextStyle","qualifiedName":"java.time.format.TextStyle","dimension":"","elementType":{}}},{"name":"locale","type":{"isPrimitive":false,"simpleName":"Locale","qualifiedName":"java.util.Locale","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getValue","comment":"Gets the numeric era {@code int} value.\n \u003cp\u003e\n The {@link #SHOWA} era that contains 1970-01-01 (ISO calendar system) has the value 1.\n Later eras are numbered from 2 ({@link #HEISEI}).\n Earlier eras are numbered 0 ({@link #TAISHO}), -1 ({@link #MEIJI})).","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"range","comment":"Gets the range of valid values for the specified field.\n \u003cp\u003e\n The range object expresses the minimum and maximum valid values for a field.\n This era is used to enhance the accuracy of the returned range.\n If it is not possible to return the range, because the field is not supported\n or for some other reason, an exception is thrown.\n \u003cp\u003e\n If the field is a {@link ChronoField} then the query is implemented here.\n The {@code ERA} field returns the range.\n All other {@code ChronoField} instances will throw an {@code UnsupportedTemporalTypeException}.\n \u003cp\u003e\n If the field is not a {@code ChronoField}, then the result of this method\n is obtained by invoking {@code TemporalField.rangeRefinedBy(TemporalAccessor)}\n passing {@code this} as the argument.\n Whether the range can be obtained is determined by the field.\n \u003cp\u003e\n The range of valid Japanese eras can change over time due to the nature\n of the Japanese calendar system.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.time.temporal.TemporalField)","flatSignature":"(TemporalField)","returnType":{"isPrimitive":false,"simpleName":"ValueRange","qualifiedName":"java.time.temporal.ValueRange","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"field","type":{"isPrimitive":false,"simpleName":"TemporalField","qualifiedName":"java.time.temporal.TemporalField","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"toString","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}