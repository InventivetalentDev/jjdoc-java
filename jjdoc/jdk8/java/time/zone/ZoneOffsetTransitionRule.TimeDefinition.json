{"name":"ZoneOffsetTransitionRule.TimeDefinition","comment":"A definition of the way a local time can be converted to the actual\n transition date-time.\n \u003cp\u003e\n Time zone rules are expressed in one of three ways:\n \u003cul\u003e\n \u003cli\u003eRelative to UTC\u003c/li\u003e\n \u003cli\u003eRelative to the standard offset in force\u003c/li\u003e\n \u003cli\u003eRelative to the wall offset (what you would see on a clock on the wall)\u003c/li\u003e\n \u003c/ul\u003e","isClass":true,"isInterface":false,"isEnum":true,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"TimeDefinition","qualifiedName":"java.time.zone.ZoneOffsetTransitionRule.TimeDefinition","dimension":"","elementType":{},"package":"java.time.zone","superclass":"java.lang.Enum","interfaces":[],"isAbstract":false,"isStatic":true,"innerClasses":[],"isInnerClass":true,"constructors":[],"fields":[],"methods":[{"name":"values","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"TimeDefinition","qualifiedName":"java.time.zone.ZoneOffsetTransitionRule.TimeDefinition","dimension":"[]","elementType":{"isPrimitive":false,"simpleName":"TimeDefinition","qualifiedName":"java.time.zone.ZoneOffsetTransitionRule.TimeDefinition","dimension":"","elementType":{}}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[],"typeParameters":[]},{"name":"valueOf","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":false,"simpleName":"TimeDefinition","qualifiedName":"java.time.zone.ZoneOffsetTransitionRule.TimeDefinition","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[{"name":"name","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"createDateTime","comment":"Converts the specified local date-time to the local date-time actually\n seen on a wall clock.\n \u003cp\u003e\n This method converts using the type of this enum.\n The output is defined relative to the \u0027before\u0027 offset of the transition.\n \u003cp\u003e\n The UTC type uses the UTC offset.\n The STANDARD type uses the standard offset.\n The WALL type returns the input date-time.\n The result is intended for use with the wall-offset.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.time.LocalDateTime, java.time.ZoneOffset, java.time.ZoneOffset)","flatSignature":"(LocalDateTime, ZoneOffset, ZoneOffset)","returnType":{"isPrimitive":false,"simpleName":"LocalDateTime","qualifiedName":"java.time.LocalDateTime","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"dateTime","type":{"isPrimitive":false,"simpleName":"LocalDateTime","qualifiedName":"java.time.LocalDateTime","dimension":"","elementType":{}}},{"name":"standardOffset","type":{"isPrimitive":false,"simpleName":"ZoneOffset","qualifiedName":"java.time.ZoneOffset","dimension":"","elementType":{}}},{"name":"wallOffset","type":{"isPrimitive":false,"simpleName":"ZoneOffset","qualifiedName":"java.time.ZoneOffset","dimension":"","elementType":{}}}],"typeParameters":[]}],"typeParameters":[],"enumConstants":["UTC","WALL","STANDARD"]}