{"name":"ChronoUnit","comment":"A standard set of date periods units.\n \u003cp\u003e\n This set of units provide unit-based access to manipulate a date, time or date-time.\n The standard set of units can be extended by implementing {@link TemporalUnit}.\n \u003cp\u003e\n These units are intended to be applicable in multiple calendar systems.\n For example, most non-ISO calendar systems define units of years, months and days,\n just with slightly different rules.\n The documentation of each unit explains how it operates.","isClass":true,"isInterface":false,"isEnum":true,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"ChronoUnit","qualifiedName":"java.time.temporal.ChronoUnit","dimension":"","elementType":{},"package":"java.time.temporal","superclass":"java.lang.Enum","interfaces":["java.time.temporal.TemporalUnit"],"isAbstract":false,"isStatic":false,"since":"1.8","innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"values","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"ChronoUnit","qualifiedName":"java.time.temporal.ChronoUnit","dimension":"[]","elementType":{"isPrimitive":false,"simpleName":"ChronoUnit","qualifiedName":"java.time.temporal.ChronoUnit","dimension":"","elementType":{}}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[],"typeParameters":[]},{"name":"valueOf","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":false,"simpleName":"ChronoUnit","qualifiedName":"java.time.temporal.ChronoUnit","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[{"name":"name","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getDuration","comment":"Gets the estimated duration of this unit in the ISO calendar system.\n \u003cp\u003e\n All of the units in this class have an estimated duration.\n Days vary due to daylight saving time, while months have different lengths.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Duration","qualifiedName":"java.time.Duration","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"isDurationEstimated","comment":"Checks if the duration of the unit is an estimate.\n \u003cp\u003e\n All time units in this class are considered to be accurate, while all date\n units in this class are considered to be estimated.\n \u003cp\u003e\n This definition ignores leap seconds, but considers that Days vary due to\n daylight saving time and months have different lengths.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"isDateBased","comment":"Checks if this unit is a date unit.\n \u003cp\u003e\n All units from days to eras inclusive are date-based.\n Time-based units and {@code FOREVER} return false.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"isTimeBased","comment":"Checks if this unit is a time unit.\n \u003cp\u003e\n All units from nanos to half-days inclusive are time-based.\n Date-based units and {@code FOREVER} return false.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"isSupportedBy","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.time.temporal.Temporal)","flatSignature":"(Temporal)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"temporal","type":{"isPrimitive":false,"simpleName":"Temporal","qualifiedName":"java.time.temporal.Temporal","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"addTo","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(R, long)","flatSignature":"(R, long)","returnType":{"isPrimitive":false,"simpleName":"R","qualifiedName":"R","dimension":"","elementType":{},"typeVariable":{"name":"R","bounds":["java.time.temporal.Temporal"]}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"temporal","type":{"isPrimitive":false,"simpleName":"R","qualifiedName":"R","dimension":"","elementType":{},"typeVariable":{"name":"R","bounds":["java.time.temporal.Temporal"]}}},{"name":"amount","type":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}}}],"typeParameters":[{"name":"R","bounds":["java.time.temporal.Temporal"]}]},{"name":"between","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.time.temporal.Temporal, java.time.temporal.Temporal)","flatSignature":"(Temporal, Temporal)","returnType":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"temporal1Inclusive","type":{"isPrimitive":false,"simpleName":"Temporal","qualifiedName":"java.time.temporal.Temporal","dimension":"","elementType":{}}},{"name":"temporal2Exclusive","type":{"isPrimitive":false,"simpleName":"Temporal","qualifiedName":"java.time.temporal.Temporal","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"toString","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"enumConstants":["NANOS","MICROS","MILLIS","SECONDS","MINUTES","HOURS","HALF_DAYS","DAYS","WEEKS","MONTHS","YEARS","DECADES","CENTURIES","MILLENNIA","ERAS","FOREVER"]}