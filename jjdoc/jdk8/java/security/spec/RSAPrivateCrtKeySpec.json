{"name":"RSAPrivateCrtKeySpec","comment":"This class specifies an RSA private key, as defined in the PKCS#1\n standard, using the Chinese Remainder Theorem (CRT) information values for\n efficiency.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"RSAPrivateCrtKeySpec","qualifiedName":"java.security.spec.RSAPrivateCrtKeySpec","dimension":"","elementType":{},"package":"java.security.spec","superclass":"java.security.spec.RSAPrivateKeySpec","interfaces":[],"isAbstract":false,"isStatic":false,"innerClasses":[],"isInnerClass":false,"constructors":[{"name":"RSAPrivateCrtKeySpec","comment":"Creates a new {@code RSAPrivateCrtKeySpec}\n given the modulus, publicExponent, privateExponent,\n primeP, primeQ, primeExponentP, primeExponentQ, and\n crtCoefficient as defined in PKCS#1.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)","flatSignature":"(BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger)","parameters":[{"name":"modulus","type":{"isPrimitive":false,"simpleName":"BigInteger","qualifiedName":"java.math.BigInteger","dimension":"","elementType":{}}},{"name":"publicExponent","type":{"isPrimitive":false,"simpleName":"BigInteger","qualifiedName":"java.math.BigInteger","dimension":"","elementType":{}}},{"name":"privateExponent","type":{"isPrimitive":false,"simpleName":"BigInteger","qualifiedName":"java.math.BigInteger","dimension":"","elementType":{}}},{"name":"primeP","type":{"isPrimitive":false,"simpleName":"BigInteger","qualifiedName":"java.math.BigInteger","dimension":"","elementType":{}}},{"name":"primeQ","type":{"isPrimitive":false,"simpleName":"BigInteger","qualifiedName":"java.math.BigInteger","dimension":"","elementType":{}}},{"name":"primeExponentP","type":{"isPrimitive":false,"simpleName":"BigInteger","qualifiedName":"java.math.BigInteger","dimension":"","elementType":{}}},{"name":"primeExponentQ","type":{"isPrimitive":false,"simpleName":"BigInteger","qualifiedName":"java.math.BigInteger","dimension":"","elementType":{}}},{"name":"crtCoefficient","type":{"isPrimitive":false,"simpleName":"BigInteger","qualifiedName":"java.math.BigInteger","dimension":"","elementType":{}}}],"typeParameters":[]}],"fields":[],"methods":[{"name":"getPublicExponent","comment":"Returns the public exponent.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"BigInteger","qualifiedName":"java.math.BigInteger","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getPrimeP","comment":"Returns the primeP.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"BigInteger","qualifiedName":"java.math.BigInteger","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getPrimeQ","comment":"Returns the primeQ.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"BigInteger","qualifiedName":"java.math.BigInteger","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getPrimeExponentP","comment":"Returns the primeExponentP.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"BigInteger","qualifiedName":"java.math.BigInteger","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getPrimeExponentQ","comment":"Returns the primeExponentQ.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"BigInteger","qualifiedName":"java.math.BigInteger","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getCrtCoefficient","comment":"Returns the crtCoefficient.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"BigInteger","qualifiedName":"java.math.BigInteger","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}