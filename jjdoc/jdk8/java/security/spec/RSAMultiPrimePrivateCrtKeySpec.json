{"name":"RSAMultiPrimePrivateCrtKeySpec","comment":"This class specifies an RSA multi-prime private key, as defined in the\n PKCS#1 v2.1, using the Chinese Remainder Theorem (CRT) information\n values for efficiency.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"RSAMultiPrimePrivateCrtKeySpec","qualifiedName":"java.security.spec.RSAMultiPrimePrivateCrtKeySpec","dimension":"","elementType":{},"package":"java.security.spec","superclass":"java.security.spec.RSAPrivateKeySpec","interfaces":[],"isAbstract":false,"isStatic":false,"since":"1.4","innerClasses":[],"isInnerClass":false,"constructors":[{"name":"RSAMultiPrimePrivateCrtKeySpec","comment":"Creates a new {@code RSAMultiPrimePrivateCrtKeySpec}\n given the modulus, publicExponent, privateExponent,\n primeP, primeQ, primeExponentP, primeExponentQ,\n crtCoefficient, and otherPrimeInfo as defined in PKCS#1 v2.1.\n\n \u003cp\u003eNote that the contents of {@code otherPrimeInfo}\n are copied to protect against subsequent modification when\n constructing this object.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.security.spec.RSAOtherPrimeInfo[])","flatSignature":"(BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, RSAOtherPrimeInfo[])","parameters":[{"name":"modulus","type":{"isPrimitive":false,"simpleName":"BigInteger","qualifiedName":"java.math.BigInteger","dimension":"","elementType":{}}},{"name":"publicExponent","type":{"isPrimitive":false,"simpleName":"BigInteger","qualifiedName":"java.math.BigInteger","dimension":"","elementType":{}}},{"name":"privateExponent","type":{"isPrimitive":false,"simpleName":"BigInteger","qualifiedName":"java.math.BigInteger","dimension":"","elementType":{}}},{"name":"primeP","type":{"isPrimitive":false,"simpleName":"BigInteger","qualifiedName":"java.math.BigInteger","dimension":"","elementType":{}}},{"name":"primeQ","type":{"isPrimitive":false,"simpleName":"BigInteger","qualifiedName":"java.math.BigInteger","dimension":"","elementType":{}}},{"name":"primeExponentP","type":{"isPrimitive":false,"simpleName":"BigInteger","qualifiedName":"java.math.BigInteger","dimension":"","elementType":{}}},{"name":"primeExponentQ","type":{"isPrimitive":false,"simpleName":"BigInteger","qualifiedName":"java.math.BigInteger","dimension":"","elementType":{}}},{"name":"crtCoefficient","type":{"isPrimitive":false,"simpleName":"BigInteger","qualifiedName":"java.math.BigInteger","dimension":"","elementType":{}}},{"name":"otherPrimeInfo","type":{"isPrimitive":false,"simpleName":"RSAOtherPrimeInfo","qualifiedName":"java.security.spec.RSAOtherPrimeInfo","dimension":"[]","elementType":{"isPrimitive":false,"simpleName":"RSAOtherPrimeInfo","qualifiedName":"java.security.spec.RSAOtherPrimeInfo","dimension":"","elementType":{}}}}],"typeParameters":[]}],"fields":[],"methods":[{"name":"getPublicExponent","comment":"Returns the public exponent.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"BigInteger","qualifiedName":"java.math.BigInteger","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getPrimeP","comment":"Returns the primeP.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"BigInteger","qualifiedName":"java.math.BigInteger","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getPrimeQ","comment":"Returns the primeQ.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"BigInteger","qualifiedName":"java.math.BigInteger","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getPrimeExponentP","comment":"Returns the primeExponentP.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"BigInteger","qualifiedName":"java.math.BigInteger","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getPrimeExponentQ","comment":"Returns the primeExponentQ.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"BigInteger","qualifiedName":"java.math.BigInteger","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getCrtCoefficient","comment":"Returns the crtCoefficient.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"BigInteger","qualifiedName":"java.math.BigInteger","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getOtherPrimeInfo","comment":"Returns a copy of the otherPrimeInfo or null if there are\n only two prime factors (p and q).","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"RSAOtherPrimeInfo","qualifiedName":"java.security.spec.RSAOtherPrimeInfo","dimension":"[]","elementType":{"isPrimitive":false,"simpleName":"RSAOtherPrimeInfo","qualifiedName":"java.security.spec.RSAOtherPrimeInfo","dimension":"","elementType":{}}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}