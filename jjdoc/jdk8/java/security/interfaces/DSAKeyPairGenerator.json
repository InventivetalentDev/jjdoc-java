{"name":"DSAKeyPairGenerator","comment":"An interface to an object capable of generating DSA key pairs.\n\n \u003cp\u003eThe {@code initialize} methods may each be called any number\n of times. If no {@code initialize} method is called on a\n DSAKeyPairGenerator, the default is to generate 1024-bit keys, using\n precomputed p, q and g parameters and an instance of SecureRandom as\n the random bit source.\n\n \u003cp\u003eUsers wishing to indicate DSA-specific parameters, and to generate a key\n pair suitable for use with the DSA algorithm typically\n\n \u003col\u003e\n\n \u003cli\u003eGet a key pair generator for the DSA algorithm by calling the\n KeyPairGenerator {@code getInstance} method with \"DSA\"\n as its argument.\n\n \u003cli\u003eInitialize the generator by casting the result to a DSAKeyPairGenerator\n and calling one of the\n {@code initialize} methods from this DSAKeyPairGenerator interface.\n\n \u003cli\u003eGenerate a key pair by calling the {@code generateKeyPair}\n method from the KeyPairGenerator class.\n\n \u003c/ol\u003e\n\n \u003cp\u003eNote: it is not always necessary to do do algorithm-specific\n initialization for a DSA key pair generator. That is, it is not always\n necessary to call an {@code initialize} method in this interface.\n Algorithm-independent initialization using the {@code initialize} method\n in the KeyPairGenerator\n interface is all that is needed when you accept defaults for algorithm-specific\n parameters.\n\n \u003cp\u003eNote: Some earlier implementations of this interface may not support\n larger sizes of DSA parameters such as 2048 and 3072-bit.","isClass":false,"isInterface":true,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"DSAKeyPairGenerator","qualifiedName":"java.security.interfaces.DSAKeyPairGenerator","dimension":"","elementType":{},"package":"java.security.interfaces","interfaces":[],"isAbstract":true,"isStatic":false,"innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"initialize","comment":"Initializes the key pair generator using the DSA family parameters\n (p,q and g) and an optional SecureRandom bit source. If a\n SecureRandom bit source is needed but not supplied, i.e. null, a\n default SecureRandom instance will be used.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.security.interfaces.DSAParams, java.security.SecureRandom)","flatSignature":"(DSAParams, SecureRandom)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"params","type":{"isPrimitive":false,"simpleName":"DSAParams","qualifiedName":"java.security.interfaces.DSAParams","dimension":"","elementType":{}}},{"name":"random","type":{"isPrimitive":false,"simpleName":"SecureRandom","qualifiedName":"java.security.SecureRandom","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"initialize","comment":"Initializes the key pair generator for a given modulus length\n (instead of parameters), and an optional SecureRandom bit source.\n If a SecureRandom bit source is needed but not supplied, i.e.\n null, a default SecureRandom instance will be used.\n\n \u003cp\u003eIf {@code genParams} is true, this method generates new\n p, q and g parameters. If it is false, the method uses precomputed\n parameters for the modulus length requested. If there are no\n precomputed parameters for that modulus length, an exception will be\n thrown. It is guaranteed that there will always be\n default parameters for modulus lengths of 512 and 1024 bits.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int, boolean, java.security.SecureRandom)","flatSignature":"(int, boolean, SecureRandom)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"modlen","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"genParams","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}},{"name":"random","type":{"isPrimitive":false,"simpleName":"SecureRandom","qualifiedName":"java.security.SecureRandom","dimension":"","elementType":{}}}],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}