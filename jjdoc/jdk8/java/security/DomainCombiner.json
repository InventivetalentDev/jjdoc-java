{"name":"DomainCombiner","comment":"A {@code DomainCombiner} provides a means to dynamically\n update the ProtectionDomains associated with the current\n {@code AccessControlContext}.\n\n \u003cp\u003e A {@code DomainCombiner} is passed as a parameter to the\n appropriate constructor for {@code AccessControlContext}.\n The newly constructed context is then passed to the\n {@code AccessController.doPrivileged(..., context)} method\n to bind the provided context (and associated {@code DomainCombiner})\n with the current execution Thread.  Subsequent calls to\n {@code AccessController.getContext} or\n {@code AccessController.checkPermission}\n cause the {@code DomainCombiner.combine} to get invoked.\n\n \u003cp\u003e The combine method takes two arguments.  The first argument represents\n an array of ProtectionDomains from the current execution Thread,\n since the most recent call to {@code AccessController.doPrivileged}.\n If no call to doPrivileged was made, then the first argument will contain\n all the ProtectionDomains from the current execution Thread.\n The second argument represents an array of inherited ProtectionDomains,\n which may be {@code null}.  ProtectionDomains may be inherited\n from a parent Thread, or from a privileged context.  If no call to\n doPrivileged was made, then the second argument will contain the\n ProtectionDomains inherited from the parent Thread.  If one or more calls\n to doPrivileged were made, and the most recent call was to\n doPrivileged(action, context), then the second argument will contain the\n ProtectionDomains from the privileged context.  If the most recent call\n was to doPrivileged(action), then there is no privileged context,\n and the second argument will be {@code null}.\n\n \u003cp\u003e The {@code combine} method investigates the two input arrays\n of ProtectionDomains and returns a single array containing the updated\n ProtectionDomains.  In the simplest case, the {@code combine}\n method merges the two stacks into one.  In more complex cases,\n the {@code combine} method returns a modified\n stack of ProtectionDomains.  The modification may have added new\n ProtectionDomains, removed certain ProtectionDomains, or simply\n updated existing ProtectionDomains.  Re-ordering and other optimizations\n to the ProtectionDomains are also permitted.  Typically the\n {@code combine} method bases its updates on the information\n encapsulated in the {@code DomainCombiner}.\n\n \u003cp\u003e After the {@code AccessController.getContext} method\n receives the combined stack of ProtectionDomains back from\n the {@code DomainCombiner}, it returns a new\n AccessControlContext that has both the combined ProtectionDomains\n as well as the {@code DomainCombiner}.","isClass":false,"isInterface":true,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"DomainCombiner","qualifiedName":"java.security.DomainCombiner","dimension":"","elementType":{},"package":"java.security","interfaces":[],"isAbstract":true,"isStatic":false,"since":"1.3","innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"combine","comment":"Modify or update the provided ProtectionDomains.\n ProtectionDomains may be added to or removed from the given\n ProtectionDomains.  The ProtectionDomains may be re-ordered.\n Individual ProtectionDomains may be modified (with a new\n set of Permissions, for example).\n\n \u003cp\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.security.ProtectionDomain[], java.security.ProtectionDomain[])","flatSignature":"(ProtectionDomain[], ProtectionDomain[])","returnType":{"isPrimitive":false,"simpleName":"ProtectionDomain","qualifiedName":"java.security.ProtectionDomain","dimension":"[]","elementType":{"isPrimitive":false,"simpleName":"ProtectionDomain","qualifiedName":"java.security.ProtectionDomain","dimension":"","elementType":{}}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"currentDomains","type":{"isPrimitive":false,"simpleName":"ProtectionDomain","qualifiedName":"java.security.ProtectionDomain","dimension":"[]","elementType":{"isPrimitive":false,"simpleName":"ProtectionDomain","qualifiedName":"java.security.ProtectionDomain","dimension":"","elementType":{}}}},{"name":"assignedDomains","type":{"isPrimitive":false,"simpleName":"ProtectionDomain","qualifiedName":"java.security.ProtectionDomain","dimension":"[]","elementType":{"isPrimitive":false,"simpleName":"ProtectionDomain","qualifiedName":"java.security.ProtectionDomain","dimension":"","elementType":{}}}}],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}