{"name":"Identity","comment":"\u003cp\u003eThis class represents identities: real-world objects such as people,\n companies or organizations whose identities can be authenticated using\n their public keys. Identities may also be more abstract (or concrete)\n constructs, such as daemon threads or smart cards.\n\n \u003cp\u003eAll Identity objects have a name and a public key. Names are\n immutable. Identities may also be scoped. That is, if an Identity is\n specified to have a particular scope, then the name and public\n key of the Identity are unique within that scope.\n\n \u003cp\u003eAn Identity also has a set of certificates (all certifying its own\n public key). The Principal names specified in these certificates need\n not be the same, only the key.\n\n \u003cp\u003eAn Identity can be subclassed, to include postal and email addresses,\n telephone numbers, images of faces and logos, and so on.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"Identity","qualifiedName":"java.security.Identity","dimension":"","elementType":{},"package":"java.security","superclass":"java.lang.Object","interfaces":["java.security.Principal","java.io.Serializable"],"isAbstract":true,"isStatic":false,"innerClasses":[],"isInnerClass":false,"constructors":[{"name":"Identity","comment":"Constructs an identity with the specified name and scope.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.lang.String, java.security.IdentityScope)","flatSignature":"(String, IdentityScope)","parameters":[{"name":"name","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"scope","type":{"isPrimitive":false,"simpleName":"IdentityScope","qualifiedName":"java.security.IdentityScope","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"Identity","comment":"Constructs an identity with the specified name and no scope.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","parameters":[{"name":"name","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]}],"fields":[],"methods":[{"name":"getName","comment":"Returns this identity\u0027s name.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getScope","comment":"Returns this identity\u0027s scope.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"IdentityScope","qualifiedName":"java.security.IdentityScope","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getPublicKey","comment":"Returns this identity\u0027s public key.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"PublicKey","qualifiedName":"java.security.PublicKey","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setPublicKey","comment":"Sets this identity\u0027s public key. The old key and all of this\n identity\u0027s certificates are removed by this operation.\n\n \u003cp\u003eFirst, if there is a security manager, its {@code checkSecurityAccess}\n method is called with {@code \"setIdentityPublicKey\"}\n as its argument to see if it\u0027s ok to set the public key.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.security.PublicKey)","flatSignature":"(PublicKey)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"key","type":{"isPrimitive":false,"simpleName":"PublicKey","qualifiedName":"java.security.PublicKey","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"setInfo","comment":"Specifies a general information string for this identity.\n\n \u003cp\u003eFirst, if there is a security manager, its {@code checkSecurityAccess}\n method is called with {@code \"setIdentityInfo\"}\n as its argument to see if it\u0027s ok to specify the information string.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"info","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getInfo","comment":"Returns general information previously specified for this identity.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"addCertificate","comment":"Adds a certificate for this identity. If the identity has a public\n key, the public key in the certificate must be the same, and if\n the identity does not have a public key, the identity\u0027s\n public key is set to be that specified in the certificate.\n\n \u003cp\u003eFirst, if there is a security manager, its {@code checkSecurityAccess}\n method is called with {@code \"addIdentityCertificate\"}\n as its argument to see if it\u0027s ok to add a certificate.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.security.Certificate)","flatSignature":"(Certificate)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"certificate","type":{"isPrimitive":false,"simpleName":"Certificate","qualifiedName":"java.security.Certificate","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"removeCertificate","comment":"Removes a certificate from this identity.\n\n \u003cp\u003eFirst, if there is a security manager, its {@code checkSecurityAccess}\n method is called with {@code \"removeIdentityCertificate\"}\n as its argument to see if it\u0027s ok to remove a certificate.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.security.Certificate)","flatSignature":"(Certificate)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"certificate","type":{"isPrimitive":false,"simpleName":"Certificate","qualifiedName":"java.security.Certificate","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"certificates","comment":"Returns a copy of all the certificates for this identity.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Certificate","qualifiedName":"java.security.Certificate","dimension":"[]","elementType":{"isPrimitive":false,"simpleName":"Certificate","qualifiedName":"java.security.Certificate","dimension":"","elementType":{}}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"equals","comment":"Tests for equality between the specified object and this identity.\n This first tests to see if the entities actually refer to the same\n object, in which case it returns true. Next, it checks to see if\n the entities have the same name and the same scope. If they do,\n the method returns true. Otherwise, it calls\n {@link #identityEquals(Identity) identityEquals}, which subclasses should\n override.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.Object)","flatSignature":"(Object)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"identity","type":{"isPrimitive":false,"simpleName":"Object","qualifiedName":"java.lang.Object","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"toString","comment":"Returns a short string describing this identity, telling its\n name and its scope (if any).\n\n \u003cp\u003eFirst, if there is a security manager, its {@code checkSecurityAccess}\n method is called with {@code \"printIdentity\"}\n as its argument to see if it\u0027s ok to return the string.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"toString","comment":"Returns a string representation of this identity, with\n optionally more details than that provided by the\n {@code toString} method without any arguments.\n\n \u003cp\u003eFirst, if there is a security manager, its {@code checkSecurityAccess}\n method is called with {@code \"printIdentity\"}\n as its argument to see if it\u0027s ok to return the string.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(boolean)","flatSignature":"(boolean)","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"detailed","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"hashCode","comment":"Returns a hashcode for this identity.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"subClasses":["java.security.Signer","java.security.IdentityScope"],"enumConstants":[]}