{"name":"PolicyNode","comment":"An immutable valid policy tree node as defined by the PKIX certification\n path validation algorithm.\n\n \u003cp\u003eOne of the outputs of the PKIX certification path validation\n algorithm is a valid policy tree, which includes the policies that\n were determined to be valid, how this determination was reached,\n and any policy qualifiers encountered. This tree is of depth\n \u003ci\u003en\u003c/i\u003e, where \u003ci\u003en\u003c/i\u003e is the length of the certification\n path that has been validated.\n\n \u003cp\u003eMost applications will not need to examine the valid policy tree.\n They can achieve their policy processing goals by setting the\n policy-related parameters in {@code PKIXParameters}. However,\n the valid policy tree is available for more sophisticated applications,\n especially those that process policy qualifiers.\n\n \u003cp\u003e{@link PKIXCertPathValidatorResult#getPolicyTree()\n PKIXCertPathValidatorResult.getPolicyTree} returns the root node of the\n valid policy tree. The tree can be traversed using the\n {@link #getChildren getChildren} and {@link #getParent getParent} methods.\n Data about a particular node can be retrieved using other methods of\n {@code PolicyNode}.\n\n \u003cp\u003e\u003cb\u003eConcurrent Access\u003c/b\u003e\n \u003cp\u003eAll {@code PolicyNode} objects must be immutable and\n thread-safe. Multiple threads may concurrently invoke the methods defined\n in this class on a single {@code PolicyNode} object (or more than one)\n with no ill effects. This stipulation applies to all public fields and\n methods of this class and any added or overridden by subclasses.","isClass":false,"isInterface":true,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"PolicyNode","qualifiedName":"java.security.cert.PolicyNode","dimension":"","elementType":{},"package":"java.security.cert","interfaces":[],"isAbstract":true,"isStatic":false,"since":"1.4","innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"getParent","comment":"Returns the parent of this node, or {@code null} if this is the\n root node.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"PolicyNode","qualifiedName":"java.security.cert.PolicyNode","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getChildren","comment":"Returns an iterator over the children of this node. Any attempts to\n modify the children of this node through the\n {@code Iterator}\u0027s remove method must throw an\n {@code UnsupportedOperationException}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Iterator","qualifiedName":"java.util.Iterator","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getDepth","comment":"Returns the depth of this node in the valid policy tree.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getValidPolicy","comment":"Returns the valid policy represented by this node.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getPolicyQualifiers","comment":"Returns the set of policy qualifiers associated with the\n valid policy represented by this node.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Set","qualifiedName":"java.util.Set","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getExpectedPolicies","comment":"Returns the set of expected policies that would satisfy this\n node\u0027s valid policy in the next certificate to be processed.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Set","qualifiedName":"java.util.Set","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"isCritical","comment":"Returns the criticality indicator of the certificate policy extension\n in the most recently processed certificate.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}