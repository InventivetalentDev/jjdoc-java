{"name":"CertPathBuilder","comment":"A class for building certification paths (also known as certificate chains).\n \u003cp\u003e\n This class uses a provider-based architecture.\n To create a {@code CertPathBuilder}, call\n one of the static {@code getInstance} methods, passing in the\n algorithm name of the {@code CertPathBuilder} desired and optionally\n the name of the provider desired.\n\n \u003cp\u003eOnce a {@code CertPathBuilder} object has been created, certification\n paths can be constructed by calling the {@link #build build} method and\n passing it an algorithm-specific set of parameters. If successful, the\n result (including the {@code CertPath} that was built) is returned\n in an object that implements the {@code CertPathBuilderResult}\n interface.\n\n \u003cp\u003eThe {@link #getRevocationChecker} method allows an application to specify\n additional algorithm-specific parameters and options used by the\n {@code CertPathBuilder} when checking the revocation status of certificates.\n Here is an example demonstrating how it is used with the PKIX algorithm:\n\n \u003cpre\u003e\n CertPathBuilder cpb \u003d CertPathBuilder.getInstance(\"PKIX\");\n PKIXRevocationChecker rc \u003d (PKIXRevocationChecker)cpb.getRevocationChecker();\n rc.setOptions(EnumSet.of(Option.PREFER_CRLS));\n params.addCertPathChecker(rc);\n CertPathBuilderResult cpbr \u003d cpb.build(params);\n \u003c/pre\u003e\n\n \u003cp\u003eEvery implementation of the Java platform is required to support the\n following standard {@code CertPathBuilder} algorithm:\n \u003cul\u003e\n \u003cli\u003e{@code PKIX}\u003c/li\u003e\n \u003c/ul\u003e\n This algorithm is described in the \u003ca href\u003d\n \"{@docRoot}/../technotes/guides/security/StandardNames.html#CertPathBuilder\"\u003e\n CertPathBuilder section\u003c/a\u003e of the\n Java Cryptography Architecture Standard Algorithm Name Documentation.\n Consult the release documentation for your implementation to see if any\n other algorithms are supported.\n\n \u003cp\u003e\n \u003cb\u003eConcurrent Access\u003c/b\u003e\n \u003cp\u003e\n The static methods of this class are guaranteed to be thread-safe.\n Multiple threads may concurrently invoke the static methods defined in\n this class with no ill effects.\n \u003cp\u003e\n However, this is not true for the non-static methods defined by this class.\n Unless otherwise documented by a specific provider, threads that need to\n access a single {@code CertPathBuilder} instance concurrently should\n synchronize amongst themselves and provide the necessary locking. Multiple\n threads each manipulating a different {@code CertPathBuilder} instance\n need not synchronize.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"CertPathBuilder","qualifiedName":"java.security.cert.CertPathBuilder","dimension":"","elementType":{},"package":"java.security.cert","superclass":"java.lang.Object","interfaces":[],"isAbstract":false,"isStatic":false,"since":"1.4","innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"getInstance","comment":"Returns a {@code CertPathBuilder} object that implements the\n specified algorithm.\n\n \u003cp\u003e This method traverses the list of registered security Providers,\n starting with the most preferred Provider.\n A new CertPathBuilder object encapsulating the\n CertPathBuilderSpi implementation from the first\n Provider that supports the specified algorithm is returned.\n\n \u003cp\u003e Note that the list of registered providers may be retrieved via\n the {@link Security#getProviders() Security.getProviders()} method.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":false,"simpleName":"CertPathBuilder","qualifiedName":"java.security.cert.CertPathBuilder","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[{"name":"algorithm","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getInstance","comment":"Returns a {@code CertPathBuilder} object that implements the\n specified algorithm.\n\n \u003cp\u003e A new CertPathBuilder object encapsulating the\n CertPathBuilderSpi implementation from the specified provider\n is returned.  The specified provider must be registered\n in the security provider list.\n\n \u003cp\u003e Note that the list of registered providers may be retrieved via\n the {@link Security#getProviders() Security.getProviders()} method.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String, java.lang.String)","flatSignature":"(String, String)","returnType":{"isPrimitive":false,"simpleName":"CertPathBuilder","qualifiedName":"java.security.cert.CertPathBuilder","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[{"name":"algorithm","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"provider","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getInstance","comment":"Returns a {@code CertPathBuilder} object that implements the\n specified algorithm.\n\n \u003cp\u003e A new CertPathBuilder object encapsulating the\n CertPathBuilderSpi implementation from the specified Provider\n object is returned.  Note that the specified Provider object\n does not have to be registered in the provider list.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String, java.security.Provider)","flatSignature":"(String, Provider)","returnType":{"isPrimitive":false,"simpleName":"CertPathBuilder","qualifiedName":"java.security.cert.CertPathBuilder","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[{"name":"algorithm","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"provider","type":{"isPrimitive":false,"simpleName":"Provider","qualifiedName":"java.security.Provider","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getProvider","comment":"Returns the provider of this {@code CertPathBuilder}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Provider","qualifiedName":"java.security.Provider","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getAlgorithm","comment":"Returns the name of the algorithm of this {@code CertPathBuilder}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"build","comment":"Attempts to build a certification path using the specified algorithm\n parameter set.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.security.cert.CertPathParameters)","flatSignature":"(CertPathParameters)","returnType":{"isPrimitive":false,"simpleName":"CertPathBuilderResult","qualifiedName":"java.security.cert.CertPathBuilderResult","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"params","type":{"isPrimitive":false,"simpleName":"CertPathParameters","qualifiedName":"java.security.cert.CertPathParameters","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getDefaultType","comment":"Returns the default {@code CertPathBuilder} type as specified by\n the {@code certpathbuilder.type} security property, or the string\n {@literal \"PKIX\"} if no such property exists.\n\n \u003cp\u003eThe default {@code CertPathBuilder} type can be used by\n applications that do not want to use a hard-coded type when calling one\n of the {@code getInstance} methods, and want to provide a default\n type in case a user does not specify its own.\n\n \u003cp\u003eThe default {@code CertPathBuilder} type can be changed by\n setting the value of the {@code certpathbuilder.type} security property\n to the desired type.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[],"typeParameters":[]},{"name":"getRevocationChecker","comment":"Returns a {@code CertPathChecker} that the encapsulated\n {@code CertPathBuilderSpi} implementation uses to check the revocation\n status of certificates. A PKIX implementation returns objects of\n type {@code PKIXRevocationChecker}. Each invocation of this method\n returns a new instance of {@code CertPathChecker}.\n\n \u003cp\u003eThe primary purpose of this method is to allow callers to specify\n additional input parameters and options specific to revocation checking.\n See the class description for an example.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"CertPathChecker","qualifiedName":"java.security.cert.CertPathChecker","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}