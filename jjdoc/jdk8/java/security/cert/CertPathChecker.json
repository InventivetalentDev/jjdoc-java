{"name":"CertPathChecker","comment":"\u003cp\u003ePerforms one or more checks on each {@code Certificate} of a\n {@code CertPath}.\n\n \u003cp\u003eA {@code CertPathChecker} implementation is typically created to extend\n a certification path validation algorithm. For example, an implementation\n may check for and process a critical private extension of each certificate\n in a certification path.","isClass":false,"isInterface":true,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"CertPathChecker","qualifiedName":"java.security.cert.CertPathChecker","dimension":"","elementType":{},"package":"java.security.cert","interfaces":[],"isAbstract":true,"isStatic":false,"since":"1.8","innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"init","comment":"Initializes the internal state of this {@code CertPathChecker}.\n\n \u003cp\u003eThe {@code forward} flag specifies the order that certificates will\n be passed to the {@link #check check} method (forward or reverse).","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(boolean)","flatSignature":"(boolean)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"forward","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"isForwardCheckingSupported","comment":"Indicates if forward checking is supported. Forward checking refers\n to the ability of the {@code CertPathChecker} to perform its checks\n when certificates are presented to the {@code check} method in the\n forward direction (from target to trust anchor).","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"check","comment":"Performs the check(s) on the specified certificate using its internal\n state. The certificates are presented in the order specified by the\n {@code init} method.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.security.cert.Certificate)","flatSignature":"(Certificate)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"cert","type":{"isPrimitive":false,"simpleName":"Certificate","qualifiedName":"java.security.cert.Certificate","dimension":"","elementType":{}}}],"typeParameters":[]}],"typeParameters":[],"subInterfaces":["java.security.cert.PKIXCertPathChecker"],"enumConstants":[]}