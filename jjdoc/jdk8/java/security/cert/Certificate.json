{"name":"Certificate","comment":"\u003cp\u003eAbstract class for managing a variety of identity certificates.\n An identity certificate is a binding of a principal to a public key which\n is vouched for by another principal.  (A principal represents\n an entity such as an individual user, a group, or a corporation.)\n\u003cp\u003e\n This class is an abstraction for certificates that have different\n formats but important common uses.  For example, different types of\n certificates, such as X.509 and PGP, share general certificate\n functionality (like encoding and verifying) and\n some types of information (like a public key).\n \u003cp\u003e\n X.509, PGP, and SDSI certificates can all be implemented by\n subclassing the Certificate class, even though they contain different\n sets of information, and they store and retrieve the information in\n different ways.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"Certificate","qualifiedName":"java.security.cert.Certificate","dimension":"","elementType":{},"package":"java.security.cert","superclass":"java.lang.Object","interfaces":["java.io.Serializable"],"isAbstract":true,"isStatic":false,"innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"getType","comment":"Returns the type of this certificate.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"equals","comment":"Compares this certificate for equality with the specified\n object. If the {@code other} object is an\n {@code instanceof} {@code Certificate}, then\n its encoded form is retrieved and compared with the\n encoded form of this certificate.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.Object)","flatSignature":"(Object)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"other","type":{"isPrimitive":false,"simpleName":"Object","qualifiedName":"java.lang.Object","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"hashCode","comment":"Returns a hashcode value for this certificate from its\n encoded form.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getEncoded","comment":"Returns the encoded form of this certificate. It is\n assumed that each certificate type would have only a single\n form of encoding; for example, X.509 certificates would\n be encoded as ASN.1 DER.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"[]","elementType":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"","elementType":{}}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"verify","comment":"Verifies that this certificate was signed using the\n private key that corresponds to the specified public key.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.security.PublicKey)","flatSignature":"(PublicKey)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"key","type":{"isPrimitive":false,"simpleName":"PublicKey","qualifiedName":"java.security.PublicKey","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"verify","comment":"Verifies that this certificate was signed using the\n private key that corresponds to the specified public key.\n This method uses the signature verification engine\n supplied by the specified provider.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.security.PublicKey, java.lang.String)","flatSignature":"(PublicKey, String)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"key","type":{"isPrimitive":false,"simpleName":"PublicKey","qualifiedName":"java.security.PublicKey","dimension":"","elementType":{}}},{"name":"sigProvider","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"verify","comment":"Verifies that this certificate was signed using the\n private key that corresponds to the specified public key.\n This method uses the signature verification engine\n supplied by the specified provider. Note that the specified\n Provider object does not have to be registered in the provider list.\n\n \u003cp\u003e This method was added to version 1.8 of the Java Platform\n Standard Edition. In order to maintain backwards compatibility with\n existing service providers, this method cannot be {@code abstract}\n and by default throws an {@code UnsupportedOperationException}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.security.PublicKey, java.security.Provider)","flatSignature":"(PublicKey, Provider)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"key","type":{"isPrimitive":false,"simpleName":"PublicKey","qualifiedName":"java.security.PublicKey","dimension":"","elementType":{}}},{"name":"sigProvider","type":{"isPrimitive":false,"simpleName":"Provider","qualifiedName":"java.security.Provider","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"toString","comment":"Returns a string representation of this certificate.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getPublicKey","comment":"Gets the public key from this certificate.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"PublicKey","qualifiedName":"java.security.PublicKey","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"subClasses":["java.security.cert.X509Certificate"],"enumConstants":[]}