{"name":"Owner","comment":"Interface for managing owners of Access Control Lists (ACLs) or ACL\n configurations. (Note that the Acl interface in the\n {@code  java.security.acl} package extends this Owner\n interface.) The initial owner Principal should be specified as an\n argument to the constructor of the class implementing this interface.","isClass":false,"isInterface":true,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"Owner","qualifiedName":"java.security.acl.Owner","dimension":"","elementType":{},"package":"java.security.acl","interfaces":[],"isAbstract":true,"isStatic":false,"innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"addOwner","comment":"Adds an owner. Only owners can modify ACL contents. The caller\n principal must be an owner of the ACL in order to invoke this method.\n That is, only an owner can add another owner. The initial owner is\n configured at ACL construction time.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.security.Principal, java.security.Principal)","flatSignature":"(Principal, Principal)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"caller","type":{"isPrimitive":false,"simpleName":"Principal","qualifiedName":"java.security.Principal","dimension":"","elementType":{}}},{"name":"owner","type":{"isPrimitive":false,"simpleName":"Principal","qualifiedName":"java.security.Principal","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"deleteOwner","comment":"Deletes an owner. If this is the last owner in the ACL, an exception is\n raised.\u003cp\u003e\n\n The caller principal must be an owner of the ACL in order to invoke\n this method.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.security.Principal, java.security.Principal)","flatSignature":"(Principal, Principal)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"caller","type":{"isPrimitive":false,"simpleName":"Principal","qualifiedName":"java.security.Principal","dimension":"","elementType":{}}},{"name":"owner","type":{"isPrimitive":false,"simpleName":"Principal","qualifiedName":"java.security.Principal","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"isOwner","comment":"Returns true if the given principal is an owner of the ACL.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.security.Principal)","flatSignature":"(Principal)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"owner","type":{"isPrimitive":false,"simpleName":"Principal","qualifiedName":"java.security.Principal","dimension":"","elementType":{}}}],"typeParameters":[]}],"typeParameters":[],"subInterfaces":["java.security.acl.Acl"],"enumConstants":[]}