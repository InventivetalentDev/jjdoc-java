{"name":"Guard","comment":"\u003cp\u003e This interface represents a guard, which is an object that is used\n to protect access to another object.\n\n \u003cp\u003eThis interface contains a single method, {@code checkGuard},\n with a single {@code object} argument. {@code checkGuard} is\n invoked (by the GuardedObject {@code getObject} method)\n to determine whether or not to allow access to the object.","isClass":false,"isInterface":true,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"Guard","qualifiedName":"java.security.Guard","dimension":"","elementType":{},"package":"java.security","interfaces":[],"isAbstract":true,"isStatic":false,"innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"checkGuard","comment":"Determines whether or not to allow access to the guarded object\n {@code object}. Returns silently if access is allowed.\n Otherwise, throws a SecurityException.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.Object)","flatSignature":"(Object)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"object","type":{"isPrimitive":false,"simpleName":"Object","qualifiedName":"java.lang.Object","dimension":"","elementType":{}}}],"typeParameters":[]}],"typeParameters":[],"subInterfaces":["java.security.Permission"],"enumConstants":[]}