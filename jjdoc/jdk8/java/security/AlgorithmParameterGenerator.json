{"name":"AlgorithmParameterGenerator","comment":"The {@code AlgorithmParameterGenerator} class is used to generate a\n set of\n parameters to be used with a certain algorithm. Parameter generators\n are constructed using the {@code getInstance} factory methods\n (static methods that return instances of a given class).\n\n \u003cP\u003eThe object that will generate the parameters can be initialized\n in two different ways: in an algorithm-independent manner, or in an\n algorithm-specific manner:\n\n \u003cul\u003e\n \u003cli\u003eThe algorithm-independent approach uses the fact that all parameter\n generators share the concept of a \"size\" and a\n source of randomness. The measure of size is universally shared\n by all algorithm parameters, though it is interpreted differently\n for different algorithms. For example, in the case of parameters for\n the \u003ci\u003eDSA\u003c/i\u003e algorithm, \"size\" corresponds to the size\n of the prime modulus (in bits).\n When using this approach, algorithm-specific parameter generation\n values - if any - default to some standard values, unless they can be\n derived from the specified size.\n\n \u003cli\u003eThe other approach initializes a parameter generator object\n using algorithm-specific semantics, which are represented by a set of\n algorithm-specific parameter generation values. To generate\n Diffie-Hellman system parameters, for example, the parameter generation\n values usually\n consist of the size of the prime modulus and the size of the\n random exponent, both specified in number of bits.\n \u003c/ul\u003e\n\n \u003cP\u003eIn case the client does not explicitly initialize the\n AlgorithmParameterGenerator\n (via a call to an {@code init} method), each provider must supply (and\n document) a default initialization. For example, the Sun provider uses a\n default modulus prime size of 1024 bits for the generation of DSA\n parameters.\n\n \u003cp\u003e Every implementation of the Java platform is required to support the\n following standard {@code AlgorithmParameterGenerator} algorithms and\n keysizes in parentheses:\n \u003cul\u003e\n \u003cli\u003e{@code DiffieHellman} (1024)\u003c/li\u003e\n \u003cli\u003e{@code DSA} (1024)\u003c/li\u003e\n \u003c/ul\u003e\n These algorithms are described in the \u003ca href\u003d\n \"{@docRoot}/../technotes/guides/security/StandardNames.html#AlgorithmParameterGenerator\"\u003e\n AlgorithmParameterGenerator section\u003c/a\u003e of the\n Java Cryptography Architecture Standard Algorithm Name Documentation.\n Consult the release documentation for your implementation to see if any\n other algorithms are supported.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"AlgorithmParameterGenerator","qualifiedName":"java.security.AlgorithmParameterGenerator","dimension":"","elementType":{},"package":"java.security","superclass":"java.lang.Object","interfaces":[],"isAbstract":false,"isStatic":false,"since":"1.2","innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"getAlgorithm","comment":"Returns the standard name of the algorithm this parameter\n generator is associated with.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getInstance","comment":"Returns an AlgorithmParameterGenerator object for generating\n a set of parameters to be used with the specified algorithm.\n\n \u003cp\u003e This method traverses the list of registered security Providers,\n starting with the most preferred Provider.\n A new AlgorithmParameterGenerator object encapsulating the\n AlgorithmParameterGeneratorSpi implementation from the first\n Provider that supports the specified algorithm is returned.\n\n \u003cp\u003e Note that the list of registered providers may be retrieved via\n the {@link Security#getProviders() Security.getProviders()} method.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":false,"simpleName":"AlgorithmParameterGenerator","qualifiedName":"java.security.AlgorithmParameterGenerator","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[{"name":"algorithm","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getInstance","comment":"Returns an AlgorithmParameterGenerator object for generating\n a set of parameters to be used with the specified algorithm.\n\n \u003cp\u003e A new AlgorithmParameterGenerator object encapsulating the\n AlgorithmParameterGeneratorSpi implementation from the specified provider\n is returned.  The specified provider must be registered\n in the security provider list.\n\n \u003cp\u003e Note that the list of registered providers may be retrieved via\n the {@link Security#getProviders() Security.getProviders()} method.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String, java.lang.String)","flatSignature":"(String, String)","returnType":{"isPrimitive":false,"simpleName":"AlgorithmParameterGenerator","qualifiedName":"java.security.AlgorithmParameterGenerator","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[{"name":"algorithm","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"provider","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getInstance","comment":"Returns an AlgorithmParameterGenerator object for generating\n a set of parameters to be used with the specified algorithm.\n\n \u003cp\u003e A new AlgorithmParameterGenerator object encapsulating the\n AlgorithmParameterGeneratorSpi implementation from the specified Provider\n object is returned.  Note that the specified Provider object\n does not have to be registered in the provider list.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String, java.security.Provider)","flatSignature":"(String, Provider)","returnType":{"isPrimitive":false,"simpleName":"AlgorithmParameterGenerator","qualifiedName":"java.security.AlgorithmParameterGenerator","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[{"name":"algorithm","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"provider","type":{"isPrimitive":false,"simpleName":"Provider","qualifiedName":"java.security.Provider","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getProvider","comment":"Returns the provider of this algorithm parameter generator object.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Provider","qualifiedName":"java.security.Provider","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"init","comment":"Initializes this parameter generator for a certain size.\n To create the parameters, the {@code SecureRandom}\n implementation of the highest-priority installed provider is used as\n the source of randomness.\n (If none of the installed providers supply an implementation of\n {@code SecureRandom}, a system-provided source of randomness is\n used.)","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int)","flatSignature":"(int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"size","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"init","comment":"Initializes this parameter generator for a certain size and source\n of randomness.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int, java.security.SecureRandom)","flatSignature":"(int, SecureRandom)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"size","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"random","type":{"isPrimitive":false,"simpleName":"SecureRandom","qualifiedName":"java.security.SecureRandom","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"init","comment":"Initializes this parameter generator with a set of algorithm-specific\n parameter generation values.\n To generate the parameters, the {@code SecureRandom}\n implementation of the highest-priority installed provider is used as\n the source of randomness.\n (If none of the installed providers supply an implementation of\n {@code SecureRandom}, a system-provided source of randomness is\n used.)","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.security.spec.AlgorithmParameterSpec)","flatSignature":"(AlgorithmParameterSpec)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"genParamSpec","type":{"isPrimitive":false,"simpleName":"AlgorithmParameterSpec","qualifiedName":"java.security.spec.AlgorithmParameterSpec","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"init","comment":"Initializes this parameter generator with a set of algorithm-specific\n parameter generation values.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom)","flatSignature":"(AlgorithmParameterSpec, SecureRandom)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"genParamSpec","type":{"isPrimitive":false,"simpleName":"AlgorithmParameterSpec","qualifiedName":"java.security.spec.AlgorithmParameterSpec","dimension":"","elementType":{}}},{"name":"random","type":{"isPrimitive":false,"simpleName":"SecureRandom","qualifiedName":"java.security.SecureRandom","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"generateParameters","comment":"Generates the parameters.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"AlgorithmParameters","qualifiedName":"java.security.AlgorithmParameters","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}