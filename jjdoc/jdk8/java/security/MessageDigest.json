{"name":"MessageDigest","comment":"This MessageDigest class provides applications the functionality of a\n message digest algorithm, such as SHA-1 or SHA-256.\n Message digests are secure one-way hash functions that take arbitrary-sized\n data and output a fixed-length hash value.\n\n \u003cp\u003eA MessageDigest object starts out initialized. The data is\n processed through it using the {@link #update(byte) update}\n methods. At any point {@link #reset() reset} can be called\n to reset the digest. Once all the data to be updated has been\n updated, one of the {@link #digest() digest} methods should\n be called to complete the hash computation.\n\n \u003cp\u003eThe {@code digest} method can be called once for a given number\n of updates. After {@code digest} has been called, the MessageDigest\n object is reset to its initialized state.\n\n \u003cp\u003eImplementations are free to implement the Cloneable interface.\n Client applications can test cloneability by attempting cloning\n and catching the CloneNotSupportedException:\n\n \u003cpre\u003e{@code\n MessageDigest md \u003d MessageDigest.getInstance(\"SHA-256\");\n\n try {\n     md.update(toChapter1);\n     MessageDigest tc1 \u003d md.clone();\n     byte[] toChapter1Digest \u003d tc1.digest();\n     md.update(toChapter2);\n     ...etc.\n } catch (CloneNotSupportedException cnse) {\n     throw new DigestException(\"couldn\u0027t make digest of partial content\");\n }\n }\u003c/pre\u003e\n\n \u003cp\u003eNote that if a given implementation is not cloneable, it is\n still possible to compute intermediate digests by instantiating\n several instances, if the number of digests is known in advance.\n\n \u003cp\u003eNote that this class is abstract and extends from\n {@code MessageDigestSpi} for historical reasons.\n Application developers should only take notice of the methods defined in\n this {@code MessageDigest} class; all the methods in\n the superclass are intended for cryptographic service providers who wish to\n supply their own implementations of message digest algorithms.\n\n \u003cp\u003e Every implementation of the Java platform is required to support\n the following standard {@code MessageDigest} algorithms:\n \u003cul\u003e\n \u003cli\u003e{@code MD5}\u003c/li\u003e\n \u003cli\u003e{@code SHA-1}\u003c/li\u003e\n \u003cli\u003e{@code SHA-256}\u003c/li\u003e\n \u003c/ul\u003e\n These algorithms are described in the \u003ca href\u003d\n \"{@docRoot}/../technotes/guides/security/StandardNames.html#MessageDigest\"\u003e\n MessageDigest section\u003c/a\u003e of the\n Java Cryptography Architecture Standard Algorithm Name Documentation.\n Consult the release documentation for your implementation to see if any\n other algorithms are supported.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"MessageDigest","qualifiedName":"java.security.MessageDigest","dimension":"","elementType":{},"package":"java.security","superclass":"java.security.MessageDigestSpi","interfaces":[],"isAbstract":true,"isStatic":false,"innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"getInstance","comment":"Returns a MessageDigest object that implements the specified digest\n algorithm.\n\n \u003cp\u003e This method traverses the list of registered security Providers,\n starting with the most preferred Provider.\n A new MessageDigest object encapsulating the\n MessageDigestSpi implementation from the first\n Provider that supports the specified algorithm is returned.\n\n \u003cp\u003e Note that the list of registered providers may be retrieved via\n the {@link Security#getProviders() Security.getProviders()} method.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":false,"simpleName":"MessageDigest","qualifiedName":"java.security.MessageDigest","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[{"name":"algorithm","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getInstance","comment":"Returns a MessageDigest object that implements the specified digest\n algorithm.\n\n \u003cp\u003e A new MessageDigest object encapsulating the\n MessageDigestSpi implementation from the specified provider\n is returned.  The specified provider must be registered\n in the security provider list.\n\n \u003cp\u003e Note that the list of registered providers may be retrieved via\n the {@link Security#getProviders() Security.getProviders()} method.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String, java.lang.String)","flatSignature":"(String, String)","returnType":{"isPrimitive":false,"simpleName":"MessageDigest","qualifiedName":"java.security.MessageDigest","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[{"name":"algorithm","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"provider","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getInstance","comment":"Returns a MessageDigest object that implements the specified digest\n algorithm.\n\n \u003cp\u003e A new MessageDigest object encapsulating the\n MessageDigestSpi implementation from the specified Provider\n object is returned.  Note that the specified Provider object\n does not have to be registered in the provider list.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String, java.security.Provider)","flatSignature":"(String, Provider)","returnType":{"isPrimitive":false,"simpleName":"MessageDigest","qualifiedName":"java.security.MessageDigest","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[{"name":"algorithm","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"provider","type":{"isPrimitive":false,"simpleName":"Provider","qualifiedName":"java.security.Provider","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getProvider","comment":"Returns the provider of this message digest object.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Provider","qualifiedName":"java.security.Provider","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"update","comment":"Updates the digest using the specified byte.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(byte)","flatSignature":"(byte)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"input","type":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"update","comment":"Updates the digest using the specified array of bytes, starting\n at the specified offset.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(byte[], int, int)","flatSignature":"(byte[], int, int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"input","type":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"[]","elementType":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"","elementType":{}}}},{"name":"offset","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"len","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"update","comment":"Updates the digest using the specified array of bytes.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(byte[])","flatSignature":"(byte[])","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"input","type":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"[]","elementType":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"","elementType":{}}}}],"typeParameters":[]},{"name":"update","comment":"Update the digest using the specified ByteBuffer. The digest is\n updated using the {@code input.remaining()} bytes starting\n at {@code input.position()}.\n Upon return, the buffer\u0027s position will be equal to its limit;\n its limit will not have changed.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.nio.ByteBuffer)","flatSignature":"(ByteBuffer)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"input","type":{"isPrimitive":false,"simpleName":"ByteBuffer","qualifiedName":"java.nio.ByteBuffer","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"digest","comment":"Completes the hash computation by performing final operations\n such as padding. The digest is reset after this call is made.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"[]","elementType":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"","elementType":{}}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"digest","comment":"Completes the hash computation by performing final operations\n such as padding. The digest is reset after this call is made.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(byte[], int, int)","flatSignature":"(byte[], int, int)","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"buf","type":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"[]","elementType":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"","elementType":{}}}},{"name":"offset","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"len","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"digest","comment":"Performs a final update on the digest using the specified array\n of bytes, then completes the digest computation. That is, this\n method first calls {@link #update(byte[]) update(input)},\n passing the \u003ci\u003einput\u003c/i\u003e array to the {@code update} method,\n then calls {@link #digest() digest()}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(byte[])","flatSignature":"(byte[])","returnType":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"[]","elementType":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"","elementType":{}}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"input","type":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"[]","elementType":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"","elementType":{}}}}],"typeParameters":[]},{"name":"toString","comment":"Returns a string representation of this message digest object.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"isEqual","comment":"Compares two digests for equality. Does a simple byte compare.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(byte[], byte[])","flatSignature":"(byte[], byte[])","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[{"name":"digesta","type":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"[]","elementType":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"","elementType":{}}}},{"name":"digestb","type":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"[]","elementType":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"","elementType":{}}}}],"typeParameters":[]},{"name":"reset","comment":"Resets the digest for further use.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getAlgorithm","comment":"Returns a string that identifies the algorithm, independent of\n implementation details. The name should be a standard\n Java Security name (such as \"SHA-256\").\n See the MessageDigest section in the \u003ca href\u003d\n \"{@docRoot}/../technotes/guides/security/StandardNames.html#MessageDigest\"\u003e\n Java Cryptography Architecture Standard Algorithm Name Documentation\u003c/a\u003e\n for information about standard algorithm names.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getDigestLength","comment":"Returns the length of the digest in bytes, or 0 if this operation is\n not supported by the provider and the implementation is not cloneable.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"clone","comment":"Returns a clone if the implementation is cloneable.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Object","qualifiedName":"java.lang.Object","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}