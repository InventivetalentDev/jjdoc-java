{"name":"KeyStore.PasswordProtection","comment":"A password-based implementation of {@code ProtectionParameter}.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"PasswordProtection","qualifiedName":"java.security.KeyStore.PasswordProtection","dimension":"","elementType":{},"package":"java.security","superclass":"java.lang.Object","interfaces":["java.security.KeyStore.ProtectionParameter","javax.security.auth.Destroyable"],"isAbstract":false,"isStatic":true,"since":"1.5","innerClasses":[],"isInnerClass":true,"constructors":[{"name":"PasswordProtection","comment":"Creates a password parameter.\n\n \u003cp\u003e The specified {@code password} is cloned before it is stored\n in the new {@code PasswordProtection} object.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(char[])","flatSignature":"(char[])","parameters":[{"name":"password","type":{"isPrimitive":true,"simpleName":"char","qualifiedName":"char","dimension":"[]","elementType":{"isPrimitive":true,"simpleName":"char","qualifiedName":"char","dimension":"","elementType":{}}}}],"typeParameters":[]},{"name":"PasswordProtection","comment":"Creates a password parameter and specifies the protection algorithm\n and associated parameters to use when encrypting a keystore entry.\n \u003cp\u003e\n The specified {@code password} is cloned before it is stored in the\n new {@code PasswordProtection} object.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(char[], java.lang.String, java.security.spec.AlgorithmParameterSpec)","flatSignature":"(char[], String, AlgorithmParameterSpec)","parameters":[{"name":"password","type":{"isPrimitive":true,"simpleName":"char","qualifiedName":"char","dimension":"[]","elementType":{"isPrimitive":true,"simpleName":"char","qualifiedName":"char","dimension":"","elementType":{}}}},{"name":"protectionAlgorithm","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"protectionParameters","type":{"isPrimitive":false,"simpleName":"AlgorithmParameterSpec","qualifiedName":"java.security.spec.AlgorithmParameterSpec","dimension":"","elementType":{}}}],"typeParameters":[]}],"fields":[],"methods":[{"name":"getProtectionAlgorithm","comment":"Gets the name of the protection algorithm.\n If none was set then the keystore provider will use its default\n protection algorithm. The name of the default protection algorithm\n for a given keystore type is set using the\n {@code \u0027keystore.\u003ctype\u003e.keyProtectionAlgorithm\u0027} security property.\n For example, the\n {@code keystore.PKCS12.keyProtectionAlgorithm} property stores the\n name of the default key protection algorithm used for PKCS12\n keystores. If the security property is not set, an\n implementation-specific algorithm will be used.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getProtectionParameters","comment":"Gets the parameters supplied for the protection algorithm.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"AlgorithmParameterSpec","qualifiedName":"java.security.spec.AlgorithmParameterSpec","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getPassword","comment":"Gets the password.\n\n \u003cp\u003eNote that this method returns a reference to the password.\n If a clone of the array is created it is the caller\u0027s\n responsibility to zero out the password information\n after it is no longer needed.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"char","qualifiedName":"char","dimension":"[]","elementType":{"isPrimitive":true,"simpleName":"char","qualifiedName":"char","dimension":"","elementType":{}}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"destroy","comment":"Clears the password.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"isDestroyed","comment":"Determines if password has been cleared.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}