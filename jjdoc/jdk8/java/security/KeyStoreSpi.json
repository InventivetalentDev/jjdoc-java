{"name":"KeyStoreSpi","comment":"This class defines the \u003ci\u003eService Provider Interface\u003c/i\u003e (\u003cb\u003eSPI\u003c/b\u003e)\n for the {@code KeyStore} class.\n All the abstract methods in this class must be implemented by each\n cryptographic service provider who wishes to supply the implementation\n of a keystore for a particular keystore type.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"KeyStoreSpi","qualifiedName":"java.security.KeyStoreSpi","dimension":"","elementType":{},"package":"java.security","superclass":"java.lang.Object","interfaces":[],"isAbstract":true,"isStatic":false,"since":"1.2","innerClasses":[],"isInnerClass":false,"constructors":[{"name":"KeyStoreSpi","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","parameters":[],"typeParameters":[]}],"fields":[],"methods":[{"name":"engineGetKey","comment":"Returns the key associated with the given alias, using the given\n password to recover it.  The key must have been associated with\n the alias by a call to {@code setKeyEntry},\n or by a call to {@code setEntry} with a\n {@code PrivateKeyEntry} or {@code SecretKeyEntry}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String, char[])","flatSignature":"(String, char[])","returnType":{"isPrimitive":false,"simpleName":"Key","qualifiedName":"java.security.Key","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"alias","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"password","type":{"isPrimitive":true,"simpleName":"char","qualifiedName":"char","dimension":"[]","elementType":{"isPrimitive":true,"simpleName":"char","qualifiedName":"char","dimension":"","elementType":{}}}}],"typeParameters":[]},{"name":"engineGetCertificateChain","comment":"Returns the certificate chain associated with the given alias.\n The certificate chain must have been associated with the alias\n by a call to {@code setKeyEntry},\n or by a call to {@code setEntry} with a\n {@code PrivateKeyEntry}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":false,"simpleName":"Certificate","qualifiedName":"java.security.cert.Certificate","dimension":"[]","elementType":{"isPrimitive":false,"simpleName":"Certificate","qualifiedName":"java.security.cert.Certificate","dimension":"","elementType":{}}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"alias","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"engineGetCertificate","comment":"Returns the certificate associated with the given alias.\n\n \u003cp\u003e If the given alias name identifies an entry\n created by a call to {@code setCertificateEntry},\n or created by a call to {@code setEntry} with a\n {@code TrustedCertificateEntry},\n then the trusted certificate contained in that entry is returned.\n\n \u003cp\u003e If the given alias name identifies an entry\n created by a call to {@code setKeyEntry},\n or created by a call to {@code setEntry} with a\n {@code PrivateKeyEntry},\n then the first element of the certificate chain in that entry\n (if a chain exists) is returned.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":false,"simpleName":"Certificate","qualifiedName":"java.security.cert.Certificate","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"alias","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"engineGetCreationDate","comment":"Returns the creation date of the entry identified by the given alias.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":false,"simpleName":"Date","qualifiedName":"java.util.Date","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"alias","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"engineSetKeyEntry","comment":"Assigns the given key to the given alias, protecting it with the given\n password.\n\n \u003cp\u003eIf the given key is of type {@code java.security.PrivateKey},\n it must be accompanied by a certificate chain certifying the\n corresponding public key.\n\n \u003cp\u003eIf the given alias already exists, the keystore information\n associated with it is overridden by the given key (and possibly\n certificate chain).","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String, java.security.Key, char[], java.security.cert.Certificate[])","flatSignature":"(String, Key, char[], Certificate[])","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"alias","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"key","type":{"isPrimitive":false,"simpleName":"Key","qualifiedName":"java.security.Key","dimension":"","elementType":{}}},{"name":"password","type":{"isPrimitive":true,"simpleName":"char","qualifiedName":"char","dimension":"[]","elementType":{"isPrimitive":true,"simpleName":"char","qualifiedName":"char","dimension":"","elementType":{}}}},{"name":"chain","type":{"isPrimitive":false,"simpleName":"Certificate","qualifiedName":"java.security.cert.Certificate","dimension":"[]","elementType":{"isPrimitive":false,"simpleName":"Certificate","qualifiedName":"java.security.cert.Certificate","dimension":"","elementType":{}}}}],"typeParameters":[]},{"name":"engineSetKeyEntry","comment":"Assigns the given key (that has already been protected) to the given\n alias.\n\n \u003cp\u003eIf the protected key is of type\n {@code java.security.PrivateKey},\n it must be accompanied by a certificate chain certifying the\n corresponding public key.\n\n \u003cp\u003eIf the given alias already exists, the keystore information\n associated with it is overridden by the given key (and possibly\n certificate chain).","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String, byte[], java.security.cert.Certificate[])","flatSignature":"(String, byte[], Certificate[])","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"alias","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"key","type":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"[]","elementType":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"","elementType":{}}}},{"name":"chain","type":{"isPrimitive":false,"simpleName":"Certificate","qualifiedName":"java.security.cert.Certificate","dimension":"[]","elementType":{"isPrimitive":false,"simpleName":"Certificate","qualifiedName":"java.security.cert.Certificate","dimension":"","elementType":{}}}}],"typeParameters":[]},{"name":"engineSetCertificateEntry","comment":"Assigns the given certificate to the given alias.\n\n \u003cp\u003e If the given alias identifies an existing entry\n created by a call to {@code setCertificateEntry},\n or created by a call to {@code setEntry} with a\n {@code TrustedCertificateEntry},\n the trusted certificate in the existing entry\n is overridden by the given certificate.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String, java.security.cert.Certificate)","flatSignature":"(String, Certificate)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"alias","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"cert","type":{"isPrimitive":false,"simpleName":"Certificate","qualifiedName":"java.security.cert.Certificate","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"engineDeleteEntry","comment":"Deletes the entry identified by the given alias from this keystore.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"alias","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"engineAliases","comment":"Lists all the alias names of this keystore.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Enumeration","qualifiedName":"java.util.Enumeration","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"engineContainsAlias","comment":"Checks if the given alias exists in this keystore.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"alias","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"engineSize","comment":"Retrieves the number of entries in this keystore.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"engineIsKeyEntry","comment":"Returns true if the entry identified by the given alias\n was created by a call to {@code setKeyEntry},\n or created by a call to {@code setEntry} with a\n {@code PrivateKeyEntry} or a {@code SecretKeyEntry}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"alias","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"engineIsCertificateEntry","comment":"Returns true if the entry identified by the given alias\n was created by a call to {@code setCertificateEntry},\n or created by a call to {@code setEntry} with a\n {@code TrustedCertificateEntry}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"alias","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"engineGetCertificateAlias","comment":"Returns the (alias) name of the first keystore entry whose certificate\n matches the given certificate.\n\n \u003cp\u003eThis method attempts to match the given certificate with each\n keystore entry. If the entry being considered was\n created by a call to {@code setCertificateEntry},\n or created by a call to {@code setEntry} with a\n {@code TrustedCertificateEntry},\n then the given certificate is compared to that entry\u0027s certificate.\n\n \u003cp\u003e If the entry being considered was\n created by a call to {@code setKeyEntry},\n or created by a call to {@code setEntry} with a\n {@code PrivateKeyEntry},\n then the given certificate is compared to the first\n element of that entry\u0027s certificate chain.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.security.cert.Certificate)","flatSignature":"(Certificate)","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"cert","type":{"isPrimitive":false,"simpleName":"Certificate","qualifiedName":"java.security.cert.Certificate","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"engineStore","comment":"Stores this keystore to the given output stream, and protects its\n integrity with the given password.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.io.OutputStream, char[])","flatSignature":"(OutputStream, char[])","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"stream","type":{"isPrimitive":false,"simpleName":"OutputStream","qualifiedName":"java.io.OutputStream","dimension":"","elementType":{}}},{"name":"password","type":{"isPrimitive":true,"simpleName":"char","qualifiedName":"char","dimension":"[]","elementType":{"isPrimitive":true,"simpleName":"char","qualifiedName":"char","dimension":"","elementType":{}}}}],"typeParameters":[]},{"name":"engineStore","comment":"Stores this keystore using the given\n {@code KeyStore.LoadStoreParmeter}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.security.KeyStore.LoadStoreParameter)","flatSignature":"(KeyStore.LoadStoreParameter)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"param","type":{"isPrimitive":false,"simpleName":"LoadStoreParameter","qualifiedName":"java.security.KeyStore.LoadStoreParameter","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"engineLoad","comment":"Loads the keystore from the given input stream.\n\n \u003cp\u003eA password may be given to unlock the keystore\n (e.g. the keystore resides on a hardware token device),\n or to check the integrity of the keystore data.\n If a password is not given for integrity checking,\n then integrity checking is not performed.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.io.InputStream, char[])","flatSignature":"(InputStream, char[])","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"stream","type":{"isPrimitive":false,"simpleName":"InputStream","qualifiedName":"java.io.InputStream","dimension":"","elementType":{}}},{"name":"password","type":{"isPrimitive":true,"simpleName":"char","qualifiedName":"char","dimension":"[]","elementType":{"isPrimitive":true,"simpleName":"char","qualifiedName":"char","dimension":"","elementType":{}}}}],"typeParameters":[]},{"name":"engineLoad","comment":"Loads the keystore using the given\n {@code KeyStore.LoadStoreParameter}.\n\n \u003cp\u003e Note that if this KeyStore has already been loaded, it is\n reinitialized and loaded again from the given parameter.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.security.KeyStore.LoadStoreParameter)","flatSignature":"(KeyStore.LoadStoreParameter)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"param","type":{"isPrimitive":false,"simpleName":"LoadStoreParameter","qualifiedName":"java.security.KeyStore.LoadStoreParameter","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"engineGetEntry","comment":"Gets a {@code KeyStore.Entry} for the specified alias\n with the specified protection parameter.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String, java.security.KeyStore.ProtectionParameter)","flatSignature":"(String, KeyStore.ProtectionParameter)","returnType":{"isPrimitive":false,"simpleName":"Entry","qualifiedName":"java.security.KeyStore.Entry","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"alias","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"protParam","type":{"isPrimitive":false,"simpleName":"ProtectionParameter","qualifiedName":"java.security.KeyStore.ProtectionParameter","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"engineSetEntry","comment":"Saves a {@code KeyStore.Entry} under the specified alias.\n The specified protection parameter is used to protect the\n {@code Entry}.\n\n \u003cp\u003e If an entry already exists for the specified alias,\n it is overridden.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String, java.security.KeyStore.Entry, java.security.KeyStore.ProtectionParameter)","flatSignature":"(String, KeyStore.Entry, KeyStore.ProtectionParameter)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"alias","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"entry","type":{"isPrimitive":false,"simpleName":"Entry","qualifiedName":"java.security.KeyStore.Entry","dimension":"","elementType":{}}},{"name":"protParam","type":{"isPrimitive":false,"simpleName":"ProtectionParameter","qualifiedName":"java.security.KeyStore.ProtectionParameter","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"engineEntryInstanceOf","comment":"Determines if the keystore {@code Entry} for the specified\n {@code alias} is an instance or subclass of the specified\n {@code entryClass}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String, java.lang.Class\u003c? extends java.security.KeyStore.Entry\u003e)","flatSignature":"(String, Class\u003c? extends KeyStore.Entry\u003e)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"alias","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"entryClass","type":{"isPrimitive":false,"simpleName":"Class","qualifiedName":"java.lang.Class","dimension":"","elementType":{}}}],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}