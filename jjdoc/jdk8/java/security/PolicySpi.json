{"name":"PolicySpi","comment":"This class defines the \u003ci\u003eService Provider Interface\u003c/i\u003e (\u003cb\u003eSPI\u003c/b\u003e)\n for the {@code Policy} class.\n All the abstract methods in this class must be implemented by each\n service provider who wishes to supply a Policy implementation.\n\n \u003cp\u003e Subclass implementations of this abstract class must provide\n a public constructor that takes a {@code Policy.Parameters}\n object as an input parameter.  This constructor also must throw\n an IllegalArgumentException if it does not understand the\n {@code Policy.Parameters} input.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"PolicySpi","qualifiedName":"java.security.PolicySpi","dimension":"","elementType":{},"package":"java.security","superclass":"java.lang.Object","interfaces":[],"isAbstract":true,"isStatic":false,"since":"1.6","innerClasses":[],"isInnerClass":false,"constructors":[{"name":"PolicySpi","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","parameters":[],"typeParameters":[]}],"fields":[],"methods":[],"typeParameters":[],"enumConstants":[]}