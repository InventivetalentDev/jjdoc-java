{"name":"KeyFactory","comment":"Key factories are used to convert \u003cI\u003ekeys\u003c/I\u003e (opaque\n cryptographic keys of type {@code Key}) into \u003cI\u003ekey specifications\u003c/I\u003e\n (transparent representations of the underlying key material), and vice\n versa.\n\n \u003cP\u003e Key factories are bi-directional. That is, they allow you to build an\n opaque key object from a given key specification (key material), or to\n retrieve the underlying key material of a key object in a suitable format.\n\n \u003cP\u003e Multiple compatible key specifications may exist for the same key.\n For example, a DSA public key may be specified using\n {@code DSAPublicKeySpec} or\n {@code X509EncodedKeySpec}. A key factory can be used to translate\n between compatible key specifications.\n\n \u003cP\u003e The following is an example of how to use a key factory in order to\n instantiate a DSA public key from its encoding.\n Assume Alice has received a digital signature from Bob.\n Bob also sent her his public key (in encoded format) to verify\n his signature. Alice then performs the following actions:\n\n \u003cpre\u003e\n X509EncodedKeySpec bobPubKeySpec \u003d new X509EncodedKeySpec(bobEncodedPubKey);\n KeyFactory keyFactory \u003d KeyFactory.getInstance(\"DSA\");\n PublicKey bobPubKey \u003d keyFactory.generatePublic(bobPubKeySpec);\n Signature sig \u003d Signature.getInstance(\"DSA\");\n sig.initVerify(bobPubKey);\n sig.update(data);\n sig.verify(signature);\n \u003c/pre\u003e\n\n \u003cp\u003e Every implementation of the Java platform is required to support the\n following standard {@code KeyFactory} algorithms:\n \u003cul\u003e\n \u003cli\u003e{@code DiffieHellman}\u003c/li\u003e\n \u003cli\u003e{@code DSA}\u003c/li\u003e\n \u003cli\u003e{@code RSA}\u003c/li\u003e\n \u003c/ul\u003e\n These algorithms are described in the \u003ca href\u003d\n \"{@docRoot}/../technotes/guides/security/StandardNames.html#KeyFactory\"\u003e\n KeyFactory section\u003c/a\u003e of the\n Java Cryptography Architecture Standard Algorithm Name Documentation.\n Consult the release documentation for your implementation to see if any\n other algorithms are supported.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"KeyFactory","qualifiedName":"java.security.KeyFactory","dimension":"","elementType":{},"package":"java.security","superclass":"java.lang.Object","interfaces":[],"isAbstract":false,"isStatic":false,"since":"1.2","innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"getInstance","comment":"Returns a KeyFactory object that converts\n public/private keys of the specified algorithm.\n\n \u003cp\u003e This method traverses the list of registered security Providers,\n starting with the most preferred Provider.\n A new KeyFactory object encapsulating the\n KeyFactorySpi implementation from the first\n Provider that supports the specified algorithm is returned.\n\n \u003cp\u003e Note that the list of registered providers may be retrieved via\n the {@link Security#getProviders() Security.getProviders()} method.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":false,"simpleName":"KeyFactory","qualifiedName":"java.security.KeyFactory","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[{"name":"algorithm","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getInstance","comment":"Returns a KeyFactory object that converts\n public/private keys of the specified algorithm.\n\n \u003cp\u003e A new KeyFactory object encapsulating the\n KeyFactorySpi implementation from the specified provider\n is returned.  The specified provider must be registered\n in the security provider list.\n\n \u003cp\u003e Note that the list of registered providers may be retrieved via\n the {@link Security#getProviders() Security.getProviders()} method.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String, java.lang.String)","flatSignature":"(String, String)","returnType":{"isPrimitive":false,"simpleName":"KeyFactory","qualifiedName":"java.security.KeyFactory","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[{"name":"algorithm","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"provider","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getInstance","comment":"Returns a KeyFactory object that converts\n public/private keys of the specified algorithm.\n\n \u003cp\u003e A new KeyFactory object encapsulating the\n KeyFactorySpi implementation from the specified Provider\n object is returned.  Note that the specified Provider object\n does not have to be registered in the provider list.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String, java.security.Provider)","flatSignature":"(String, Provider)","returnType":{"isPrimitive":false,"simpleName":"KeyFactory","qualifiedName":"java.security.KeyFactory","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[{"name":"algorithm","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"provider","type":{"isPrimitive":false,"simpleName":"Provider","qualifiedName":"java.security.Provider","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getProvider","comment":"Returns the provider of this key factory object.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Provider","qualifiedName":"java.security.Provider","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getAlgorithm","comment":"Gets the name of the algorithm\n associated with this {@code KeyFactory}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"generatePublic","comment":"Generates a public key object from the provided key specification\n (key material).","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.security.spec.KeySpec)","flatSignature":"(KeySpec)","returnType":{"isPrimitive":false,"simpleName":"PublicKey","qualifiedName":"java.security.PublicKey","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"keySpec","type":{"isPrimitive":false,"simpleName":"KeySpec","qualifiedName":"java.security.spec.KeySpec","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"generatePrivate","comment":"Generates a private key object from the provided key specification\n (key material).","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.security.spec.KeySpec)","flatSignature":"(KeySpec)","returnType":{"isPrimitive":false,"simpleName":"PrivateKey","qualifiedName":"java.security.PrivateKey","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"keySpec","type":{"isPrimitive":false,"simpleName":"KeySpec","qualifiedName":"java.security.spec.KeySpec","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getKeySpec","comment":"Returns a specification (key material) of the given key object.\n {@code keySpec} identifies the specification class in which\n the key material should be returned. It could, for example, be\n {@code DSAPublicKeySpec.class}, to indicate that the\n key material should be returned in an instance of the\n {@code DSAPublicKeySpec} class.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.security.Key, java.lang.Class\u003cT\u003e)","flatSignature":"(Key, Class\u003cT\u003e)","returnType":{"isPrimitive":false,"simpleName":"T","qualifiedName":"T","dimension":"","elementType":{},"typeVariable":{"name":"T","bounds":["java.security.spec.KeySpec"]}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"key","type":{"isPrimitive":false,"simpleName":"Key","qualifiedName":"java.security.Key","dimension":"","elementType":{}}},{"name":"keySpec","type":{"isPrimitive":false,"simpleName":"Class","qualifiedName":"java.lang.Class","dimension":"","elementType":{}}}],"typeParameters":[{"name":"T","bounds":["java.security.spec.KeySpec"]}]},{"name":"translateKey","comment":"Translates a key object, whose provider may be unknown or potentially\n untrusted, into a corresponding key object of this key factory.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.security.Key)","flatSignature":"(Key)","returnType":{"isPrimitive":false,"simpleName":"Key","qualifiedName":"java.security.Key","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"key","type":{"isPrimitive":false,"simpleName":"Key","qualifiedName":"java.security.Key","dimension":"","elementType":{}}}],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}