{"name":"PipedOutputStream","comment":"A piped output stream can be connected to a piped input stream\n to create a communications pipe. The piped output stream is the\n sending end of the pipe. Typically, data is written to a\n \u003ccode\u003ePipedOutputStream\u003c/code\u003e object by one thread and data is\n read from the connected \u003ccode\u003ePipedInputStream\u003c/code\u003e by some\n other thread. Attempting to use both objects from a single thread\n is not recommended as it may deadlock the thread.\n The pipe is said to be \u003ca name\u003dBROKEN\u003e \u003ci\u003ebroken\u003c/i\u003e \u003c/a\u003e if a\n thread that was reading data bytes from the connected piped input\n stream is no longer alive.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"PipedOutputStream","qualifiedName":"java.io.PipedOutputStream","dimension":"","elementType":{},"package":"java.io","superclass":"java.io.OutputStream","interfaces":[],"isAbstract":false,"isStatic":false,"since":"JDK1.0","innerClasses":[],"isInnerClass":false,"constructors":[{"name":"PipedOutputStream","comment":"Creates a piped output stream connected to the specified piped\n input stream. Data bytes written to this stream will then be\n available as input from \u003ccode\u003esnk\u003c/code\u003e.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.io.PipedInputStream)","flatSignature":"(PipedInputStream)","parameters":[{"name":"snk","type":{"isPrimitive":false,"simpleName":"PipedInputStream","qualifiedName":"java.io.PipedInputStream","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"PipedOutputStream","comment":"Creates a piped output stream that is not yet connected to a\n piped input stream. It must be connected to a piped input stream,\n either by the receiver or the sender, before being used.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","parameters":[],"typeParameters":[]}],"fields":[],"methods":[{"name":"connect","comment":"Connects this piped output stream to a receiver. If this object\n is already connected to some other piped input stream, an\n \u003ccode\u003eIOException\u003c/code\u003e is thrown.\n \u003cp\u003e\n If \u003ccode\u003esnk\u003c/code\u003e is an unconnected piped input stream and\n \u003ccode\u003esrc\u003c/code\u003e is an unconnected piped output stream, they may\n be connected by either the call:\n \u003cblockquote\u003e\u003cpre\u003e\n src.connect(snk)\u003c/pre\u003e\u003c/blockquote\u003e\n or the call:\n \u003cblockquote\u003e\u003cpre\u003e\n snk.connect(src)\u003c/pre\u003e\u003c/blockquote\u003e\n The two calls have the same effect.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.io.PipedInputStream)","flatSignature":"(PipedInputStream)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"snk","type":{"isPrimitive":false,"simpleName":"PipedInputStream","qualifiedName":"java.io.PipedInputStream","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"write","comment":"Writes the specified \u003ccode\u003ebyte\u003c/code\u003e to the piped output stream.\n \u003cp\u003e\n Implements the \u003ccode\u003ewrite\u003c/code\u003e method of \u003ccode\u003eOutputStream\u003c/code\u003e.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int)","flatSignature":"(int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"b","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"write","comment":"Writes \u003ccode\u003elen\u003c/code\u003e bytes from the specified byte array\n starting at offset \u003ccode\u003eoff\u003c/code\u003e to this piped output stream.\n This method blocks until all the bytes are written to the output\n stream.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(byte[], int, int)","flatSignature":"(byte[], int, int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"b","type":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"[]","elementType":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"","elementType":{}}}},{"name":"off","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"len","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"flush","comment":"Flushes this output stream and forces any buffered output bytes\n to be written out.\n This will notify any readers that bytes are waiting in the pipe.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"close","comment":"Closes this piped output stream and releases any system resources\n associated with this stream. This stream may no longer be used for\n writing bytes.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}