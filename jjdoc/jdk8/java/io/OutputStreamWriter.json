{"name":"OutputStreamWriter","comment":"An OutputStreamWriter is a bridge from character streams to byte streams:\n Characters written to it are encoded into bytes using a specified {@link\n java.nio.charset.Charset charset}.  The charset that it uses\n may be specified by name or may be given explicitly, or the platform\u0027s\n default charset may be accepted.\n\n \u003cp\u003e Each invocation of a write() method causes the encoding converter to be\n invoked on the given character(s).  The resulting bytes are accumulated in a\n buffer before being written to the underlying output stream.  The size of\n this buffer may be specified, but by default it is large enough for most\n purposes.  Note that the characters passed to the write() methods are not\n buffered.\n\n \u003cp\u003e For top efficiency, consider wrapping an OutputStreamWriter within a\n BufferedWriter so as to avoid frequent converter invocations.  For example:\n\n \u003cpre\u003e\n Writer out\n   \u003d new BufferedWriter(new OutputStreamWriter(System.out));\n \u003c/pre\u003e\n\n \u003cp\u003e A \u003ci\u003esurrogate pair\u003c/i\u003e is a character represented by a sequence of two\n \u003ctt\u003echar\u003c/tt\u003e values: A \u003ci\u003ehigh\u003c/i\u003e surrogate in the range \u0027\u0026#92;uD800\u0027 to\n \u0027\u0026#92;uDBFF\u0027 followed by a \u003ci\u003elow\u003c/i\u003e surrogate in the range \u0027\u0026#92;uDC00\u0027 to\n \u0027\u0026#92;uDFFF\u0027.\n\n \u003cp\u003e A \u003ci\u003emalformed surrogate element\u003c/i\u003e is a high surrogate that is not\n followed by a low surrogate or a low surrogate that is not preceded by a\n high surrogate.\n\n \u003cp\u003e This class always replaces malformed surrogate elements and unmappable\n character sequences with the charset\u0027s default \u003ci\u003esubstitution sequence\u003c/i\u003e.\n The {@linkplain java.nio.charset.CharsetEncoder} class should be used when more\n control over the encoding process is required.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"OutputStreamWriter","qualifiedName":"java.io.OutputStreamWriter","dimension":"","elementType":{},"package":"java.io","superclass":"java.io.Writer","interfaces":[],"isAbstract":false,"isStatic":false,"since":"JDK1.1","innerClasses":[],"isInnerClass":false,"constructors":[{"name":"OutputStreamWriter","comment":"Creates an OutputStreamWriter that uses the named charset.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.io.OutputStream, java.lang.String)","flatSignature":"(OutputStream, String)","parameters":[{"name":"out","type":{"isPrimitive":false,"simpleName":"OutputStream","qualifiedName":"java.io.OutputStream","dimension":"","elementType":{}}},{"name":"charsetName","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"OutputStreamWriter","comment":"Creates an OutputStreamWriter that uses the default character encoding.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.io.OutputStream)","flatSignature":"(OutputStream)","parameters":[{"name":"out","type":{"isPrimitive":false,"simpleName":"OutputStream","qualifiedName":"java.io.OutputStream","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"OutputStreamWriter","comment":"Creates an OutputStreamWriter that uses the given charset.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.io.OutputStream, java.nio.charset.Charset)","flatSignature":"(OutputStream, Charset)","parameters":[{"name":"out","type":{"isPrimitive":false,"simpleName":"OutputStream","qualifiedName":"java.io.OutputStream","dimension":"","elementType":{}}},{"name":"cs","type":{"isPrimitive":false,"simpleName":"Charset","qualifiedName":"java.nio.charset.Charset","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"OutputStreamWriter","comment":"Creates an OutputStreamWriter that uses the given charset encoder.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.io.OutputStream, java.nio.charset.CharsetEncoder)","flatSignature":"(OutputStream, CharsetEncoder)","parameters":[{"name":"out","type":{"isPrimitive":false,"simpleName":"OutputStream","qualifiedName":"java.io.OutputStream","dimension":"","elementType":{}}},{"name":"enc","type":{"isPrimitive":false,"simpleName":"CharsetEncoder","qualifiedName":"java.nio.charset.CharsetEncoder","dimension":"","elementType":{}}}],"typeParameters":[]}],"fields":[],"methods":[{"name":"getEncoding","comment":"Returns the name of the character encoding being used by this stream.\n\n \u003cp\u003e If the encoding has an historical name then that name is returned;\n otherwise the encoding\u0027s canonical name is returned.\n\n \u003cp\u003e If this instance was created with the {@link\n #OutputStreamWriter(OutputStream, String)} constructor then the returned\n name, being unique for the encoding, may differ from the name passed to\n the constructor.  This method may return \u003ctt\u003enull\u003c/tt\u003e if the stream has\n been closed. \u003c/p\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"write","comment":"Writes a single character.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int)","flatSignature":"(int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"c","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"write","comment":"Writes a portion of an array of characters.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(char[], int, int)","flatSignature":"(char[], int, int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"cbuf","type":{"isPrimitive":true,"simpleName":"char","qualifiedName":"char","dimension":"[]","elementType":{"isPrimitive":true,"simpleName":"char","qualifiedName":"char","dimension":"","elementType":{}}}},{"name":"off","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"len","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"write","comment":"Writes a portion of a string.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String, int, int)","flatSignature":"(String, int, int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"str","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"off","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"len","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"flush","comment":"Flushes the stream.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"close","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"subClasses":["java.io.FileWriter"],"enumConstants":[]}