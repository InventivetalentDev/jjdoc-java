{"name":"DataOutputStream","comment":"A data output stream lets an application write primitive Java data\n types to an output stream in a portable way. An application can\n then use a data input stream to read the data back in.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"DataOutputStream","qualifiedName":"java.io.DataOutputStream","dimension":"","elementType":{},"package":"java.io","superclass":"java.io.FilterOutputStream","interfaces":["java.io.DataOutput"],"isAbstract":false,"isStatic":false,"since":"JDK1.0","innerClasses":[],"isInnerClass":false,"constructors":[{"name":"DataOutputStream","comment":"Creates a new data output stream to write data to the specified\n underlying output stream. The counter \u003ccode\u003ewritten\u003c/code\u003e is\n set to zero.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.io.OutputStream)","flatSignature":"(OutputStream)","parameters":[{"name":"out","type":{"isPrimitive":false,"simpleName":"OutputStream","qualifiedName":"java.io.OutputStream","dimension":"","elementType":{}}}],"typeParameters":[]}],"fields":[],"methods":[{"name":"write","comment":"Writes the specified byte (the low eight bits of the argument\n \u003ccode\u003eb\u003c/code\u003e) to the underlying output stream. If no exception\n is thrown, the counter \u003ccode\u003ewritten\u003c/code\u003e is incremented by\n \u003ccode\u003e1\u003c/code\u003e.\n \u003cp\u003e\n Implements the \u003ccode\u003ewrite\u003c/code\u003e method of \u003ccode\u003eOutputStream\u003c/code\u003e.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int)","flatSignature":"(int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"b","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"write","comment":"Writes \u003ccode\u003elen\u003c/code\u003e bytes from the specified byte array\n starting at offset \u003ccode\u003eoff\u003c/code\u003e to the underlying output stream.\n If no exception is thrown, the counter \u003ccode\u003ewritten\u003c/code\u003e is\n incremented by \u003ccode\u003elen\u003c/code\u003e.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(byte[], int, int)","flatSignature":"(byte[], int, int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"b","type":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"[]","elementType":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"","elementType":{}}}},{"name":"off","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"len","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"flush","comment":"Flushes this data output stream. This forces any buffered output\n bytes to be written out to the stream.\n \u003cp\u003e\n The \u003ccode\u003eflush\u003c/code\u003e method of \u003ccode\u003eDataOutputStream\u003c/code\u003e\n calls the \u003ccode\u003eflush\u003c/code\u003e method of its underlying output stream.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"writeBoolean","comment":"Writes a \u003ccode\u003eboolean\u003c/code\u003e to the underlying output stream as\n a 1-byte value. The value \u003ccode\u003etrue\u003c/code\u003e is written out as the\n value \u003ccode\u003e(byte)1\u003c/code\u003e; the value \u003ccode\u003efalse\u003c/code\u003e is\n written out as the value \u003ccode\u003e(byte)0\u003c/code\u003e. If no exception is\n thrown, the counter \u003ccode\u003ewritten\u003c/code\u003e is incremented by\n \u003ccode\u003e1\u003c/code\u003e.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(boolean)","flatSignature":"(boolean)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"v","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"writeByte","comment":"Writes out a \u003ccode\u003ebyte\u003c/code\u003e to the underlying output stream as\n a 1-byte value. If no exception is thrown, the counter\n \u003ccode\u003ewritten\u003c/code\u003e is incremented by \u003ccode\u003e1\u003c/code\u003e.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int)","flatSignature":"(int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"v","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"writeShort","comment":"Writes a \u003ccode\u003eshort\u003c/code\u003e to the underlying output stream as two\n bytes, high byte first. If no exception is thrown, the counter\n \u003ccode\u003ewritten\u003c/code\u003e is incremented by \u003ccode\u003e2\u003c/code\u003e.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int)","flatSignature":"(int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"v","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"writeChar","comment":"Writes a \u003ccode\u003echar\u003c/code\u003e to the underlying output stream as a\n 2-byte value, high byte first. If no exception is thrown, the\n counter \u003ccode\u003ewritten\u003c/code\u003e is incremented by \u003ccode\u003e2\u003c/code\u003e.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int)","flatSignature":"(int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"v","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"writeInt","comment":"Writes an \u003ccode\u003eint\u003c/code\u003e to the underlying output stream as four\n bytes, high byte first. If no exception is thrown, the counter\n \u003ccode\u003ewritten\u003c/code\u003e is incremented by \u003ccode\u003e4\u003c/code\u003e.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int)","flatSignature":"(int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"v","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"writeLong","comment":"Writes a \u003ccode\u003elong\u003c/code\u003e to the underlying output stream as eight\n bytes, high byte first. In no exception is thrown, the counter\n \u003ccode\u003ewritten\u003c/code\u003e is incremented by \u003ccode\u003e8\u003c/code\u003e.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(long)","flatSignature":"(long)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"v","type":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"writeFloat","comment":"Converts the float argument to an \u003ccode\u003eint\u003c/code\u003e using the\n \u003ccode\u003efloatToIntBits\u003c/code\u003e method in class \u003ccode\u003eFloat\u003c/code\u003e,\n and then writes that \u003ccode\u003eint\u003c/code\u003e value to the underlying\n output stream as a 4-byte quantity, high byte first. If no\n exception is thrown, the counter \u003ccode\u003ewritten\u003c/code\u003e is\n incremented by \u003ccode\u003e4\u003c/code\u003e.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(float)","flatSignature":"(float)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"v","type":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"writeDouble","comment":"Converts the double argument to a \u003ccode\u003elong\u003c/code\u003e using the\n \u003ccode\u003edoubleToLongBits\u003c/code\u003e method in class \u003ccode\u003eDouble\u003c/code\u003e,\n and then writes that \u003ccode\u003elong\u003c/code\u003e value to the underlying\n output stream as an 8-byte quantity, high byte first. If no\n exception is thrown, the counter \u003ccode\u003ewritten\u003c/code\u003e is\n incremented by \u003ccode\u003e8\u003c/code\u003e.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(double)","flatSignature":"(double)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"v","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"writeBytes","comment":"Writes out the string to the underlying output stream as a\n sequence of bytes. Each character in the string is written out, in\n sequence, by discarding its high eight bits. If no exception is\n thrown, the counter \u003ccode\u003ewritten\u003c/code\u003e is incremented by the\n length of \u003ccode\u003es\u003c/code\u003e.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"s","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"writeChars","comment":"Writes a string to the underlying output stream as a sequence of\n characters. Each character is written to the data output stream as\n if by the \u003ccode\u003ewriteChar\u003c/code\u003e method. If no exception is\n thrown, the counter \u003ccode\u003ewritten\u003c/code\u003e is incremented by twice\n the length of \u003ccode\u003es\u003c/code\u003e.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"s","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"writeUTF","comment":"Writes a string to the underlying output stream using\n \u003ca href\u003d\"DataInput.html#modified-utf-8\"\u003emodified UTF-8\u003c/a\u003e\n encoding in a machine-independent manner.\n \u003cp\u003e\n First, two bytes are written to the output stream as if by the\n \u003ccode\u003ewriteShort\u003c/code\u003e method giving the number of bytes to\n follow. This value is the number of bytes actually written out,\n not the length of the string. Following the length, each character\n of the string is output, in sequence, using the modified UTF-8 encoding\n for the character. If no exception is thrown, the counter\n \u003ccode\u003ewritten\u003c/code\u003e is incremented by the total number of\n bytes written to the output stream. This will be at least two\n plus the length of \u003ccode\u003estr\u003c/code\u003e, and at most two plus\n thrice the length of \u003ccode\u003estr\u003c/code\u003e.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"str","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"size","comment":"Returns the current value of the counter \u003ccode\u003ewritten\u003c/code\u003e,\n the number of bytes written to this data output stream so far.\n If the counter overflows, it will be wrapped to Integer.MAX_VALUE.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}