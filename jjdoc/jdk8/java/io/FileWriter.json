{"name":"FileWriter","comment":"Convenience class for writing character files.  The constructors of this\n class assume that the default character encoding and the default byte-buffer\n size are acceptable.  To specify these values yourself, construct an\n OutputStreamWriter on a FileOutputStream.\n\n \u003cp\u003eWhether or not a file is available or may be created depends upon the\n underlying platform.  Some platforms, in particular, allow a file to be\n opened for writing by only one \u003ctt\u003eFileWriter\u003c/tt\u003e (or other file-writing\n object) at a time.  In such situations the constructors in this class\n will fail if the file involved is already open.\n\n \u003cp\u003e\u003ccode\u003eFileWriter\u003c/code\u003e is meant for writing streams of characters.\n For writing streams of raw bytes, consider using a\n \u003ccode\u003eFileOutputStream\u003c/code\u003e.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"FileWriter","qualifiedName":"java.io.FileWriter","dimension":"","elementType":{},"package":"java.io","superclass":"java.io.OutputStreamWriter","interfaces":[],"isAbstract":false,"isStatic":false,"since":"JDK1.1","innerClasses":[],"isInnerClass":false,"constructors":[{"name":"FileWriter","comment":"Constructs a FileWriter object given a file name.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","parameters":[{"name":"fileName","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"FileWriter","comment":"Constructs a FileWriter object given a file name with a boolean\n indicating whether or not to append the data written.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.lang.String, boolean)","flatSignature":"(String, boolean)","parameters":[{"name":"fileName","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"append","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"FileWriter","comment":"Constructs a FileWriter object given a File object.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.io.File)","flatSignature":"(File)","parameters":[{"name":"file","type":{"isPrimitive":false,"simpleName":"File","qualifiedName":"java.io.File","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"FileWriter","comment":"Constructs a FileWriter object given a File object. If the second\n argument is \u003ccode\u003etrue\u003c/code\u003e, then bytes will be written to the end\n of the file rather than the beginning.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.io.File, boolean)","flatSignature":"(File, boolean)","parameters":[{"name":"file","type":{"isPrimitive":false,"simpleName":"File","qualifiedName":"java.io.File","dimension":"","elementType":{}}},{"name":"append","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"FileWriter","comment":"Constructs a FileWriter object associated with a file descriptor.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.io.FileDescriptor)","flatSignature":"(FileDescriptor)","parameters":[{"name":"fd","type":{"isPrimitive":false,"simpleName":"FileDescriptor","qualifiedName":"java.io.FileDescriptor","dimension":"","elementType":{}}}],"typeParameters":[]}],"fields":[],"methods":[],"typeParameters":[],"enumConstants":[]}