{"name":"ByteArrayInputStream","comment":"A \u003ccode\u003eByteArrayInputStream\u003c/code\u003e contains\n an internal buffer that contains bytes that\n may be read from the stream. An internal\n counter keeps track of the next byte to\n be supplied by the \u003ccode\u003eread\u003c/code\u003e method.\n \u003cp\u003e\n Closing a \u003ctt\u003eByteArrayInputStream\u003c/tt\u003e has no effect. The methods in\n this class can be called after the stream has been closed without\n generating an \u003ctt\u003eIOException\u003c/tt\u003e.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"ByteArrayInputStream","qualifiedName":"java.io.ByteArrayInputStream","dimension":"","elementType":{},"package":"java.io","superclass":"java.io.InputStream","interfaces":[],"isAbstract":false,"isStatic":false,"since":"JDK1.0","innerClasses":[],"isInnerClass":false,"constructors":[{"name":"ByteArrayInputStream","comment":"Creates a \u003ccode\u003eByteArrayInputStream\u003c/code\u003e\n so that it  uses \u003ccode\u003ebuf\u003c/code\u003e as its\n buffer array.\n The buffer array is not copied.\n The initial value of \u003ccode\u003epos\u003c/code\u003e\n is \u003ccode\u003e0\u003c/code\u003e and the initial value\n of  \u003ccode\u003ecount\u003c/code\u003e is the length of\n \u003ccode\u003ebuf\u003c/code\u003e.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(byte[])","flatSignature":"(byte[])","parameters":[{"name":"buf","type":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"[]","elementType":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"","elementType":{}}}}],"typeParameters":[]},{"name":"ByteArrayInputStream","comment":"Creates \u003ccode\u003eByteArrayInputStream\u003c/code\u003e\n that uses \u003ccode\u003ebuf\u003c/code\u003e as its\n buffer array. The initial value of \u003ccode\u003epos\u003c/code\u003e\n is \u003ccode\u003eoffset\u003c/code\u003e and the initial value\n of \u003ccode\u003ecount\u003c/code\u003e is the minimum of \u003ccode\u003eoffset+length\u003c/code\u003e\n and \u003ccode\u003ebuf.length\u003c/code\u003e.\n The buffer array is not copied. The buffer\u0027s mark is\n set to the specified offset.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(byte[], int, int)","flatSignature":"(byte[], int, int)","parameters":[{"name":"buf","type":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"[]","elementType":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"","elementType":{}}}},{"name":"offset","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"length","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]}],"fields":[],"methods":[{"name":"read","comment":"Reads the next byte of data from this input stream. The value\n byte is returned as an \u003ccode\u003eint\u003c/code\u003e in the range\n \u003ccode\u003e0\u003c/code\u003e to \u003ccode\u003e255\u003c/code\u003e. If no byte is available\n because the end of the stream has been reached, the value\n \u003ccode\u003e-1\u003c/code\u003e is returned.\n \u003cp\u003e\n This \u003ccode\u003eread\u003c/code\u003e method\n cannot block.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"read","comment":"Reads up to \u003ccode\u003elen\u003c/code\u003e bytes of data into an array of bytes\n from this input stream.\n If \u003ccode\u003epos\u003c/code\u003e equals \u003ccode\u003ecount\u003c/code\u003e,\n then \u003ccode\u003e-1\u003c/code\u003e is returned to indicate\n end of file. Otherwise, the  number \u003ccode\u003ek\u003c/code\u003e\n of bytes read is equal to the smaller of\n \u003ccode\u003elen\u003c/code\u003e and \u003ccode\u003ecount-pos\u003c/code\u003e.\n If \u003ccode\u003ek\u003c/code\u003e is positive, then bytes\n \u003ccode\u003ebuf[pos]\u003c/code\u003e through \u003ccode\u003ebuf[pos+k-1]\u003c/code\u003e\n are copied into \u003ccode\u003eb[off]\u003c/code\u003e  through\n \u003ccode\u003eb[off+k-1]\u003c/code\u003e in the manner performed\n by \u003ccode\u003eSystem.arraycopy\u003c/code\u003e. The\n value \u003ccode\u003ek\u003c/code\u003e is added into \u003ccode\u003epos\u003c/code\u003e\n and \u003ccode\u003ek\u003c/code\u003e is returned.\n \u003cp\u003e\n This \u003ccode\u003eread\u003c/code\u003e method cannot block.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(byte[], int, int)","flatSignature":"(byte[], int, int)","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"b","type":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"[]","elementType":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"","elementType":{}}}},{"name":"off","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"len","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"skip","comment":"Skips \u003ccode\u003en\u003c/code\u003e bytes of input from this input stream. Fewer\n bytes might be skipped if the end of the input stream is reached.\n The actual number \u003ccode\u003ek\u003c/code\u003e\n of bytes to be skipped is equal to the smaller\n of \u003ccode\u003en\u003c/code\u003e and  \u003ccode\u003ecount-pos\u003c/code\u003e.\n The value \u003ccode\u003ek\u003c/code\u003e is added into \u003ccode\u003epos\u003c/code\u003e\n and \u003ccode\u003ek\u003c/code\u003e is returned.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(long)","flatSignature":"(long)","returnType":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"n","type":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"available","comment":"Returns the number of remaining bytes that can be read (or skipped over)\n from this input stream.\n \u003cp\u003e\n The value returned is \u003ccode\u003ecount\u0026nbsp;- pos\u003c/code\u003e,\n which is the number of bytes remaining to be read from the input buffer.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"markSupported","comment":"Tests if this \u003ccode\u003eInputStream\u003c/code\u003e supports mark/reset. The\n \u003ccode\u003emarkSupported\u003c/code\u003e method of \u003ccode\u003eByteArrayInputStream\u003c/code\u003e\n always returns \u003ccode\u003etrue\u003c/code\u003e.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"mark","comment":"Set the current marked position in the stream.\n ByteArrayInputStream objects are marked at position zero by\n default when constructed.  They may be marked at another\n position within the buffer by this method.\n \u003cp\u003e\n If no mark has been set, then the value of the mark is the\n offset passed to the constructor (or 0 if the offset was not\n supplied).\n\n \u003cp\u003e Note: The \u003ccode\u003ereadAheadLimit\u003c/code\u003e for this class\n  has no meaning.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int)","flatSignature":"(int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"readAheadLimit","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"reset","comment":"Resets the buffer to the marked position.  The marked position\n is 0 unless another position was marked or an offset was specified\n in the constructor.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"close","comment":"Closing a \u003ctt\u003eByteArrayInputStream\u003c/tt\u003e has no effect. The methods in\n this class can be called after the stream has been closed without\n generating an \u003ctt\u003eIOException\u003c/tt\u003e.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}