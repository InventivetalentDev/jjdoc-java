{"name":"InputStreamReader","comment":"An InputStreamReader is a bridge from byte streams to character streams: It\n reads bytes and decodes them into characters using a specified {@link\n java.nio.charset.Charset charset}.  The charset that it uses\n may be specified by name or may be given explicitly, or the platform\u0027s\n default charset may be accepted.\n\n \u003cp\u003e Each invocation of one of an InputStreamReader\u0027s read() methods may\n cause one or more bytes to be read from the underlying byte-input stream.\n To enable the efficient conversion of bytes to characters, more bytes may\n be read ahead from the underlying stream than are necessary to satisfy the\n current read operation.\n\n \u003cp\u003e For top efficiency, consider wrapping an InputStreamReader within a\n BufferedReader.  For example:\n\n \u003cpre\u003e\n BufferedReader in\n   \u003d new BufferedReader(new InputStreamReader(System.in));\n \u003c/pre\u003e","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"InputStreamReader","qualifiedName":"java.io.InputStreamReader","dimension":"","elementType":{},"package":"java.io","superclass":"java.io.Reader","interfaces":[],"isAbstract":false,"isStatic":false,"since":"JDK1.1","innerClasses":[],"isInnerClass":false,"constructors":[{"name":"InputStreamReader","comment":"Creates an InputStreamReader that uses the default charset.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.io.InputStream)","flatSignature":"(InputStream)","parameters":[{"name":"in","type":{"isPrimitive":false,"simpleName":"InputStream","qualifiedName":"java.io.InputStream","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"InputStreamReader","comment":"Creates an InputStreamReader that uses the named charset.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.io.InputStream, java.lang.String)","flatSignature":"(InputStream, String)","parameters":[{"name":"in","type":{"isPrimitive":false,"simpleName":"InputStream","qualifiedName":"java.io.InputStream","dimension":"","elementType":{}}},{"name":"charsetName","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"InputStreamReader","comment":"Creates an InputStreamReader that uses the given charset.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.io.InputStream, java.nio.charset.Charset)","flatSignature":"(InputStream, Charset)","parameters":[{"name":"in","type":{"isPrimitive":false,"simpleName":"InputStream","qualifiedName":"java.io.InputStream","dimension":"","elementType":{}}},{"name":"cs","type":{"isPrimitive":false,"simpleName":"Charset","qualifiedName":"java.nio.charset.Charset","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"InputStreamReader","comment":"Creates an InputStreamReader that uses the given charset decoder.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.io.InputStream, java.nio.charset.CharsetDecoder)","flatSignature":"(InputStream, CharsetDecoder)","parameters":[{"name":"in","type":{"isPrimitive":false,"simpleName":"InputStream","qualifiedName":"java.io.InputStream","dimension":"","elementType":{}}},{"name":"dec","type":{"isPrimitive":false,"simpleName":"CharsetDecoder","qualifiedName":"java.nio.charset.CharsetDecoder","dimension":"","elementType":{}}}],"typeParameters":[]}],"fields":[],"methods":[{"name":"getEncoding","comment":"Returns the name of the character encoding being used by this stream.\n\n \u003cp\u003e If the encoding has an historical name then that name is returned;\n otherwise the encoding\u0027s canonical name is returned.\n\n \u003cp\u003e If this instance was created with the {@link\n #InputStreamReader(InputStream, String)} constructor then the returned\n name, being unique for the encoding, may differ from the name passed to\n the constructor. This method will return \u003ccode\u003enull\u003c/code\u003e if the\n stream has been closed.\n \u003c/p\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"read","comment":"Reads a single character.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"read","comment":"Reads characters into a portion of an array.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(char[], int, int)","flatSignature":"(char[], int, int)","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"cbuf","type":{"isPrimitive":true,"simpleName":"char","qualifiedName":"char","dimension":"[]","elementType":{"isPrimitive":true,"simpleName":"char","qualifiedName":"char","dimension":"","elementType":{}}}},{"name":"offset","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"length","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"ready","comment":"Tells whether this stream is ready to be read.  An InputStreamReader is\n ready if its input buffer is not empty, or if bytes are available to be\n read from the underlying byte stream.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"close","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"subClasses":["java.io.FileReader"],"enumConstants":[]}