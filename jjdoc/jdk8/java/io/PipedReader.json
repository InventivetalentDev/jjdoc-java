{"name":"PipedReader","comment":"Piped character-input streams.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"PipedReader","qualifiedName":"java.io.PipedReader","dimension":"","elementType":{},"package":"java.io","superclass":"java.io.Reader","interfaces":[],"isAbstract":false,"isStatic":false,"since":"JDK1.1","innerClasses":[],"isInnerClass":false,"constructors":[{"name":"PipedReader","comment":"Creates a \u003ccode\u003ePipedReader\u003c/code\u003e so\n that it is connected to the piped writer\n \u003ccode\u003esrc\u003c/code\u003e. Data written to \u003ccode\u003esrc\u003c/code\u003e\n will then be available as input from this stream.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.io.PipedWriter)","flatSignature":"(PipedWriter)","parameters":[{"name":"src","type":{"isPrimitive":false,"simpleName":"PipedWriter","qualifiedName":"java.io.PipedWriter","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"PipedReader","comment":"Creates a \u003ccode\u003ePipedReader\u003c/code\u003e so that it is connected\n to the piped writer \u003ccode\u003esrc\u003c/code\u003e and uses the specified\n pipe size for the pipe\u0027s buffer. Data written to \u003ccode\u003esrc\u003c/code\u003e\n will then be  available as input from this stream.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.io.PipedWriter, int)","flatSignature":"(PipedWriter, int)","parameters":[{"name":"src","type":{"isPrimitive":false,"simpleName":"PipedWriter","qualifiedName":"java.io.PipedWriter","dimension":"","elementType":{}}},{"name":"pipeSize","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"PipedReader","comment":"Creates a \u003ccode\u003ePipedReader\u003c/code\u003e so\n that it is not yet {@linkplain #connect(java.io.PipedWriter)\n connected}. It must be {@linkplain java.io.PipedWriter#connect(\n java.io.PipedReader) connected} to a \u003ccode\u003ePipedWriter\u003c/code\u003e\n before being used.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","parameters":[],"typeParameters":[]},{"name":"PipedReader","comment":"Creates a \u003ccode\u003ePipedReader\u003c/code\u003e so that it is not yet\n {@link #connect(java.io.PipedWriter) connected} and uses\n the specified pipe size for the pipe\u0027s buffer.\n It must be  {@linkplain java.io.PipedWriter#connect(\n java.io.PipedReader) connected} to a \u003ccode\u003ePipedWriter\u003c/code\u003e\n before being used.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(int)","flatSignature":"(int)","parameters":[{"name":"pipeSize","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]}],"fields":[],"methods":[{"name":"connect","comment":"Causes this piped reader to be connected\n to the piped  writer \u003ccode\u003esrc\u003c/code\u003e.\n If this object is already connected to some\n other piped writer, an \u003ccode\u003eIOException\u003c/code\u003e\n is thrown.\n \u003cp\u003e\n If \u003ccode\u003esrc\u003c/code\u003e is an\n unconnected piped writer and \u003ccode\u003esnk\u003c/code\u003e\n is an unconnected piped reader, they\n may be connected by either the call:\n\n \u003cpre\u003e\u003ccode\u003esnk.connect(src)\u003c/code\u003e \u003c/pre\u003e\n \u003cp\u003e\n or the call:\n\n \u003cpre\u003e\u003ccode\u003esrc.connect(snk)\u003c/code\u003e \u003c/pre\u003e\n \u003cp\u003e\n The two calls have the same effect.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.io.PipedWriter)","flatSignature":"(PipedWriter)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"src","type":{"isPrimitive":false,"simpleName":"PipedWriter","qualifiedName":"java.io.PipedWriter","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"read","comment":"Reads the next character of data from this piped stream.\n If no character is available because the end of the stream\n has been reached, the value \u003ccode\u003e-1\u003c/code\u003e is returned.\n This method blocks until input data is available, the end of\n the stream is detected, or an exception is thrown.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"read","comment":"Reads up to \u003ccode\u003elen\u003c/code\u003e characters of data from this piped\n stream into an array of characters. Less than \u003ccode\u003elen\u003c/code\u003e characters\n will be read if the end of the data stream is reached or if\n \u003ccode\u003elen\u003c/code\u003e exceeds the pipe\u0027s buffer size. This method\n blocks until at least one character of input is available.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(char[], int, int)","flatSignature":"(char[], int, int)","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"cbuf","type":{"isPrimitive":true,"simpleName":"char","qualifiedName":"char","dimension":"[]","elementType":{"isPrimitive":true,"simpleName":"char","qualifiedName":"char","dimension":"","elementType":{}}}},{"name":"off","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"len","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"ready","comment":"Tell whether this stream is ready to be read.  A piped character\n stream is ready if the circular buffer is not empty.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"close","comment":"Closes this piped stream and releases any system resources\n associated with the stream.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}