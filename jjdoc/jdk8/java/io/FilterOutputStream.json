{"name":"FilterOutputStream","comment":"This class is the superclass of all classes that filter output\n streams. These streams sit on top of an already existing output\n stream (the \u003ci\u003eunderlying\u003c/i\u003e output stream) which it uses as its\n basic sink of data, but possibly transforming the data along the\n way or providing additional functionality.\n \u003cp\u003e\n The class \u003ccode\u003eFilterOutputStream\u003c/code\u003e itself simply overrides\n all methods of \u003ccode\u003eOutputStream\u003c/code\u003e with versions that pass\n all requests to the underlying output stream. Subclasses of\n \u003ccode\u003eFilterOutputStream\u003c/code\u003e may further override some of these\n methods as well as provide additional methods and fields.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"FilterOutputStream","qualifiedName":"java.io.FilterOutputStream","dimension":"","elementType":{},"package":"java.io","superclass":"java.io.OutputStream","interfaces":[],"isAbstract":false,"isStatic":false,"since":"JDK1.0","innerClasses":[],"isInnerClass":false,"constructors":[{"name":"FilterOutputStream","comment":"Creates an output stream filter built on top of the specified\n underlying output stream.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(java.io.OutputStream)","flatSignature":"(OutputStream)","parameters":[{"name":"out","type":{"isPrimitive":false,"simpleName":"OutputStream","qualifiedName":"java.io.OutputStream","dimension":"","elementType":{}}}],"typeParameters":[]}],"fields":[],"methods":[{"name":"write","comment":"Writes the specified \u003ccode\u003ebyte\u003c/code\u003e to this output stream.\n \u003cp\u003e\n The \u003ccode\u003ewrite\u003c/code\u003e method of \u003ccode\u003eFilterOutputStream\u003c/code\u003e\n calls the \u003ccode\u003ewrite\u003c/code\u003e method of its underlying output stream,\n that is, it performs \u003ctt\u003eout.write(b)\u003c/tt\u003e.\n \u003cp\u003e\n Implements the abstract \u003ctt\u003ewrite\u003c/tt\u003e method of \u003ctt\u003eOutputStream\u003c/tt\u003e.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int)","flatSignature":"(int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"b","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"write","comment":"Writes \u003ccode\u003eb.length\u003c/code\u003e bytes to this output stream.\n \u003cp\u003e\n The \u003ccode\u003ewrite\u003c/code\u003e method of \u003ccode\u003eFilterOutputStream\u003c/code\u003e\n calls its \u003ccode\u003ewrite\u003c/code\u003e method of three arguments with the\n arguments \u003ccode\u003eb\u003c/code\u003e, \u003ccode\u003e0\u003c/code\u003e, and\n \u003ccode\u003eb.length\u003c/code\u003e.\n \u003cp\u003e\n Note that this method does not call the one-argument\n \u003ccode\u003ewrite\u003c/code\u003e method of its underlying stream with the single\n argument \u003ccode\u003eb\u003c/code\u003e.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(byte[])","flatSignature":"(byte[])","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"b","type":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"[]","elementType":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"","elementType":{}}}}],"typeParameters":[]},{"name":"write","comment":"Writes \u003ccode\u003elen\u003c/code\u003e bytes from the specified\n \u003ccode\u003ebyte\u003c/code\u003e array starting at offset \u003ccode\u003eoff\u003c/code\u003e to\n this output stream.\n \u003cp\u003e\n The \u003ccode\u003ewrite\u003c/code\u003e method of \u003ccode\u003eFilterOutputStream\u003c/code\u003e\n calls the \u003ccode\u003ewrite\u003c/code\u003e method of one argument on each\n \u003ccode\u003ebyte\u003c/code\u003e to output.\n \u003cp\u003e\n Note that this method does not call the \u003ccode\u003ewrite\u003c/code\u003e method\n of its underlying input stream with the same arguments. Subclasses\n of \u003ccode\u003eFilterOutputStream\u003c/code\u003e should provide a more efficient\n implementation of this method.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(byte[], int, int)","flatSignature":"(byte[], int, int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"b","type":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"[]","elementType":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"","elementType":{}}}},{"name":"off","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"len","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"flush","comment":"Flushes this output stream and forces any buffered output bytes\n to be written out to the stream.\n \u003cp\u003e\n The \u003ccode\u003eflush\u003c/code\u003e method of \u003ccode\u003eFilterOutputStream\u003c/code\u003e\n calls the \u003ccode\u003eflush\u003c/code\u003e method of its underlying output stream.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"close","comment":"Closes this output stream and releases any system resources\n associated with the stream.\n \u003cp\u003e\n The \u003ccode\u003eclose\u003c/code\u003e method of \u003ccode\u003eFilterOutputStream\u003c/code\u003e\n calls its \u003ccode\u003eflush\u003c/code\u003e method, and then calls the\n \u003ccode\u003eclose\u003c/code\u003e method of its underlying output stream.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"subClasses":["java.security.DigestOutputStream","java.io.PrintStream","java.io.DataOutputStream","java.io.BufferedOutputStream","java.util.zip.DeflaterOutputStream","java.util.zip.InflaterOutputStream","java.util.zip.CheckedOutputStream"],"enumConstants":[]}