{"name":"DecimalFormatSymbolsProvider","comment":"An abstract class for service providers that\n provide instances of the\n {@link java.text.DecimalFormatSymbols DecimalFormatSymbols} class.\n\n \u003cp\u003eThe requested {@code Locale} may contain an \u003ca\n href\u003d\"../../util/Locale.html#def_locale_extension\"\u003e extension\u003c/a\u003e for\n specifying the desired numbering system. For example, {@code \"ar-u-nu-arab\"}\n (in the BCP 47 language tag form) specifies Arabic with the Arabic-Indic\n digits and symbols, while {@code \"ar-u-nu-latn\"} specifies Arabic with the\n Latin digits and symbols. Refer to the \u003cem\u003eUnicode Locale Data Markup\n Language (LDML)\u003c/em\u003e specification for numbering systems.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"DecimalFormatSymbolsProvider","qualifiedName":"java.text.spi.DecimalFormatSymbolsProvider","dimension":"","elementType":{},"package":"java.text.spi","superclass":"java.util.spi.LocaleServiceProvider","interfaces":[],"isAbstract":true,"isStatic":false,"since":"1.6","innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"getInstance","comment":"Returns a new \u003ccode\u003eDecimalFormatSymbols\u003c/code\u003e instance for the\n specified locale.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.util.Locale)","flatSignature":"(Locale)","returnType":{"isPrimitive":false,"simpleName":"DecimalFormatSymbols","qualifiedName":"java.text.DecimalFormatSymbols","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"locale","type":{"isPrimitive":false,"simpleName":"Locale","qualifiedName":"java.util.Locale","dimension":"","elementType":{}}}],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}