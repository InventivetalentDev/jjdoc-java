{"name":"AbstractSelectableChannel","comment":"Base implementation class for selectable channels.\n\n \u003cp\u003e This class defines methods that handle the mechanics of channel\n registration, deregistration, and closing.  It maintains the current\n blocking mode of this channel as well as its current set of selection keys.\n It performs all of the synchronization required to implement the {@link\n java.nio.channels.SelectableChannel} specification.  Implementations of the\n abstract protected methods defined in this class need not synchronize\n against other threads that might be engaged in the same operations.  \u003c/p\u003e","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"AbstractSelectableChannel","qualifiedName":"java.nio.channels.spi.AbstractSelectableChannel","dimension":"","elementType":{},"package":"java.nio.channels.spi","superclass":"java.nio.channels.SelectableChannel","interfaces":[],"isAbstract":true,"isStatic":false,"since":"1.4","innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"provider","comment":"Returns the provider that created this channel.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"SelectorProvider","qualifiedName":"java.nio.channels.spi.SelectorProvider","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"isRegistered","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"keyFor","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.nio.channels.Selector)","flatSignature":"(Selector)","returnType":{"isPrimitive":false,"simpleName":"SelectionKey","qualifiedName":"java.nio.channels.SelectionKey","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"sel","type":{"isPrimitive":false,"simpleName":"Selector","qualifiedName":"java.nio.channels.Selector","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"register","comment":"Registers this channel with the given selector, returning a selection key.\n\n \u003cp\u003e  This method first verifies that this channel is open and that the\n given initial interest set is valid.\n\n \u003cp\u003e If this channel is already registered with the given selector then\n the selection key representing that registration is returned after\n setting its interest set to the given value.\n\n \u003cp\u003e Otherwise this channel has not yet been registered with the given\n selector, so the {@link AbstractSelector#register register} method of\n the selector is invoked while holding the appropriate locks.  The\n resulting key is added to this channel\u0027s key set before being returned.\n \u003c/p\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.nio.channels.Selector, int, java.lang.Object)","flatSignature":"(Selector, int, Object)","returnType":{"isPrimitive":false,"simpleName":"SelectionKey","qualifiedName":"java.nio.channels.SelectionKey","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"sel","type":{"isPrimitive":false,"simpleName":"Selector","qualifiedName":"java.nio.channels.Selector","dimension":"","elementType":{}}},{"name":"ops","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"att","type":{"isPrimitive":false,"simpleName":"Object","qualifiedName":"java.lang.Object","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"isBlocking","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"blockingLock","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Object","qualifiedName":"java.lang.Object","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"configureBlocking","comment":"Adjusts this channel\u0027s blocking mode.\n\n \u003cp\u003e If the given blocking mode is different from the current blocking\n mode then this method invokes the {@link #implConfigureBlocking\n implConfigureBlocking} method, while holding the appropriate locks, in\n order to change the mode.  \u003c/p\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(boolean)","flatSignature":"(boolean)","returnType":{"isPrimitive":false,"simpleName":"SelectableChannel","qualifiedName":"java.nio.channels.SelectableChannel","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"block","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]}],"typeParameters":[],"subClasses":["java.nio.channels.SocketChannel","java.nio.channels.ServerSocketChannel","java.nio.channels.Pipe.SourceChannel","java.nio.channels.Pipe.SinkChannel","java.nio.channels.DatagramChannel"],"enumConstants":[]}