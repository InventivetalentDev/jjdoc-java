{"name":"SelectionKey","comment":"A token representing the registration of a {@link SelectableChannel} with a\n {@link Selector}.\n\n \u003cp\u003e A selection key is created each time a channel is registered with a\n selector.  A key remains valid until it is \u003ci\u003ecancelled\u003c/i\u003e by invoking its\n {@link #cancel cancel} method, by closing its channel, or by closing its\n selector.  Cancelling a key does not immediately remove it from its\n selector; it is instead added to the selector\u0027s \u003ca\n href\u003d\"Selector.html#ks\"\u003e\u003ci\u003ecancelled-key set\u003c/i\u003e\u003c/a\u003e for removal during the\n next selection operation.  The validity of a key may be tested by invoking\n its {@link #isValid isValid} method.\n\n \u003ca name\u003d\"opsets\"\u003e\u003c/a\u003e\n\n \u003cp\u003e A selection key contains two \u003ci\u003eoperation sets\u003c/i\u003e represented as\n integer values.  Each bit of an operation set denotes a category of\n selectable operations that are supported by the key\u0027s channel.\n\n \u003cul\u003e\n\n   \u003cli\u003e\u003cp\u003e The \u003ci\u003einterest set\u003c/i\u003e determines which operation categories will\n   be tested for readiness the next time one of the selector\u0027s selection\n   methods is invoked.  The interest set is initialized with the value given\n   when the key is created; it may later be changed via the {@link\n   #interestOps(int)} method. \u003c/p\u003e\u003c/li\u003e\n\n   \u003cli\u003e\u003cp\u003e The \u003ci\u003eready set\u003c/i\u003e identifies the operation categories for which\n   the key\u0027s channel has been detected to be ready by the key\u0027s selector.\n   The ready set is initialized to zero when the key is created; it may later\n   be updated by the selector during a selection operation, but it cannot be\n   updated directly. \u003c/p\u003e\u003c/li\u003e\n\n \u003c/ul\u003e\n\n \u003cp\u003e That a selection key\u0027s ready set indicates that its channel is ready for\n some operation category is a hint, but not a guarantee, that an operation in\n such a category may be performed by a thread without causing the thread to\n block.  A ready set is most likely to be accurate immediately after the\n completion of a selection operation.  It is likely to be made inaccurate by\n external events and by I/O operations that are invoked upon the\n corresponding channel.\n\n \u003cp\u003e This class defines all known operation-set bits, but precisely which\n bits are supported by a given channel depends upon the type of the channel.\n Each subclass of {@link SelectableChannel} defines an {@link\n SelectableChannel#validOps() validOps()} method which returns a set\n identifying just those operations that are supported by the channel.  An\n attempt to set or test an operation-set bit that is not supported by a key\u0027s\n channel will result in an appropriate run-time exception.\n\n \u003cp\u003e It is often necessary to associate some application-specific data with a\n selection key, for example an object that represents the state of a\n higher-level protocol and handles readiness notifications in order to\n implement that protocol.  Selection keys therefore support the\n \u003ci\u003eattachment\u003c/i\u003e of a single arbitrary object to a key.  An object can be\n attached via the {@link #attach attach} method and then later retrieved via\n the {@link #attachment() attachment} method.\n\n \u003cp\u003e Selection keys are safe for use by multiple concurrent threads.  The\n operations of reading and writing the interest set will, in general, be\n synchronized with certain operations of the selector.  Exactly how this\n synchronization is performed is implementation-dependent: In a naive\n implementation, reading or writing the interest set may block indefinitely\n if a selection operation is already in progress; in a high-performance\n implementation, reading or writing the interest set may block briefly, if at\n all.  In any case, a selection operation will always use the interest-set\n value that was current at the moment that the operation began.  \u003c/p\u003e","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"SelectionKey","qualifiedName":"java.nio.channels.SelectionKey","dimension":"","elementType":{},"package":"java.nio.channels","superclass":"java.lang.Object","interfaces":[],"isAbstract":true,"isStatic":false,"since":"1.4","innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[{"name":"OP_READ","comment":"Operation-set bit for read operations.\n\n \u003cp\u003e Suppose that a selection key\u0027s interest set contains\n \u003ctt\u003eOP_READ\u003c/tt\u003e at the start of a \u003ca\n href\u003d\"Selector.html#selop\"\u003eselection operation\u003c/a\u003e.  If the selector\n detects that the corresponding channel is ready for reading, has reached\n end-of-stream, has been remotely shut down for further reading, or has\n an error pending, then it will add \u003ctt\u003eOP_READ\u003c/tt\u003e to the key\u0027s\n ready-operation set and add the key to its selected-key\u0026nbsp;set.  \u003c/p\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":true,"isMethod":false,"isOrdinaryClass":false,"type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isStatic":true,"constantValue":"1"},{"name":"OP_WRITE","comment":"Operation-set bit for write operations.\n\n \u003cp\u003e Suppose that a selection key\u0027s interest set contains\n \u003ctt\u003eOP_WRITE\u003c/tt\u003e at the start of a \u003ca\n href\u003d\"Selector.html#selop\"\u003eselection operation\u003c/a\u003e.  If the selector\n detects that the corresponding channel is ready for writing, has been\n remotely shut down for further writing, or has an error pending, then it\n will add \u003ctt\u003eOP_WRITE\u003c/tt\u003e to the key\u0027s ready set and add the key to its\n selected-key\u0026nbsp;set.  \u003c/p\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":true,"isMethod":false,"isOrdinaryClass":false,"type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isStatic":true,"constantValue":"4"},{"name":"OP_CONNECT","comment":"Operation-set bit for socket-connect operations.\n\n \u003cp\u003e Suppose that a selection key\u0027s interest set contains\n \u003ctt\u003eOP_CONNECT\u003c/tt\u003e at the start of a \u003ca\n href\u003d\"Selector.html#selop\"\u003eselection operation\u003c/a\u003e.  If the selector\n detects that the corresponding socket channel is ready to complete its\n connection sequence, or has an error pending, then it will add\n \u003ctt\u003eOP_CONNECT\u003c/tt\u003e to the key\u0027s ready set and add the key to its\n selected-key\u0026nbsp;set.  \u003c/p\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":true,"isMethod":false,"isOrdinaryClass":false,"type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isStatic":true,"constantValue":"8"},{"name":"OP_ACCEPT","comment":"Operation-set bit for socket-accept operations.\n\n \u003cp\u003e Suppose that a selection key\u0027s interest set contains\n \u003ctt\u003eOP_ACCEPT\u003c/tt\u003e at the start of a \u003ca\n href\u003d\"Selector.html#selop\"\u003eselection operation\u003c/a\u003e.  If the selector\n detects that the corresponding server-socket channel is ready to accept\n another connection, or has an error pending, then it will add\n \u003ctt\u003eOP_ACCEPT\u003c/tt\u003e to the key\u0027s ready set and add the key to its\n selected-key\u0026nbsp;set.  \u003c/p\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":true,"isMethod":false,"isOrdinaryClass":false,"type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isStatic":true,"constantValue":"16"}],"methods":[{"name":"channel","comment":"Returns the channel for which this key was created.  This method will\n continue to return the channel even after the key is cancelled.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"SelectableChannel","qualifiedName":"java.nio.channels.SelectableChannel","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"selector","comment":"Returns the selector for which this key was created.  This method will\n continue to return the selector even after the key is cancelled.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Selector","qualifiedName":"java.nio.channels.Selector","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"isValid","comment":"Tells whether or not this key is valid.\n\n \u003cp\u003e A key is valid upon creation and remains so until it is cancelled,\n its channel is closed, or its selector is closed.  \u003c/p\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"cancel","comment":"Requests that the registration of this key\u0027s channel with its selector\n be cancelled.  Upon return the key will be invalid and will have been\n added to its selector\u0027s cancelled-key set.  The key will be removed from\n all of the selector\u0027s key sets during the next selection operation.\n\n \u003cp\u003e If this key has already been cancelled then invoking this method has\n no effect.  Once cancelled, a key remains forever invalid. \u003c/p\u003e\n\n \u003cp\u003e This method may be invoked at any time.  It synchronizes on the\n selector\u0027s cancelled-key set, and therefore may block briefly if invoked\n concurrently with a cancellation or selection operation involving the\n same selector.  \u003c/p\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"interestOps","comment":"Retrieves this key\u0027s interest set.\n\n \u003cp\u003e It is guaranteed that the returned set will only contain operation\n bits that are valid for this key\u0027s channel.\n\n \u003cp\u003e This method may be invoked at any time.  Whether or not it blocks,\n and for how long, is implementation-dependent.  \u003c/p\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"interestOps","comment":"Sets this key\u0027s interest set to the given value.\n\n \u003cp\u003e This method may be invoked at any time.  Whether or not it blocks,\n and for how long, is implementation-dependent.  \u003c/p\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int)","flatSignature":"(int)","returnType":{"isPrimitive":false,"simpleName":"SelectionKey","qualifiedName":"java.nio.channels.SelectionKey","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"ops","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"readyOps","comment":"Retrieves this key\u0027s ready-operation set.\n\n \u003cp\u003e It is guaranteed that the returned set will only contain operation\n bits that are valid for this key\u0027s channel.  \u003c/p\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"isReadable","comment":"Tests whether this key\u0027s channel is ready for reading.\n\n \u003cp\u003e An invocation of this method of the form \u003ctt\u003ek.isReadable()\u003c/tt\u003e\n behaves in exactly the same way as the expression\n\n \u003cblockquote\u003e\u003cpre\u003e{@code\n k.readyOps() \u0026 OP_READ !\u003d 0\n }\u003c/pre\u003e\u003c/blockquote\u003e\n\n \u003cp\u003e If this key\u0027s channel does not support read operations then this\n method always returns \u003ctt\u003efalse\u003c/tt\u003e.  \u003c/p\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"isWritable","comment":"Tests whether this key\u0027s channel is ready for writing.\n\n \u003cp\u003e An invocation of this method of the form \u003ctt\u003ek.isWritable()\u003c/tt\u003e\n behaves in exactly the same way as the expression\n\n \u003cblockquote\u003e\u003cpre\u003e{@code\n k.readyOps() \u0026 OP_WRITE !\u003d 0\n }\u003c/pre\u003e\u003c/blockquote\u003e\n\n \u003cp\u003e If this key\u0027s channel does not support write operations then this\n method always returns \u003ctt\u003efalse\u003c/tt\u003e.  \u003c/p\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"isConnectable","comment":"Tests whether this key\u0027s channel has either finished, or failed to\n finish, its socket-connection operation.\n\n \u003cp\u003e An invocation of this method of the form \u003ctt\u003ek.isConnectable()\u003c/tt\u003e\n behaves in exactly the same way as the expression\n\n \u003cblockquote\u003e\u003cpre\u003e{@code\n k.readyOps() \u0026 OP_CONNECT !\u003d 0\n }\u003c/pre\u003e\u003c/blockquote\u003e\n\n \u003cp\u003e If this key\u0027s channel does not support socket-connect operations\n then this method always returns \u003ctt\u003efalse\u003c/tt\u003e.  \u003c/p\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"isAcceptable","comment":"Tests whether this key\u0027s channel is ready to accept a new socket\n connection.\n\n \u003cp\u003e An invocation of this method of the form \u003ctt\u003ek.isAcceptable()\u003c/tt\u003e\n behaves in exactly the same way as the expression\n\n \u003cblockquote\u003e\u003cpre\u003e{@code\n k.readyOps() \u0026 OP_ACCEPT !\u003d 0\n }\u003c/pre\u003e\u003c/blockquote\u003e\n\n \u003cp\u003e If this key\u0027s channel does not support socket-accept operations then\n this method always returns \u003ctt\u003efalse\u003c/tt\u003e.  \u003c/p\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"attach","comment":"Attaches the given object to this key.\n\n \u003cp\u003e An attached object may later be retrieved via the {@link #attachment()\n attachment} method.  Only one object may be attached at a time; invoking\n this method causes any previous attachment to be discarded.  The current\n attachment may be discarded by attaching \u003ctt\u003enull\u003c/tt\u003e.  \u003c/p\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.Object)","flatSignature":"(Object)","returnType":{"isPrimitive":false,"simpleName":"Object","qualifiedName":"java.lang.Object","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"ob","type":{"isPrimitive":false,"simpleName":"Object","qualifiedName":"java.lang.Object","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"attachment","comment":"Retrieves the current attachment.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Object","qualifiedName":"java.lang.Object","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"subClasses":["java.nio.channels.spi.AbstractSelectionKey"],"enumConstants":[]}