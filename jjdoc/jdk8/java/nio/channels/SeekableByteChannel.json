{"name":"SeekableByteChannel","comment":"A byte channel that maintains a current \u003ci\u003eposition\u003c/i\u003e and allows the\n position to be changed.\n\n \u003cp\u003e A seekable byte channel is connected to an entity, typically a file,\n that contains a variable-length sequence of bytes that can be read and\n written. The current position can be {@link #position() \u003ci\u003equeried\u003c/i\u003e} and\n {@link #position(long) \u003ci\u003emodified\u003c/i\u003e}. The channel also provides access to\n the current \u003ci\u003esize\u003c/i\u003e of the entity to which the channel is connected. The\n size increases when bytes are written beyond its current size; the size\n decreases when it is {@link #truncate \u003ci\u003etruncated\u003c/i\u003e}.\n\n \u003cp\u003e The {@link #position(long) position} and {@link #truncate truncate} methods\n which do not otherwise have a value to return are specified to return the\n channel upon which they are invoked. This allows method invocations to be\n chained. Implementations of this interface should specialize the return type\n so that method invocations on the implementation class can be chained.","isClass":false,"isInterface":true,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"SeekableByteChannel","qualifiedName":"java.nio.channels.SeekableByteChannel","dimension":"","elementType":{},"package":"java.nio.channels","interfaces":["java.nio.channels.ByteChannel"],"isAbstract":true,"isStatic":false,"since":"1.7","innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"read","comment":"Reads a sequence of bytes from this channel into the given buffer.\n\n \u003cp\u003e Bytes are read starting at this channel\u0027s current position, and\n then the position is updated with the number of bytes actually read.\n Otherwise this method behaves exactly as specified in the {@link\n ReadableByteChannel} interface.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.nio.ByteBuffer)","flatSignature":"(ByteBuffer)","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"dst","type":{"isPrimitive":false,"simpleName":"ByteBuffer","qualifiedName":"java.nio.ByteBuffer","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"write","comment":"Writes a sequence of bytes to this channel from the given buffer.\n\n \u003cp\u003e Bytes are written starting at this channel\u0027s current position, unless\n the channel is connected to an entity such as a file that is opened with\n the {@link java.nio.file.StandardOpenOption#APPEND APPEND} option, in\n which case the position is first advanced to the end. The entity to which\n the channel is connected is grown, if necessary, to accommodate the\n written bytes, and then the position is updated with the number of bytes\n actually written. Otherwise this method behaves exactly as specified by\n the {@link WritableByteChannel} interface.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.nio.ByteBuffer)","flatSignature":"(ByteBuffer)","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"src","type":{"isPrimitive":false,"simpleName":"ByteBuffer","qualifiedName":"java.nio.ByteBuffer","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"position","comment":"Returns this channel\u0027s position.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"position","comment":"Sets this channel\u0027s position.\n\n \u003cp\u003e Setting the position to a value that is greater than the current size\n is legal but does not change the size of the entity.  A later attempt to\n read bytes at such a position will immediately return an end-of-file\n indication.  A later attempt to write bytes at such a position will cause\n the entity to grow to accommodate the new bytes; the values of any bytes\n between the previous end-of-file and the newly-written bytes are\n unspecified.\n\n \u003cp\u003e Setting the channel\u0027s position is not recommended when connected to\n an entity, typically a file, that is opened with the {@link\n java.nio.file.StandardOpenOption#APPEND APPEND} option. When opened for\n append, the position is first advanced to the end before writing.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(long)","flatSignature":"(long)","returnType":{"isPrimitive":false,"simpleName":"SeekableByteChannel","qualifiedName":"java.nio.channels.SeekableByteChannel","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"newPosition","type":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"size","comment":"Returns the current size of entity to which this channel is connected.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"truncate","comment":"Truncates the entity, to which this channel is connected, to the given\n size.\n\n \u003cp\u003e If the given size is less than the current size then the entity is\n truncated, discarding any bytes beyond the new end. If the given size is\n greater than or equal to the current size then the entity is not modified.\n In either case, if the current position is greater than the given size\n then it is set to that size.\n\n \u003cp\u003e An implementation of this interface may prohibit truncation when\n connected to an entity, typically a file, opened with the {@link\n java.nio.file.StandardOpenOption#APPEND APPEND} option.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(long)","flatSignature":"(long)","returnType":{"isPrimitive":false,"simpleName":"SeekableByteChannel","qualifiedName":"java.nio.channels.SeekableByteChannel","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"size","type":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}}}],"typeParameters":[]}],"typeParameters":[],"subInterfaces":["java.nio.channels.FileChannel"],"enumConstants":[]}