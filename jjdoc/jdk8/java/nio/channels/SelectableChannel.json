{"name":"SelectableChannel","comment":"A channel that can be multiplexed via a {@link Selector}.\n\n \u003cp\u003e In order to be used with a selector, an instance of this class must\n first be \u003ci\u003eregistered\u003c/i\u003e via the {@link #register(Selector,int,Object)\n register} method.  This method returns a new {@link SelectionKey} object\n that represents the channel\u0027s registration with the selector.\n\n \u003cp\u003e Once registered with a selector, a channel remains registered until it\n is \u003ci\u003ederegistered\u003c/i\u003e.  This involves deallocating whatever resources were\n allocated to the channel by the selector.\n\n \u003cp\u003e A channel cannot be deregistered directly; instead, the key representing\n its registration must be \u003ci\u003ecancelled\u003c/i\u003e.  Cancelling a key requests that\n the channel be deregistered during the selector\u0027s next selection operation.\n A key may be cancelled explicitly by invoking its {@link\n SelectionKey#cancel() cancel} method.  All of a channel\u0027s keys are cancelled\n implicitly when the channel is closed, whether by invoking its {@link\n Channel#close close} method or by interrupting a thread blocked in an I/O\n operation upon the channel.\n\n \u003cp\u003e If the selector itself is closed then the channel will be deregistered,\n and the key representing its registration will be invalidated, without\n further delay.\n\n \u003cp\u003e A channel may be registered at most once with any particular selector.\n\n \u003cp\u003e Whether or not a channel is registered with one or more selectors may be\n determined by invoking the {@link #isRegistered isRegistered} method.\n\n \u003cp\u003e Selectable channels are safe for use by multiple concurrent\n threads. \u003c/p\u003e\n\n\n \u003ca name\u003d\"bm\"\u003e\u003c/a\u003e\n \u003ch2\u003eBlocking mode\u003c/h2\u003e\n\n A selectable channel is either in \u003ci\u003eblocking\u003c/i\u003e mode or in\n \u003ci\u003enon-blocking\u003c/i\u003e mode.  In blocking mode, every I/O operation invoked\n upon the channel will block until it completes.  In non-blocking mode an I/O\n operation will never block and may transfer fewer bytes than were requested\n or possibly no bytes at all.  The blocking mode of a selectable channel may\n be determined by invoking its {@link #isBlocking isBlocking} method.\n\n \u003cp\u003e Newly-created selectable channels are always in blocking mode.\n Non-blocking mode is most useful in conjunction with selector-based\n multiplexing.  A channel must be placed into non-blocking mode before being\n registered with a selector, and may not be returned to blocking mode until\n it has been deregistered.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"SelectableChannel","qualifiedName":"java.nio.channels.SelectableChannel","dimension":"","elementType":{},"package":"java.nio.channels","superclass":"java.nio.channels.spi.AbstractInterruptibleChannel","interfaces":["java.nio.channels.Channel"],"isAbstract":true,"isStatic":false,"since":"1.4","innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"provider","comment":"Returns the provider that created this channel.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"SelectorProvider","qualifiedName":"java.nio.channels.spi.SelectorProvider","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"validOps","comment":"Returns an \u003ca href\u003d\"SelectionKey.html#opsets\"\u003eoperation set\u003c/a\u003e\n identifying this channel\u0027s supported operations.  The bits that are set\n in this integer value denote exactly the operations that are valid for\n this channel.  This method always returns the same value for a given\n concrete channel class.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"isRegistered","comment":"Tells whether or not this channel is currently registered with any\n selectors.  A newly-created channel is not registered.\n\n \u003cp\u003e Due to the inherent delay between key cancellation and channel\n deregistration, a channel may remain registered for some time after all\n of its keys have been cancelled.  A channel may also remain registered\n for some time after it is closed.  \u003c/p\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"keyFor","comment":"Retrieves the key representing the channel\u0027s registration with the given\n selector.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.nio.channels.Selector)","flatSignature":"(Selector)","returnType":{"isPrimitive":false,"simpleName":"SelectionKey","qualifiedName":"java.nio.channels.SelectionKey","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"sel","type":{"isPrimitive":false,"simpleName":"Selector","qualifiedName":"java.nio.channels.Selector","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"register","comment":"Registers this channel with the given selector, returning a selection\n key.\n\n \u003cp\u003e If this channel is currently registered with the given selector then\n the selection key representing that registration is returned.  The key\u0027s\n interest set will have been changed to \u003ctt\u003eops\u003c/tt\u003e, as if by invoking\n the {@link SelectionKey#interestOps(int) interestOps(int)} method.  If\n the \u003ctt\u003eatt\u003c/tt\u003e argument is not \u003ctt\u003enull\u003c/tt\u003e then the key\u0027s attachment\n will have been set to that value.  A {@link CancelledKeyException} will\n be thrown if the key has already been cancelled.\n\n \u003cp\u003e Otherwise this channel has not yet been registered with the given\n selector, so it is registered and the resulting new key is returned.\n The key\u0027s initial interest set will be \u003ctt\u003eops\u003c/tt\u003e and its attachment\n will be \u003ctt\u003eatt\u003c/tt\u003e.\n\n \u003cp\u003e This method may be invoked at any time.  If this method is invoked\n while another invocation of this method or of the {@link\n #configureBlocking(boolean) configureBlocking} method is in progress\n then it will first block until the other operation is complete.  This\n method will then synchronize on the selector\u0027s key set and therefore may\n block if invoked concurrently with another registration or selection\n operation involving the same selector. \u003c/p\u003e\n\n \u003cp\u003e If this channel is closed while this operation is in progress then\n the key returned by this method will have been cancelled and will\n therefore be invalid. \u003c/p\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.nio.channels.Selector, int, java.lang.Object)","flatSignature":"(Selector, int, Object)","returnType":{"isPrimitive":false,"simpleName":"SelectionKey","qualifiedName":"java.nio.channels.SelectionKey","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"sel","type":{"isPrimitive":false,"simpleName":"Selector","qualifiedName":"java.nio.channels.Selector","dimension":"","elementType":{}}},{"name":"ops","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"att","type":{"isPrimitive":false,"simpleName":"Object","qualifiedName":"java.lang.Object","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"register","comment":"Registers this channel with the given selector, returning a selection\n key.\n\n \u003cp\u003e An invocation of this convenience method of the form\n\n \u003cblockquote\u003e\u003ctt\u003esc.register(sel, ops)\u003c/tt\u003e\u003c/blockquote\u003e\n\n behaves in exactly the same way as the invocation\n\n \u003cblockquote\u003e\u003ctt\u003esc.{@link\n #register(java.nio.channels.Selector,int,java.lang.Object)\n register}(sel, ops, null)\u003c/tt\u003e\u003c/blockquote\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.nio.channels.Selector, int)","flatSignature":"(Selector, int)","returnType":{"isPrimitive":false,"simpleName":"SelectionKey","qualifiedName":"java.nio.channels.SelectionKey","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"sel","type":{"isPrimitive":false,"simpleName":"Selector","qualifiedName":"java.nio.channels.Selector","dimension":"","elementType":{}}},{"name":"ops","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"configureBlocking","comment":"Adjusts this channel\u0027s blocking mode.\n\n \u003cp\u003e If this channel is registered with one or more selectors then an\n attempt to place it into blocking mode will cause an {@link\n IllegalBlockingModeException} to be thrown.\n\n \u003cp\u003e This method may be invoked at any time.  The new blocking mode will\n only affect I/O operations that are initiated after this method returns.\n For some implementations this may require blocking until all pending I/O\n operations are complete.\n\n \u003cp\u003e If this method is invoked while another invocation of this method or\n of the {@link #register(Selector, int) register} method is in progress\n then it will first block until the other operation is complete. \u003c/p\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(boolean)","flatSignature":"(boolean)","returnType":{"isPrimitive":false,"simpleName":"SelectableChannel","qualifiedName":"java.nio.channels.SelectableChannel","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"block","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"isBlocking","comment":"Tells whether or not every I/O operation on this channel will block\n until it completes.  A newly-created channel is always in blocking mode.\n\n \u003cp\u003e If this channel is closed then the value returned by this method is\n not specified. \u003c/p\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"blockingLock","comment":"Retrieves the object upon which the {@link #configureBlocking\n configureBlocking} and {@link #register register} methods synchronize.\n This is often useful in the implementation of adaptors that require a\n specific blocking mode to be maintained for a short period of time.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Object","qualifiedName":"java.lang.Object","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"subClasses":["java.nio.channels.spi.AbstractSelectableChannel"],"enumConstants":[]}