{"name":"MembershipKey","comment":"A token representing the membership of an Internet Protocol (IP) multicast\n group.\n\n \u003cp\u003e A membership key may represent a membership to receive all datagrams sent\n to the group, or it may be \u003cem\u003esource-specific\u003c/em\u003e, meaning that it\n represents a membership that receives only datagrams from a specific source\n address. Whether or not a membership key is source-specific may be determined\n by invoking its {@link #sourceAddress() sourceAddress} method.\n\n \u003cp\u003e A membership key is valid upon creation and remains valid until the\n membership is dropped by invoking the {@link #drop() drop} method, or\n the channel is closed. The validity of the membership key may be tested\n by invoking its {@link #isValid() isValid} method.\n\n \u003cp\u003e Where a membership key is not source-specific and the underlying operation\n system supports source filtering, then the {@link #block block} and {@link\n #unblock unblock} methods can be used to block or unblock multicast datagrams\n from particular source addresses.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"MembershipKey","qualifiedName":"java.nio.channels.MembershipKey","dimension":"","elementType":{},"package":"java.nio.channels","superclass":"java.lang.Object","interfaces":[],"isAbstract":true,"isStatic":false,"since":"1.7","innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"isValid","comment":"Tells whether or not this membership is valid.\n\n \u003cp\u003e A multicast group membership is valid upon creation and remains\n valid until the membership is dropped by invoking the {@link #drop() drop}\n method, or the channel is closed.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"drop","comment":"Drop membership.\n\n \u003cp\u003e If the membership key represents a membership to receive all datagrams\n then the membership is dropped and the channel will no longer receive any\n datagrams sent to the group. If the membership key is source-specific\n then the channel will no longer receive datagrams sent to the group from\n that source address.\n\n \u003cp\u003e After membership is dropped it may still be possible to receive\n datagrams sent to the group. This can arise when datagrams are waiting to\n be received in the socket\u0027s receive buffer. After membership is dropped\n then the channel may {@link MulticastChannel#join join} the group again\n in which case a new membership key is returned.\n\n \u003cp\u003e Upon return, this membership object will be {@link #isValid() invalid}.\n If the multicast group membership is already invalid then invoking this\n method has no effect. Once a multicast group membership is invalid,\n it remains invalid forever.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"block","comment":"Block multicast datagrams from the given source address.\n\n \u003cp\u003e If this membership key is not source-specific, and the underlying\n operating system supports source filtering, then this method blocks\n multicast datagrams from the given source address. If the given source\n address is already blocked then this method has no effect.\n After a source address is blocked it may still be possible to receive\n datagrams from that source. This can arise when datagrams are waiting to\n be received in the socket\u0027s receive buffer.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.net.InetAddress)","flatSignature":"(InetAddress)","returnType":{"isPrimitive":false,"simpleName":"MembershipKey","qualifiedName":"java.nio.channels.MembershipKey","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"source","type":{"isPrimitive":false,"simpleName":"InetAddress","qualifiedName":"java.net.InetAddress","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"unblock","comment":"Unblock multicast datagrams from the given source address that was\n previously blocked using the {@link #block(InetAddress) block} method.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.net.InetAddress)","flatSignature":"(InetAddress)","returnType":{"isPrimitive":false,"simpleName":"MembershipKey","qualifiedName":"java.nio.channels.MembershipKey","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"source","type":{"isPrimitive":false,"simpleName":"InetAddress","qualifiedName":"java.net.InetAddress","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"channel","comment":"Returns the channel for which this membership key was created. This\n method will continue to return the channel even after the membership\n becomes {@link #isValid invalid}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"MulticastChannel","qualifiedName":"java.nio.channels.MulticastChannel","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"group","comment":"Returns the multicast group for which this membership key was created.\n This method will continue to return the group even after the membership\n becomes {@link #isValid invalid}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"InetAddress","qualifiedName":"java.net.InetAddress","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"networkInterface","comment":"Returns the network interface for which this membership key was created.\n This method will continue to return the network interface even after the\n membership becomes {@link #isValid invalid}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"NetworkInterface","qualifiedName":"java.net.NetworkInterface","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"sourceAddress","comment":"Returns the source address if this membership key is source-specific,\n or {@code null} if this membership is not source-specific.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"InetAddress","qualifiedName":"java.net.InetAddress","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}