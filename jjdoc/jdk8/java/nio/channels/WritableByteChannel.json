{"name":"WritableByteChannel","comment":"A channel that can write bytes.\n\n \u003cp\u003e Only one write operation upon a writable channel may be in progress at\n any given time.  If one thread initiates a write operation upon a channel\n then any other thread that attempts to initiate another write operation will\n block until the first operation is complete.  Whether or not other kinds of\n I/O operations may proceed concurrently with a write operation depends upon\n the type of the channel. \u003c/p\u003e","isClass":false,"isInterface":true,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"WritableByteChannel","qualifiedName":"java.nio.channels.WritableByteChannel","dimension":"","elementType":{},"package":"java.nio.channels","interfaces":["java.nio.channels.Channel"],"isAbstract":true,"isStatic":false,"since":"1.4","innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"write","comment":"Writes a sequence of bytes to this channel from the given buffer.\n\n \u003cp\u003e An attempt is made to write up to \u003ci\u003er\u003c/i\u003e bytes to the channel,\n where \u003ci\u003er\u003c/i\u003e is the number of bytes remaining in the buffer, that is,\n \u003ctt\u003esrc.remaining()\u003c/tt\u003e, at the moment this method is invoked.\n\n \u003cp\u003e Suppose that a byte sequence of length \u003ci\u003en\u003c/i\u003e is written, where\n \u003ctt\u003e0\u003c/tt\u003e\u0026nbsp;\u003ctt\u003e\u0026lt;\u003d\u003c/tt\u003e\u0026nbsp;\u003ci\u003en\u003c/i\u003e\u0026nbsp;\u003ctt\u003e\u0026lt;\u003d\u003c/tt\u003e\u0026nbsp;\u003ci\u003er\u003c/i\u003e.\n This byte sequence will be transferred from the buffer starting at index\n \u003ci\u003ep\u003c/i\u003e, where \u003ci\u003ep\u003c/i\u003e is the buffer\u0027s position at the moment this\n method is invoked; the index of the last byte written will be\n \u003ci\u003ep\u003c/i\u003e\u0026nbsp;\u003ctt\u003e+\u003c/tt\u003e\u0026nbsp;\u003ci\u003en\u003c/i\u003e\u0026nbsp;\u003ctt\u003e-\u003c/tt\u003e\u0026nbsp;\u003ctt\u003e1\u003c/tt\u003e.\n Upon return the buffer\u0027s position will be equal to\n \u003ci\u003ep\u003c/i\u003e\u0026nbsp;\u003ctt\u003e+\u003c/tt\u003e\u0026nbsp;\u003ci\u003en\u003c/i\u003e; its limit will not have changed.\n\n \u003cp\u003e Unless otherwise specified, a write operation will return only after\n writing all of the \u003ci\u003er\u003c/i\u003e requested bytes.  Some types of channels,\n depending upon their state, may write only some of the bytes or possibly\n none at all.  A socket channel in non-blocking mode, for example, cannot\n write any more bytes than are free in the socket\u0027s output buffer.\n\n \u003cp\u003e This method may be invoked at any time.  If another thread has\n already initiated a write operation upon this channel, however, then an\n invocation of this method will block until the first operation is\n complete. \u003c/p\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.nio.ByteBuffer)","flatSignature":"(ByteBuffer)","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"src","type":{"isPrimitive":false,"simpleName":"ByteBuffer","qualifiedName":"java.nio.ByteBuffer","dimension":"","elementType":{}}}],"typeParameters":[]}],"typeParameters":[],"subInterfaces":["java.nio.channels.ByteChannel","java.nio.channels.GatheringByteChannel","java.nio.channels.Pipe.SinkChannel"],"enumConstants":[]}