{"name":"FileTypeDetector","comment":"A file type detector for probing a file to guess its file type.\n\n \u003cp\u003e A file type detector is a concrete implementation of this class, has a\n zero-argument constructor, and implements the abstract methods specified\n below.\n\n \u003cp\u003e The means by which a file type detector determines the file type is\n highly implementation specific. A simple implementation might examine the\n \u003cem\u003efile extension\u003c/em\u003e (a convention used in some platforms) and map it to\n a file type. In other cases, the file type may be stored as a file \u003ca\n href\u003d\"../attribute/package-summary.html\"\u003e attribute\u003c/a\u003e or the bytes in a\n file may be examined to guess its file type.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"FileTypeDetector","qualifiedName":"java.nio.file.spi.FileTypeDetector","dimension":"","elementType":{},"package":"java.nio.file.spi","superclass":"java.lang.Object","interfaces":[],"isAbstract":true,"isStatic":false,"since":"1.7","innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"probeContentType","comment":"Probes the given file to guess its content type.\n\n \u003cp\u003e The means by which this method determines the file type is highly\n implementation specific. It may simply examine the file name, it may use\n a file \u003ca href\u003d\"../attribute/package-summary.html\"\u003eattribute\u003c/a\u003e,\n or it may examines bytes in the file.\n\n \u003cp\u003e The probe result is the string form of the value of a\n Multipurpose Internet Mail Extension (MIME) content type as\n defined by \u003ca href\u003d\"http://www.ietf.org/rfc/rfc2045.txt\"\u003e\u003ci\u003eRFC\u0026nbsp;2045:\n Multipurpose Internet Mail Extensions (MIME) Part One: Format of Internet\n Message Bodies\u003c/i\u003e\u003c/a\u003e. The string must be parsable according to the\n grammar in the RFC 2045.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.nio.file.Path)","flatSignature":"(Path)","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"path","type":{"isPrimitive":false,"simpleName":"Path","qualifiedName":"java.nio.file.Path","dimension":"","elementType":{}}}],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}