{"name":"FileOwnerAttributeView","comment":"A file attribute view that supports reading or updating the owner of a file.\n This file attribute view is intended for file system implementations that\n support a file attribute that represents an identity that is the owner of\n the file. Often the owner of a file is the identity of the entity that\n created the file.\n\n \u003cp\u003e The {@link #getOwner getOwner} or {@link #setOwner setOwner} methods may\n be used to read or update the owner of the file.\n\n \u003cp\u003e The {@link java.nio.file.Files#getAttribute getAttribute} and\n {@link java.nio.file.Files#setAttribute setAttribute} methods may also be\n used to read or update the owner. In that case, the owner attribute is\n identified by the name {@code \"owner\"}, and the value of the attribute is\n a {@link UserPrincipal}.","isClass":false,"isInterface":true,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"FileOwnerAttributeView","qualifiedName":"java.nio.file.attribute.FileOwnerAttributeView","dimension":"","elementType":{},"package":"java.nio.file.attribute","interfaces":["java.nio.file.attribute.FileAttributeView"],"isAbstract":true,"isStatic":false,"since":"1.7","innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"name","comment":"Returns the name of the attribute view. Attribute views of this type\n have the name {@code \"owner\"}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getOwner","comment":"Read the file owner.\n\n \u003cp\u003e It it implementation specific if the file owner can be a {@link\n GroupPrincipal group}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"UserPrincipal","qualifiedName":"java.nio.file.attribute.UserPrincipal","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setOwner","comment":"Updates the file owner.\n\n \u003cp\u003e It it implementation specific if the file owner can be a {@link\n GroupPrincipal group}. To ensure consistent and correct behavior\n across platforms it is recommended that this method should only be used\n to set the file owner to a user principal that is not a group.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.nio.file.attribute.UserPrincipal)","flatSignature":"(UserPrincipal)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"owner","type":{"isPrimitive":false,"simpleName":"UserPrincipal","qualifiedName":"java.nio.file.attribute.UserPrincipal","dimension":"","elementType":{}}}],"typeParameters":[]}],"typeParameters":[],"subInterfaces":["java.nio.file.attribute.PosixFileAttributeView","java.nio.file.attribute.AclFileAttributeView"],"enumConstants":[]}