{"name":"UserPrincipal","comment":"A {@code Principal} representing an identity used to determine access rights\n to objects in a file system.\n\n \u003cp\u003e On many platforms and file systems an entity requires appropriate access\n rights or permissions in order to access objects in a file system. The\n access rights are generally performed by checking the identity of the entity.\n For example, on implementations that use Access Control Lists (ACLs) to\n enforce privilege separation then a file in the file system may have an\n associated ACL that determines the access rights of identities specified in\n the ACL.\n\n \u003cp\u003e A {@code UserPrincipal} object is an abstract representation of an\n identity. It has a {@link #getName() name} that is typically the username or\n account name that it represents. User principal objects may be obtained using\n a {@link UserPrincipalLookupService}, or returned by {@link\n FileAttributeView} implementations that provide access to identity related\n attributes. For example, the {@link AclFileAttributeView} and {@link\n PosixFileAttributeView} provide access to a file\u0027s {@link\n PosixFileAttributes#owner owner}.","isClass":false,"isInterface":true,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"UserPrincipal","qualifiedName":"java.nio.file.attribute.UserPrincipal","dimension":"","elementType":{},"package":"java.nio.file.attribute","interfaces":["java.security.Principal"],"isAbstract":true,"isStatic":false,"since":"1.7","innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[],"typeParameters":[],"subInterfaces":["java.nio.file.attribute.GroupPrincipal"],"enumConstants":[]}