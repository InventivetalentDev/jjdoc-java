{"name":"DosFileAttributeView","comment":"A file attribute view that provides a view of the legacy \"DOS\" file attributes.\n These attributes are supported by file systems such as the File Allocation\n Table (FAT) format commonly used in \u003cem\u003econsumer devices\u003c/em\u003e.\n\n \u003cp\u003e A {@code DosFileAttributeView} is a {@link BasicFileAttributeView} that\n additionally supports access to the set of DOS attribute flags that are used\n to indicate if the file is read-only, hidden, a system file, or archived.\n\n \u003cp\u003e Where dynamic access to file attributes is required, the attributes\n supported by this attribute view are as defined by {@code\n BasicFileAttributeView}, and in addition, the following attributes are\n supported:\n \u003cblockquote\u003e\n \u003ctable border\u003d\"1\" cellpadding\u003d\"8\" summary\u003d\"Supported attributes\"\u003e\n   \u003ctr\u003e\n     \u003cth\u003e Name \u003c/th\u003e\n     \u003cth\u003e Type \u003c/th\u003e\n   \u003c/tr\u003e\n   \u003ctr\u003e\n     \u003ctd\u003e readonly \u003c/td\u003e\n     \u003ctd\u003e {@link Boolean} \u003c/td\u003e\n   \u003c/tr\u003e\n   \u003ctr\u003e\n     \u003ctd\u003e hidden \u003c/td\u003e\n     \u003ctd\u003e {@link Boolean} \u003c/td\u003e\n   \u003c/tr\u003e\n   \u003ctr\u003e\n     \u003ctd\u003e system \u003c/td\u003e\n     \u003ctd\u003e {@link Boolean} \u003c/td\u003e\n   \u003c/tr\u003e\n   \u003ctr\u003e\n     \u003ctd\u003e archive \u003c/td\u003e\n     \u003ctd\u003e {@link Boolean} \u003c/td\u003e\n   \u003c/tr\u003e\n \u003c/table\u003e\n \u003c/blockquote\u003e\n\n \u003cp\u003e The {@link java.nio.file.Files#getAttribute getAttribute} method may\n be used to read any of these attributes, or any of the attributes defined by\n {@link BasicFileAttributeView} as if by invoking the {@link #readAttributes\n readAttributes()} method.\n\n \u003cp\u003e The {@link java.nio.file.Files#setAttribute setAttribute} method may\n be used to update the file\u0027s last modified time, last access time or create\n time attributes as defined by {@link BasicFileAttributeView}. It may also be\n used to update the DOS attributes as if by invoking the {@link #setReadOnly\n setReadOnly}, {@link #setHidden setHidden}, {@link #setSystem setSystem}, and\n {@link #setArchive setArchive} methods respectively.","isClass":false,"isInterface":true,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"DosFileAttributeView","qualifiedName":"java.nio.file.attribute.DosFileAttributeView","dimension":"","elementType":{},"package":"java.nio.file.attribute","interfaces":["java.nio.file.attribute.BasicFileAttributeView"],"isAbstract":true,"isStatic":false,"since":"1.7","innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"name","comment":"Returns the name of the attribute view. Attribute views of this type\n have the name {@code \"dos\"}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"readAttributes","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"DosFileAttributes","qualifiedName":"java.nio.file.attribute.DosFileAttributes","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setReadOnly","comment":"Updates the value of the read-only attribute.\n\n \u003cp\u003e It is implementation specific if the attribute can be updated as an\n atomic operation with respect to other file system operations. An\n implementation may, for example, require to read the existing value of\n the DOS attribute in order to update this attribute.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(boolean)","flatSignature":"(boolean)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"value","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"setHidden","comment":"Updates the value of the hidden attribute.\n\n \u003cp\u003e It is implementation specific if the attribute can be updated as an\n atomic operation with respect to other file system operations. An\n implementation may, for example, require to read the existing value of\n the DOS attribute in order to update this attribute.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(boolean)","flatSignature":"(boolean)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"value","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"setSystem","comment":"Updates the value of the system attribute.\n\n \u003cp\u003e It is implementation specific if the attribute can be updated as an\n atomic operation with respect to other file system operations. An\n implementation may, for example, require to read the existing value of\n the DOS attribute in order to update this attribute.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(boolean)","flatSignature":"(boolean)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"value","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"setArchive","comment":"Updates the value of the archive attribute.\n\n \u003cp\u003e It is implementation specific if the attribute can be updated as an\n atomic operation with respect to other file system operations. An\n implementation may, for example, require to read the existing value of\n the DOS attribute in order to update this attribute.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(boolean)","flatSignature":"(boolean)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"value","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}