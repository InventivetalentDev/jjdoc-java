{"name":"Watchable","comment":"An object that may be registered with a watch service so that it can be\n \u003cem\u003ewatched\u003c/em\u003e for changes and events.\n\n \u003cp\u003e This interface defines the {@link #register register} method to register\n the object with a {@link WatchService} returning a {@link WatchKey} to\n represent the registration. An object may be registered with more than one\n watch service. Registration with a watch service is cancelled by invoking the\n key\u0027s {@link WatchKey#cancel cancel} method.","isClass":false,"isInterface":true,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"Watchable","qualifiedName":"java.nio.file.Watchable","dimension":"","elementType":{},"package":"java.nio.file","interfaces":[],"isAbstract":true,"isStatic":false,"since":"1.7","innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"register","comment":"Registers an object with a watch service.\n\n \u003cp\u003e If the file system object identified by this object is currently\n registered with the watch service then the watch key, representing that\n registration, is returned after changing the event set or modifiers to\n those specified by the {@code events} and {@code modifiers} parameters.\n Changing the event set does not cause pending events for the object to be\n discarded. Objects are automatically registered for the {@link\n StandardWatchEventKinds#OVERFLOW OVERFLOW} event. This event is not\n required to be present in the array of events.\n\n \u003cp\u003e Otherwise the file system object has not yet been registered with the\n given watch service, so it is registered and the resulting new key is\n returned.\n\n \u003cp\u003e Implementations of this interface should specify the events they\n support.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.nio.file.WatchService, java.nio.file.WatchEvent.Kind\u003c?\u003e[], java.nio.file.WatchEvent.Modifier...)","flatSignature":"(WatchService, WatchEvent.Kind\u003c?\u003e[], WatchEvent.Modifier...)","returnType":{"isPrimitive":false,"simpleName":"WatchKey","qualifiedName":"java.nio.file.WatchKey","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"watcher","type":{"isPrimitive":false,"simpleName":"WatchService","qualifiedName":"java.nio.file.WatchService","dimension":"","elementType":{}}},{"name":"events","type":{"isPrimitive":false,"simpleName":"Kind","qualifiedName":"java.nio.file.WatchEvent.Kind","dimension":"[]","elementType":{"isPrimitive":false,"simpleName":"Kind","qualifiedName":"java.nio.file.WatchEvent.Kind","dimension":"","elementType":{}}}},{"name":"modifiers","type":{"isPrimitive":false,"simpleName":"Modifier","qualifiedName":"java.nio.file.WatchEvent.Modifier","dimension":"[]","elementType":{"isPrimitive":false,"simpleName":"Modifier","qualifiedName":"java.nio.file.WatchEvent.Modifier","dimension":"","elementType":{}}}}],"typeParameters":[]},{"name":"register","comment":"Registers an object with a watch service.\n\n \u003cp\u003e An invocation of this method behaves in exactly the same way as the\n invocation\n \u003cpre\u003e\n     watchable.{@link #register(WatchService,WatchEvent.Kind[],WatchEvent.Modifier[]) register}(watcher, events, new WatchEvent.Modifier[0]);\n \u003c/pre\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.nio.file.WatchService, java.nio.file.WatchEvent.Kind\u003c?\u003e...)","flatSignature":"(WatchService, WatchEvent.Kind\u003c?\u003e...)","returnType":{"isPrimitive":false,"simpleName":"WatchKey","qualifiedName":"java.nio.file.WatchKey","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"watcher","type":{"isPrimitive":false,"simpleName":"WatchService","qualifiedName":"java.nio.file.WatchService","dimension":"","elementType":{}}},{"name":"events","type":{"isPrimitive":false,"simpleName":"Kind","qualifiedName":"java.nio.file.WatchEvent.Kind","dimension":"[]","elementType":{"isPrimitive":false,"simpleName":"Kind","qualifiedName":"java.nio.file.WatchEvent.Kind","dimension":"","elementType":{}}}}],"typeParameters":[]}],"typeParameters":[],"subInterfaces":["java.nio.file.Path"],"enumConstants":[]}